{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `prachains_common`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":257,"byte_end":273,"line_start":8,"line_end":8,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use prachains_common::message_queue::ParaIdToSibling;","highlight_start":5,"highlight_end":21}],"label":"use of undeclared crate or module `prachains_common`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a crate or module with a similar name","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":257,"byte_end":273,"line_start":8,"line_end":8,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use prachains_common::message_queue::ParaIdToSibling;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":"parachains_common","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `prachains_common`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse prachains_common::message_queue::ParaIdToSibling;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `prachains_common`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a crate or module with a similar name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10mparachains_common\u001b[0m\u001b[0m::message_queue::ParaIdToSibling;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `sp_version`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":3810,"byte_end":3820,"line_start":108,"line_end":108,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"#[sp_version::runtime_version]","highlight_start":3,"highlight_end":13}],"label":"use of undeclared crate or module `sp_version`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `sp_version`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:108:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[sp_version::runtime_version]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `sp_version`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find macro `create_runtime_str` in this scope","code":null,"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":3904,"byte_end":3922,"line_start":110,"line_end":110,"column_start":13,"column_end":31,"is_primary":true,"text":[{"text":"\tspec_name: create_runtime_str!(\"parachain\"),","highlight_start":13,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this macro","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use sp_runtime::create_runtime_str;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `create_runtime_str` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:110:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    spec_name: create_runtime_str!(\"parachain\"),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this macro\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use sp_runtime::create_runtime_str;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find macro `create_runtime_str` in this scope","code":null,"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":3950,"byte_end":3968,"line_start":111,"line_end":111,"column_start":13,"column_end":31,"is_primary":true,"text":[{"text":"\timpl_name: create_runtime_str!(\"parachain\"),","highlight_start":13,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this macro","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use sp_runtime::create_runtime_str;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `create_runtime_str` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:111:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    impl_name: create_runtime_str!(\"parachain\"),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this macro\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use sp_runtime::create_runtime_str;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `RuntimeVersion` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":3858,"byte_end":3872,"line_start":109,"line_end":109,"column_start":20,"column_end":34,"is_primary":true,"text":[{"text":"pub const VERSION: RuntimeVersion = RuntimeVersion {","highlight_start":20,"highlight_end":34}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `RuntimeVersion` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:109:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const VERSION: RuntimeVersion = RuntimeVersion {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find struct, variant or union type `RuntimeVersion` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":3875,"byte_end":3889,"line_start":109,"line_end":109,"column_start":37,"column_end":51,"is_primary":true,"text":[{"text":"pub const VERSION: RuntimeVersion = RuntimeVersion {","highlight_start":37,"highlight_end":51}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `RuntimeVersion` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:109:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const VERSION: RuntimeVersion = RuntimeVersion {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `RUNTIME_API_VERSIONS` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":4050,"byte_end":4070,"line_start":115,"line_end":115,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"\tapis: RUNTIME_API_VERSIONS,","highlight_start":8,"highlight_end":28}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RUNTIME_API_VERSIONS` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:115:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    apis: RUNTIME_API_VERSIONS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `Version` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":4298,"byte_end":4305,"line_start":124,"line_end":124,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"\ttype Version = Version;","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might have meant to use the associated type","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":4298,"byte_end":4298,"line_start":124,"line_end":124,"column_start":17,"column_end":17,"is_primary":true,"text":[{"text":"\ttype Version = Version;","highlight_start":17,"highlight_end":17}],"label":null,"suggested_replacement":"Self::","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this type alias","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use xcm::Version;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Version` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:124:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type Version = Version;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might have meant to use the associated type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    type Version = \u001b[0m\u001b[0m\u001b[38;5;10mSelf::\u001b[0m\u001b[0mVersion;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this type alias\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use xcm::Version;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `RelayOrigin` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":4675,"byte_end":4686,"line_start":135,"line_end":135,"column_start":73,"column_end":84,"is_primary":true,"text":[{"text":"\ttype DmpQueue = frame_support::traits::EnqueueWithOrigin<MessageQueue, RelayOrigin>;","highlight_start":73,"highlight_end":84}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":4389,"byte_end":4389,"line_start":130,"line_end":130,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"impl cumulus_pallet_parachain_system::Config for Test {","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"<RelayOrigin>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `RelayOrigin` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:135:73\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type DmpQueue = frame_support::traits::EnqueueWithOrigin<MessageQueue, RelayOrigin>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might be missing a type parameter\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl\u001b[0m\u001b[0m\u001b[38;5;10m<RelayOrigin>\u001b[0m\u001b[0m cumulus_pallet_parachain_system::Config for Test {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `SENT_MESSAGES` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":5175,"byte_end":5188,"line_start":150,"line_end":150,"column_start":3,"column_end":16,"is_primary":true,"text":[{"text":"\t\tSENT_MESSAGES.with(|ms| {","highlight_start":3,"highlight_end":16}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `SENT_MESSAGES` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:150:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SENT_MESSAGES.with(|ms| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `Pallet` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":5251,"byte_end":5257,"line_start":152,"line_end":152,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"\t\t\t\tlet status = <Pallet<Test> as GetChannelInfo>::get_channel_status(m.0);","highlight_start":19,"highlight_end":25}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::test::relay::hrmp::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use cumulus_pallet_dmp_queue::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use cumulus_pallet_parachain_system::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use cumulus_pallet_xcm::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use cumulus_pallet_xcmp_queue::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use frame_support_test::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use frame_system::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use pallet_babe::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use pallet_balances::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use pallet_message_queue::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use pallet_nfts::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use pallet_timestamp::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use pallet_xcm::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use parachain_info::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_common::assigned_slots::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_common::auctions::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_common::claims::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_common::crowdloan::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_common::identity_migrator::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_common::paras_registrar::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_common::paras_sudo_wrapper::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_common::purchase::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_common::slots::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::assigner_coretime::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::assigner_on_demand::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::assigner_parachains::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::configuration::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::coretime::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::disputes::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::disputes::slashing::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::dmp::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::hrmp::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::inclusion::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::initializer::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::origin::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::paras::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::paras_inherent::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::scheduler::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::session_info::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::shared::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use xcm_simulator::dmp::Pallet;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Pallet` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:152:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let status = <Pallet<Test> as GetChannelInfo>::get_channel_status(m.0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::Pallet;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::test::relay::hrmp::Pallet;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use cumulus_pallet_dmp_queue::Pallet;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use cumulus_pallet_parachain_system::Pallet;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m      and 38 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `CONSENSUS_HOOK` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":6040,"byte_end":6054,"line_start":183,"line_end":183,"column_start":3,"column_end":17,"is_primary":true,"text":[{"text":"\t\tCONSENSUS_HOOK.with(|f| f.borrow_mut()(s))","highlight_start":3,"highlight_end":17}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CONSENSUS_HOOK` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:183:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        CONSENSUS_HOOK.with(|f| f.borrow_mut()(s))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `AggregateMessageOrigin` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":11409,"byte_end":11431,"line_start":340,"line_end":340,"column_start":49,"column_end":71,"is_primary":true,"text":[{"text":"\ttype XcmpQueue = TransformOrigin<MessageQueue, AggregateMessageOrigin, ParaId, ParaIdToSibling>;","highlight_start":49,"highlight_end":71}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use cumulus_primitives_core::AggregateMessageOrigin;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use polkadot_runtime_parachains::inclusion::AggregateMessageOrigin;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use xcm_simulator::AggregateMessageOrigin;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `AggregateMessageOrigin` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:340:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type XcmpQueue = TransformOrigin<MessageQueue, AggregateMessageOrigin, ParaId, ParaIdToSibling>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use cumulus_primitives_core::AggregateMessageOrigin;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use polkadot_runtime_parachains::inclusion::AggregateMessageOrigin;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use xcm_simulator::AggregateMessageOrigin;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `XcmOriginToTransactDispatchOrigin` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":11595,"byte_end":11628,"line_start":343,"line_end":343,"column_start":35,"column_end":68,"is_primary":true,"text":[{"text":"\ttype ControllerOriginConverter = XcmOriginToTransactDispatchOrigin;","highlight_start":35,"highlight_end":68}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `XcmOriginToTransactDispatchOrigin` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:343:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m343\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ControllerOriginConverter = XcmOriginToTransactDispatchOrigin;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected type, found variant `AccountId32`","code":{"code":"E0573","explanation":"Something other than a type has been used when one was expected.\n\nErroneous code examples:\n\n```compile_fail,E0573\nenum Dragon {\n    Born,\n}\n\nfn oblivion() -> Dragon::Born { // error!\n    Dragon::Born\n}\n\nconst HOBBIT: u32 = 2;\nimpl HOBBIT {} // error!\n\nenum Wizard {\n    Gandalf,\n    Saruman,\n}\n\ntrait Isengard {\n    fn wizard(_: Wizard::Saruman); // error!\n}\n```\n\nIn all these errors, a type was expected. For example, in the first error, if\nwe want to return the `Born` variant from the `Dragon` enum, we must set the\nfunction to return the enum and not its variant:\n\n```\nenum Dragon {\n    Born,\n}\n\nfn oblivion() -> Dragon { // ok!\n    Dragon::Born\n}\n```\n\nIn the second error, you can't implement something on an item, only on types.\nWe would need to create a new type if we wanted to do something similar:\n\n```\nstruct Hobbit(u32); // we create a new type\n\nconst HOBBIT: Hobbit = Hobbit(2);\nimpl Hobbit {} // ok!\n```\n\nIn the third case, we tried to only expect one variant of the `Wizard` enum,\nwhich is not possible. To make this work, we need to using pattern matching\nover the `Wizard` enum:\n\n```\nenum Wizard {\n    Gandalf,\n    Saruman,\n}\n\ntrait Isengard {\n    fn wizard(w: Wizard) { // ok!\n        match w {\n            Wizard::Saruman => {\n                // do something\n            }\n            _ => {} // ignore everything else\n        }\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":1865,"byte_end":1952,"line_start":60,"line_end":60,"column_start":1,"column_end":88,"is_primary":false,"text":[{"text":"pub type AccountId = <AccountPublic as sp_runtime::traits::IdentifyAccount>::AccountId;","highlight_start":1,"highlight_end":88}],"label":"similarly named type alias `AccountId` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/mock/relay.rs","byte_start":4474,"byte_end":4485,"line_start":148,"line_end":148,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"\ttype AccountId = AccountId32;","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a type alias with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":4474,"byte_end":4485,"line_start":148,"line_end":148,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"\ttype AccountId = AccountId32;","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":"AccountId","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing one of these items instead","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::mock::AccountId32;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/relay.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use sp_core::crypto::AccountId32;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/relay.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use sp_runtime::AccountId32;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0573]\u001b[0m\u001b[0m\u001b[1m: expected type, found variant `AccountId32`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:148:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type AccountId = <AccountPublic as sp_runtime::traits::IdentifyAccount>::AccountId;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named type alias `AccountId` defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type AccountId = AccountId32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a type alias with a similar name exists\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    type AccountId = \u001b[0m\u001b[0m\u001b[38;5;10mAccountId\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::mock::AccountId32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use sp_core::crypto::AccountId32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use sp_runtime::AccountId32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find trait `HandleMessage` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":13875,"byte_end":13888,"line_start":465,"line_end":465,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"impl HandleMessage for RecordingDmpSink {","highlight_start":6,"highlight_end":19}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this trait","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use frame_support::traits::HandleMessage;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `HandleMessage` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:465:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m465\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl HandleMessage for RecordingDmpSink {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use frame_support::traits::HandleMessage;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `BoundedSlice` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":13973,"byte_end":13985,"line_start":468,"line_end":468,"column_start":25,"column_end":37,"is_primary":true,"text":[{"text":"\tfn handle_message(msg: BoundedSlice<u8, Self::MaxMessageLen>) {","highlight_start":25,"highlight_end":37}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use frame_support::BoundedSlice;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/relay.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use sp_core::bounded_vec::BoundedSlice;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/relay.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use sp_runtime::BoundedSlice;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `BoundedSlice` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:468:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m468\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn handle_message(msg: BoundedSlice<u8, Self::MaxMessageLen>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use frame_support::BoundedSlice;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use sp_core::bounded_vec::BoundedSlice;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use sp_runtime::BoundedSlice;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `BoundedSlice` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":14120,"byte_end":14132,"line_start":472,"line_end":472,"column_start":49,"column_end":61,"is_primary":true,"text":[{"text":"\tfn handle_messages<'a>(_: impl Iterator<Item = BoundedSlice<'a, u8, Self::MaxMessageLen>>) {","highlight_start":49,"highlight_end":61}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use frame_support::BoundedSlice;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/relay.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use sp_core::bounded_vec::BoundedSlice;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/mock/relay.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use sp_runtime::BoundedSlice;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `BoundedSlice` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:472:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m472\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn handle_messages<'a>(_: impl Iterator<Item = BoundedSlice<'a, u8, Self::MaxMessageLen>>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use frame_support::BoundedSlice;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use sp_core::bounded_vec::BoundedSlice;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use sp_runtime::BoundedSlice;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `T` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":19627,"byte_end":19628,"line_start":662,"line_end":662,"column_start":34,"column_end":35,"is_primary":true,"text":[{"text":"\tpub paras: paras::GenesisConfig<T>,","highlight_start":34,"highlight_end":35}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":19493,"byte_end":19493,"line_start":659,"line_end":659,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"pub struct MockGenesisConfig {","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"<T>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `T` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:662:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m662\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub paras: paras::GenesisConfig<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might be missing a type parameter\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m659\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct MockGenesisConfig\u001b[0m\u001b[0m\u001b[38;5;10m<T>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `cumulus_pallet_parachain_system::RelayNumberStrictlyIncreases`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/para.rs","byte_start":403,"byte_end":464,"line_start":11,"line_end":11,"column_start":5,"column_end":66,"is_primary":true,"text":[{"text":"use cumulus_pallet_parachain_system::RelayNumberStrictlyIncreases;","highlight_start":5,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":399,"byte_end":465,"line_start":11,"line_end":11,"column_start":1,"column_end":67,"is_primary":true,"text":[{"text":"use cumulus_pallet_parachain_system::RelayNumberStrictlyIncreases;","highlight_start":1,"highlight_end":67}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `cumulus_pallet_parachain_system::RelayNumberStrictlyIncreases`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cumulus_pallet_parachain_system::RelayNumberStrictlyIncreases;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `ConstU128`, `ConstU16`, `Currency`, `DispatchResult`, `Nothing`, `RocksDbWeight`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/para.rs","byte_start":538,"byte_end":552,"line_start":14,"line_end":14,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"\tpallet_prelude::{DispatchResult, Get},","highlight_start":19,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/mock/para.rs","byte_start":614,"byte_end":623,"line_start":17,"line_end":17,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"\t\tAsEnsureOriginWithArg, ConstU128, ConstU16, ConstU32, ConstU64, Currency, Everything,","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/mock/para.rs","byte_start":625,"byte_end":633,"line_start":17,"line_end":17,"column_start":37,"column_end":45,"is_primary":true,"text":[{"text":"\t\tAsEnsureOriginWithArg, ConstU128, ConstU16, ConstU32, ConstU64, Currency, Everything,","highlight_start":37,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/mock/para.rs","byte_start":655,"byte_end":663,"line_start":17,"line_end":17,"column_start":67,"column_end":75,"is_primary":true,"text":[{"text":"\t\tAsEnsureOriginWithArg, ConstU128, ConstU16, ConstU32, ConstU64, Currency, Everything,","highlight_start":67,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/mock/para.rs","byte_start":679,"byte_end":686,"line_start":18,"line_end":18,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"\t\tNothing,","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/mock/para.rs","byte_start":714,"byte_end":727,"line_start":20,"line_end":20,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"\tweights::constants::{RocksDbWeight, WEIGHT_REF_TIME_PER_SECOND},","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":538,"byte_end":554,"line_start":14,"line_end":14,"column_start":19,"column_end":35,"is_primary":true,"text":[{"text":"\tpallet_prelude::{DispatchResult, Get},","highlight_start":19,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/mock/para.rs","byte_start":612,"byte_end":633,"line_start":17,"line_end":17,"column_start":24,"column_end":45,"is_primary":true,"text":[{"text":"\t\tAsEnsureOriginWithArg, ConstU128, ConstU16, ConstU32, ConstU64, Currency, Everything,","highlight_start":24,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/mock/para.rs","byte_start":653,"byte_end":663,"line_start":17,"line_end":17,"column_start":65,"column_end":75,"is_primary":true,"text":[{"text":"\t\tAsEnsureOriginWithArg, ConstU128, ConstU16, ConstU32, ConstU64, Currency, Everything,","highlight_start":65,"highlight_end":75}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/mock/para.rs","byte_start":675,"byte_end":686,"line_start":17,"line_end":18,"column_start":87,"column_end":10,"is_primary":true,"text":[{"text":"\t\tAsEnsureOriginWithArg, ConstU128, ConstU16, ConstU32, ConstU64, Currency, Everything,","highlight_start":87,"highlight_end":88},{"text":"\t\tNothing,","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/mock/para.rs","byte_start":714,"byte_end":729,"line_start":20,"line_end":20,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"\tweights::constants::{RocksDbWeight, WEIGHT_REF_TIME_PER_SECOND},","highlight_start":23,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `ConstU128`, `ConstU16`, `Currency`, `DispatchResult`, `Nothing`, `RocksDbWeight`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:14:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pallet_prelude::{DispatchResult, Get},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        AsEnsureOriginWithArg, ConstU128, ConstU16, ConstU32, ConstU64, Currency, Everything,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Nothing,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    },\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    weights::constants::{RocksDbWeight, WEIGHT_REF_TIME_PER_SECOND},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `EnsureRootWithSuccess`, `EnsureSigned`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/para.rs","byte_start":792,"byte_end":813,"line_start":22,"line_end":22,"column_start":32,"column_end":53,"is_primary":true,"text":[{"text":"use frame_system::{EnsureRoot, EnsureRootWithSuccess, EnsureSigned};","highlight_start":32,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/mock/para.rs","byte_start":815,"byte_end":827,"line_start":22,"line_end":22,"column_start":55,"column_end":67,"is_primary":true,"text":[{"text":"use frame_system::{EnsureRoot, EnsureRootWithSuccess, EnsureSigned};","highlight_start":55,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":790,"byte_end":827,"line_start":22,"line_end":22,"column_start":30,"column_end":67,"is_primary":true,"text":[{"text":"use frame_system::{EnsureRoot, EnsureRootWithSuccess, EnsureSigned};","highlight_start":30,"highlight_end":67}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `EnsureRootWithSuccess`, `EnsureSigned`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:22:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse frame_system::{EnsureRoot, EnsureRootWithSuccess, EnsureSigned};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BoundedVec`, `generic`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/para.rs","byte_start":902,"byte_end":909,"line_start":24,"line_end":24,"column_start":18,"column_end":25,"is_primary":true,"text":[{"text":"use sp_runtime::{generic, BoundedVec};","highlight_start":18,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/mock/para.rs","byte_start":911,"byte_end":921,"line_start":24,"line_end":24,"column_start":27,"column_end":37,"is_primary":true,"text":[{"text":"use sp_runtime::{generic, BoundedVec};","highlight_start":27,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":885,"byte_end":923,"line_start":24,"line_end":24,"column_start":1,"column_end":39,"is_primary":true,"text":[{"text":"use sp_runtime::{generic, BoundedVec};","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BoundedVec`, `generic`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:24:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse sp_runtime::{generic, BoundedVec};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::Config`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/para.rs","byte_start":1275,"byte_end":1288,"line_start":35,"line_end":35,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use crate::Config;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":1271,"byte_end":1289,"line_start":35,"line_end":35,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"use crate::Config;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::Config`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:35:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::Config;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `paras::ParaGenesisArgs`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/relay.rs","byte_start":531,"byte_end":553,"line_start":17,"line_end":17,"column_start":25,"column_end":47,"is_primary":true,"text":[{"text":"\tdmp as parachains_dmp, paras::ParaGenesisArgs, schedule_para_initialize,","highlight_start":25,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":529,"byte_end":553,"line_start":17,"line_end":17,"column_start":23,"column_end":47,"is_primary":true,"text":[{"text":"\tdmp as parachains_dmp, paras::ParaGenesisArgs, schedule_para_initialize,","highlight_start":23,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `paras::ParaGenesisArgs`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:17:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    dmp as parachains_dmp, paras::ParaGenesisArgs, schedule_para_initialize,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `sp_core::H256`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/relay.rs","byte_start":2036,"byte_end":2049,"line_start":63,"line_end":63,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use sp_core::H256;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":2032,"byte_end":2050,"line_start":63,"line_end":63,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"use sp_core::H256;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `sp_core::H256`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:63:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse sp_core::H256;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `ChildParachainAsNative`, `CurrencyAdapter as XcmCurrencyAdapter`, `IsConcrete`, `SignedAccountId32AsNative`, `SovereignSignedViaLocation`, `UsingComponents`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/relay.rs","byte_start":2470,"byte_end":2492,"line_start":77,"line_end":77,"column_start":34,"column_end":56,"is_primary":true,"text":[{"text":"\tAllowTopLevelPaidExecutionFrom, ChildParachainAsNative,","highlight_start":34,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/mock/relay.rs","byte_start":2522,"byte_end":2559,"line_start":78,"line_end":78,"column_start":29,"column_end":66,"is_primary":true,"text":[{"text":"\tChildParachainConvertsVia, CurrencyAdapter as XcmCurrencyAdapter, FixedWeightBounds,","highlight_start":29,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/mock/relay.rs","byte_start":2581,"byte_end":2591,"line_start":79,"line_end":79,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tIsConcrete, SignedAccountId32AsNative, SignedToAccountId32, SovereignSignedViaLocation,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/mock/relay.rs","byte_start":2593,"byte_end":2618,"line_start":79,"line_end":79,"column_start":14,"column_end":39,"is_primary":true,"text":[{"text":"\tIsConcrete, SignedAccountId32AsNative, SignedToAccountId32, SovereignSignedViaLocation,","highlight_start":14,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/mock/relay.rs","byte_start":2641,"byte_end":2667,"line_start":79,"line_end":79,"column_start":62,"column_end":88,"is_primary":true,"text":[{"text":"\tIsConcrete, SignedAccountId32AsNative, SignedToAccountId32, SovereignSignedViaLocation,","highlight_start":62,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/mock/relay.rs","byte_start":2688,"byte_end":2703,"line_start":80,"line_end":80,"column_start":20,"column_end":35,"is_primary":true,"text":[{"text":"\tTakeWeightCredit, UsingComponents,","highlight_start":20,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":2468,"byte_end":2492,"line_start":77,"line_end":77,"column_start":32,"column_end":56,"is_primary":true,"text":[{"text":"\tAllowTopLevelPaidExecutionFrom, ChildParachainAsNative,","highlight_start":32,"highlight_end":56}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/mock/relay.rs","byte_start":2520,"byte_end":2559,"line_start":78,"line_end":78,"column_start":27,"column_end":66,"is_primary":true,"text":[{"text":"\tChildParachainConvertsVia, CurrencyAdapter as XcmCurrencyAdapter, FixedWeightBounds,","highlight_start":27,"highlight_end":66}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/mock/relay.rs","byte_start":2578,"byte_end":2618,"line_start":78,"line_end":79,"column_start":85,"column_end":39,"is_primary":true,"text":[{"text":"\tChildParachainConvertsVia, CurrencyAdapter as XcmCurrencyAdapter, FixedWeightBounds,","highlight_start":85,"highlight_end":86},{"text":"\tIsConcrete, SignedAccountId32AsNative, SignedToAccountId32, SovereignSignedViaLocation,","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/mock/relay.rs","byte_start":2639,"byte_end":2667,"line_start":79,"line_end":79,"column_start":60,"column_end":88,"is_primary":true,"text":[{"text":"\tIsConcrete, SignedAccountId32AsNative, SignedToAccountId32, SovereignSignedViaLocation,","highlight_start":60,"highlight_end":88}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/mock/relay.rs","byte_start":2686,"byte_end":2703,"line_start":80,"line_end":80,"column_start":18,"column_end":35,"is_primary":true,"text":[{"text":"\tTakeWeightCredit, UsingComponents,","highlight_start":18,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `ChildParachainAsNative`, `CurrencyAdapter as XcmCurrencyAdapter`, `IsConcrete`, `SignedAccountId32AsNative`, `SovereignSignedViaLocation`, `UsingComponents`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:77:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AllowTopLevelPaidExecutionFrom, ChildParachainAsNative,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ChildParachainConvertsVia, CurrencyAdapter as XcmCurrencyAdapter, FixedWeightBounds,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IsConcrete, SignedAccountId32AsNative, SignedToAccountId32, SovereignSignedViaLocation,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    TakeWeightCredit, UsingComponents,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BlockNumber`, `Configuration`, `MockGenesisConfig`, `ParasShared`, `Paras`, `RuntimeEvent as MockEvent`, `System`, `hrmp::HrmpChannels`, `new_test_ext`, `register_parachain_with_balance`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test.rs","byte_start":59,"byte_end":71,"line_start":5,"line_end":5,"column_start":3,"column_end":15,"is_primary":true,"text":[{"text":"\t\tnew_test_ext, Configuration, MockGenesisConfig, Paras, ParasShared,","highlight_start":3,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":73,"byte_end":86,"line_start":5,"line_end":5,"column_start":17,"column_end":30,"is_primary":true,"text":[{"text":"\t\tnew_test_ext, Configuration, MockGenesisConfig, Paras, ParasShared,","highlight_start":17,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":88,"byte_end":105,"line_start":5,"line_end":5,"column_start":32,"column_end":49,"is_primary":true,"text":[{"text":"\t\tnew_test_ext, Configuration, MockGenesisConfig, Paras, ParasShared,","highlight_start":32,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":107,"byte_end":112,"line_start":5,"line_end":5,"column_start":51,"column_end":56,"is_primary":true,"text":[{"text":"\t\tnew_test_ext, Configuration, MockGenesisConfig, Paras, ParasShared,","highlight_start":51,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":114,"byte_end":125,"line_start":5,"line_end":5,"column_start":58,"column_end":69,"is_primary":true,"text":[{"text":"\t\tnew_test_ext, Configuration, MockGenesisConfig, Paras, ParasShared,","highlight_start":58,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":129,"byte_end":154,"line_start":6,"line_end":6,"column_start":3,"column_end":28,"is_primary":true,"text":[{"text":"\t\tRuntimeEvent as MockEvent, System, Test,","highlight_start":3,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":156,"byte_end":162,"line_start":6,"line_end":6,"column_start":30,"column_end":36,"is_primary":true,"text":[{"text":"\t\tRuntimeEvent as MockEvent, System, Test,","highlight_start":30,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":185,"byte_end":203,"line_start":9,"line_end":9,"column_start":3,"column_end":21,"is_primary":true,"text":[{"text":"\t\thrmp::HrmpChannels,","highlight_start":3,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":244,"byte_end":275,"line_start":11,"line_end":11,"column_start":17,"column_end":48,"is_primary":true,"text":[{"text":"\t\trelay::{hrmp, register_parachain_with_balance, BlockNumber},","highlight_start":17,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":277,"byte_end":288,"line_start":11,"line_end":11,"column_start":50,"column_end":61,"is_primary":true,"text":[{"text":"\t\trelay::{hrmp, register_parachain_with_balance, BlockNumber},","highlight_start":50,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/test.rs","byte_start":59,"byte_end":164,"line_start":5,"line_end":6,"column_start":3,"column_end":38,"is_primary":true,"text":[{"text":"\t\tnew_test_ext, Configuration, MockGenesisConfig, Paras, ParasShared,","highlight_start":3,"highlight_end":70},{"text":"\t\tRuntimeEvent as MockEvent, System, Test,","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/test.rs","byte_start":185,"byte_end":207,"line_start":9,"line_end":10,"column_start":3,"column_end":3,"is_primary":true,"text":[{"text":"\t\thrmp::HrmpChannels,","highlight_start":3,"highlight_end":22},{"text":"\t\tpara::RuntimeOrigin,","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/test.rs","byte_start":242,"byte_end":288,"line_start":11,"line_end":11,"column_start":15,"column_end":61,"is_primary":true,"text":[{"text":"\t\trelay::{hrmp, register_parachain_with_balance, BlockNumber},","highlight_start":15,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BlockNumber`, `Configuration`, `MockGenesisConfig`, `ParasShared`, `Paras`, `RuntimeEvent as MockEvent`, `System`, `hrmp::HrmpChannels`, `new_test_ext`, `register_parachain_with_balance`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:5:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        new_test_ext, Configuration, MockGenesisConfig, Paras, ParasShared,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        RuntimeEvent as MockEvent, System, Test,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        hrmp::HrmpChannels,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        para::RuntimeOrigin,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        relay::{hrmp, register_parachain_with_balance, BlockNumber},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `cumulus_primitives_core::ParaId`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test.rs","byte_start":328,"byte_end":359,"line_start":15,"line_end":15,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use cumulus_primitives_core::ParaId;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/test.rs","byte_start":324,"byte_end":360,"line_start":15,"line_end":15,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use cumulus_primitives_core::ParaId;","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `cumulus_primitives_core::ParaId`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cumulus_primitives_core::ParaId;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `pallet_prelude::DispatchResult`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test.rs","byte_start":405,"byte_end":435,"line_start":16,"line_end":16,"column_start":45,"column_end":75,"is_primary":true,"text":[{"text":"use frame_support::{assert_noop, assert_ok, pallet_prelude::DispatchResult, traits::Currency};","highlight_start":45,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/test.rs","byte_start":403,"byte_end":435,"line_start":16,"line_end":16,"column_start":43,"column_end":75,"is_primary":true,"text":[{"text":"use frame_support::{assert_noop, assert_ok, pallet_prelude::DispatchResult, traits::Currency};","highlight_start":43,"highlight_end":75}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `pallet_prelude::DispatchResult`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:16:45\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse frame_support::{assert_noop, assert_ok, pallet_prelude::DispatchResult, traits::Currency};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `frame_support_test::pallet_prelude::OriginFor`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test.rs","byte_start":460,"byte_end":505,"line_start":17,"line_end":17,"column_start":5,"column_end":50,"is_primary":true,"text":[{"text":"use frame_support_test::pallet_prelude::OriginFor;","highlight_start":5,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/test.rs","byte_start":456,"byte_end":506,"line_start":17,"line_end":17,"column_start":1,"column_end":51,"is_primary":true,"text":[{"text":"use frame_support_test::pallet_prelude::OriginFor;","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `frame_support_test::pallet_prelude::OriginFor`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:17:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse frame_support_test::pallet_prelude::OriginFor;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `mock::relay::Hrmp`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test.rs","byte_start":511,"byte_end":528,"line_start":18,"line_end":18,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use mock::relay::Hrmp;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/test.rs","byte_start":507,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"use mock::relay::Hrmp;","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `mock::relay::Hrmp`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:18:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse mock::relay::Hrmp;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `HrmpChannelId`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test.rs","byte_start":624,"byte_end":637,"line_start":21,"line_end":21,"column_start":49,"column_end":62,"is_primary":true,"text":[{"text":"use polkadot_parachain_primitives::primitives::{HrmpChannelId, Sibling};","highlight_start":49,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/test.rs","byte_start":624,"byte_end":639,"line_start":21,"line_end":21,"column_start":49,"column_end":64,"is_primary":true,"text":[{"text":"use polkadot_parachain_primitives::primitives::{HrmpChannelId, Sibling};","highlight_start":49,"highlight_end":64}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `HrmpChannelId`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:21:49\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse polkadot_parachain_primitives::primitives::{HrmpChannelId, Sibling};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Origin`, `hrmp as OtherModule`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test.rs","byte_start":683,"byte_end":702,"line_start":22,"line_end":22,"column_start":35,"column_end":54,"is_primary":true,"text":[{"text":"use polkadot_runtime_parachains::{hrmp as OtherModule, Origin};","highlight_start":35,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":704,"byte_end":710,"line_start":22,"line_end":22,"column_start":56,"column_end":62,"is_primary":true,"text":[{"text":"use polkadot_runtime_parachains::{hrmp as OtherModule, Origin};","highlight_start":56,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/test.rs","byte_start":649,"byte_end":712,"line_start":22,"line_end":22,"column_start":1,"column_end":64,"is_primary":true,"text":[{"text":"use polkadot_runtime_parachains::{hrmp as OtherModule, Origin};","highlight_start":1,"highlight_end":64}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Origin`, `hrmp as OtherModule`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:22:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse polkadot_runtime_parachains::{hrmp as OtherModule, Origin};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated trait `frame_support::traits::GenesisBuild`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/mod.rs","byte_start":163,"byte_end":175,"line_start":9,"line_end":9,"column_start":28,"column_end":40,"is_primary":true,"text":[{"text":"use frame_support::traits::GenesisBuild;","highlight_start":28,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(deprecated)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated trait `frame_support::traits::GenesisBuild`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:9:28\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse frame_support::traits::GenesisBuild;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(deprecated)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated method `frame_support::traits::GenesisBuild::assimilate_storage`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/mod.rs","byte_start":1844,"byte_end":1862,"line_start":69,"line_end":69,"column_start":60,"column_end":78,"is_primary":true,"text":[{"text":"\t<parachain_info::GenesisConfig as GenesisBuild<Test, _>>::assimilate_storage(","highlight_start":60,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated method `frame_support::traits::GenesisBuild::assimilate_storage`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:69:60\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    <parachain_info::GenesisConfig as GenesisBuild<Test, _>>::assimilate_storage(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated method `frame_support::traits::GenesisBuild::assimilate_storage`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/mod.rs","byte_start":2346,"byte_end":2364,"line_start":86,"line_end":86,"column_start":60,"column_end":78,"is_primary":true,"text":[{"text":"\t<parachain_info::GenesisConfig as GenesisBuild<Test, _>>::assimilate_storage(","highlight_start":60,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated method `frame_support::traits::GenesisBuild::assimilate_storage`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:86:60\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    <parachain_info::GenesisConfig as GenesisBuild<Test, _>>::assimilate_storage(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `mock::para::WhereSection::_w`: \n\t\tIt is deprecated to use a `where` clause in `construct_runtime`.\n\t\tPlease instead use `frame_system::Config` to set the `Block` type and delete this clause.\n\t\tIt is planned to be removed in December 2023.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/14437>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":20053,"byte_end":20125,"line_start":649,"line_end":652,"column_start":11,"column_end":10,"is_primary":true,"text":[{"text":"        $($caller)::* ! {","highlight_start":11,"highlight_end":26},{"text":"            $($state)*","highlight_start":1,"highlight_end":23},{"text":"            $($append)*","highlight_start":1,"highlight_end":24},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":20053,"byte_end":20125,"line_start":649,"line_end":652,"column_start":11,"column_end":10,"is_primary":false,"text":[{"text":"        $($caller)::* ! {","highlight_start":11,"highlight_end":26},{"text":"            $($state)*","highlight_start":1,"highlight_end":23},{"text":"            $($append)*","highlight_start":1,"highlight_end":24},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":19734,"byte_end":19863,"line_start":633,"line_end":638,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::private_return! {","highlight_start":9,"highlight_end":34},{"text":"            $caller","highlight_start":1,"highlight_end":20},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $output = [{ $($tokens)* }]","highlight_start":1,"highlight_end":44},{"text":"            )*","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":3280,"byte_end":6255119,"line_start":89,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":3280,"byte_end":6255119,"line_start":89,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":3280,"byte_end":3805,"line_start":89,"line_end":106,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"construct_runtime!(","highlight_start":1,"highlight_end":20},{"text":"\tpub enum Test where","highlight_start":1,"highlight_end":21},{"text":"\t\tBlock = Block,","highlight_start":1,"highlight_end":17},{"text":"\t\tNodeBlock = Block,","highlight_start":1,"highlight_end":21},{"text":"\t\tUncheckedExtrinsic = UncheckedExtrinsics,","highlight_start":1,"highlight_end":44},{"text":"\t{","highlight_start":1,"highlight_end":3},{"text":"\t\tSystem: frame_system::{Pallet, Call, Config, Storage, Event<T>},","highlight_start":1,"highlight_end":67},{"text":"\t\tBalances: pallet_balances,","highlight_start":1,"highlight_end":29},{"text":"\t\tParachainInfo: parachain_info,","highlight_start":1,"highlight_end":33},{"text":"\t\tXcmpQueue: cumulus_pallet_xcmp_queue,","highlight_start":1,"highlight_end":40},{"text":"\t\tDmpQueue: cumulus_pallet_dmp_queue,","highlight_start":1,"highlight_end":38},{"text":"\t\tCumulusXcm: cumulus_pallet_xcm,","highlight_start":1,"highlight_end":34},{"text":"\t\tPolkadotXcm: pallet_xcm,","highlight_start":1,"highlight_end":27},{"text":"\t\tXnft: pallet_xnft,","highlight_start":1,"highlight_end":21},{"text":"\t\tParachainSystem: cumulus_pallet_parachain_system,","highlight_start":1,"highlight_end":52},{"text":"\t\tNFT:pallet_nfts::{Pallet, Call, Storage, Event<T>},","highlight_start":1,"highlight_end":54},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::__private::tt_return!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":19594,"byte_end":19616,"line_start":626,"line_end":626,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! tt_return {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::private_return!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":19905,"byte_end":19932,"line_start":644,"line_end":644,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"macro_rules! private_return {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::match_and_insert!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":16125,"byte_end":16183,"line_start":433,"line_end":433,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"pub fn match_and_insert(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `mock::para::WhereSection::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use a `where` clause in `construct_runtime`.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead use `frame_system::Config` to set the `Block` type and delete this clause.\u001b[0m\n\u001b[0m\u001b[1m                 It is planned to be removed in December 2023.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/14437>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:89:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mconstruct_runtime!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum Test where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Block = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        NodeBlock = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `frame_support::match_and_insert` which comes from the expansion of the macro `construct_runtime` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated trait `frame_support::traits::GenesisBuild`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/relay.rs","byte_start":759,"byte_end":771,"line_start":26,"line_end":26,"column_start":45,"column_end":57,"is_primary":true,"text":[{"text":"\t\tConstU32, ConstU64, Currency, Everything, GenesisBuild, Nothing,","highlight_start":45,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated trait `frame_support::traits::GenesisBuild`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:26:45\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ConstU32, ConstU64, Currency, Everything, GenesisBuild, Nothing,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated struct `staging_xcm_builder::CurrencyAdapter`: Use `FungibleAdapter` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/relay.rs","byte_start":2522,"byte_end":2537,"line_start":78,"line_end":78,"column_start":29,"column_end":44,"is_primary":true,"text":[{"text":"\tChildParachainConvertsVia, CurrencyAdapter as XcmCurrencyAdapter, FixedWeightBounds,","highlight_start":29,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated struct `staging_xcm_builder::CurrencyAdapter`: Use `FungibleAdapter` instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:78:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ChildParachainConvertsVia, CurrencyAdapter as XcmCurrencyAdapter, FixedWeightBounds,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `mock::relay::WhereSection::_w`: \n\t\tIt is deprecated to use a `where` clause in `construct_runtime`.\n\t\tPlease instead use `frame_system::Config` to set the `Block` type and delete this clause.\n\t\tIt is planned to be removed in December 2023.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/14437>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":20053,"byte_end":20125,"line_start":649,"line_end":652,"column_start":11,"column_end":10,"is_primary":true,"text":[{"text":"        $($caller)::* ! {","highlight_start":11,"highlight_end":26},{"text":"            $($state)*","highlight_start":1,"highlight_end":23},{"text":"            $($append)*","highlight_start":1,"highlight_end":24},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":20053,"byte_end":20125,"line_start":649,"line_end":652,"column_start":11,"column_end":10,"is_primary":false,"text":[{"text":"        $($caller)::* ! {","highlight_start":11,"highlight_end":26},{"text":"            $($state)*","highlight_start":1,"highlight_end":23},{"text":"            $($append)*","highlight_start":1,"highlight_end":24},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":19734,"byte_end":19863,"line_start":633,"line_end":638,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::private_return! {","highlight_start":9,"highlight_end":34},{"text":"            $caller","highlight_start":1,"highlight_end":20},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $output = [{ $($tokens)* }]","highlight_start":1,"highlight_end":44},{"text":"            )*","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":3422,"byte_end":6240227,"line_start":108,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":3422,"byte_end":6240227,"line_start":108,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":3422,"byte_end":4112,"line_start":108,"line_end":135,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"construct_runtime!(","highlight_start":1,"highlight_end":20},{"text":"\tpub enum Test where","highlight_start":1,"highlight_end":21},{"text":"\t\tBlock = Block,","highlight_start":1,"highlight_end":17},{"text":"\t\tNodeBlock = Block,","highlight_start":1,"highlight_end":21},{"text":"\t\tUncheckedExtrinsic = UncheckedExtrinsics,","highlight_start":1,"highlight_end":44},{"text":"\t{","highlight_start":1,"highlight_end":3},{"text":"\t\tSystem: frame_system::{Pallet, Call, Config, Storage, Event<T>},","highlight_start":1,"highlight_end":67},{"text":"\t\tBalances: pallet_balances,","highlight_start":1,"highlight_end":29},{"text":"\t\tParasOrigin: origin,","highlight_start":1,"highlight_end":23},{"text":"\t\tMessageQueue: pallet_message_queue,","highlight_start":1,"highlight_end":38},{"text":"\t\tXcmPallet: pallet_xcm,","highlight_start":1,"highlight_end":25},{"text":"\t\tParaInclusion: inclusion,","highlight_start":1,"highlight_end":28},{"text":"\t\tParas: paras,","highlight_start":1,"highlight_end":16},{"text":"\t\tXnft: pallet_xnft,","highlight_start":1,"highlight_end":21},{"text":"\t\tDisputes: disputes,","highlight_start":1,"highlight_end":22},{"text":"\t\tScheduler: scheduler,","highlight_start":1,"highlight_end":24},{"text":"\t\tConfiguration: configuration,","highlight_start":1,"highlight_end":32},{"text":"\t\tParasShared: shared,","highlight_start":1,"highlight_end":23},{"text":"\t\tParasSudoWrapperCall:paras_sudo_wrapper,","highlight_start":1,"highlight_end":43},{"text":"\t\tDmp: parachains_dmp,","highlight_start":1,"highlight_end":23},{"text":"\t\tNFT:pallet_nfts,","highlight_start":1,"highlight_end":19},{"text":"\t\tCumulusXcm: cumulus_pallet_xcm,","highlight_start":1,"highlight_end":34},{"text":"\t\tDmpQueue: cumulus_pallet_dmp_queue,","highlight_start":1,"highlight_end":38},{"text":"\t\tXcmpQueue: cumulus_pallet_xcmp_queue,","highlight_start":1,"highlight_end":40},{"text":"\t\tHrmp: hrmp,","highlight_start":1,"highlight_end":14},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":"","highlight_start":1,"highlight_end":1},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::__private::tt_return!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":19594,"byte_end":19616,"line_start":626,"line_end":626,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! tt_return {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::private_return!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":19905,"byte_end":19932,"line_start":644,"line_end":644,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"macro_rules! private_return {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::match_and_insert!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":16125,"byte_end":16183,"line_start":433,"line_end":433,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"pub fn match_and_insert(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `mock::relay::WhereSection::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use a `where` clause in `construct_runtime`.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead use `frame_system::Config` to set the `Block` type and delete this clause.\u001b[0m\n\u001b[0m\u001b[1m                 It is planned to be removed in December 2023.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/14437>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:108:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mconstruct_runtime!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum Test where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Block = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        NodeBlock = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `frame_support::match_and_insert` which comes from the expansion of the macro `construct_runtime` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated method `frame_support::traits::GenesisBuild::assimilate_storage`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/relay.rs","byte_start":18589,"byte_end":18607,"line_start":620,"line_end":620,"column_start":24,"column_end":42,"is_primary":true,"text":[{"text":"\tGenesisBuild::<Test>::assimilate_storage(&state.paras, &mut t).unwrap();","highlight_start":24,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated method `frame_support::traits::GenesisBuild::assimilate_storage`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:620:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m620\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GenesisBuild::<Test>::assimilate_storage(&state.paras, &mut t).unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"missing generics for struct `frame_system::GenesisConfig`","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":3280,"byte_end":6255119,"line_start":89,"line_end":652,"column_start":1,"column_end":10,"is_primary":true,"text":[],"label":"expected 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":3280,"byte_end":6255119,"line_start":89,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":3280,"byte_end":3805,"line_start":89,"line_end":106,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"construct_runtime!(","highlight_start":1,"highlight_end":20},{"text":"\tpub enum Test where","highlight_start":1,"highlight_end":21},{"text":"\t\tBlock = Block,","highlight_start":1,"highlight_end":17},{"text":"\t\tNodeBlock = Block,","highlight_start":1,"highlight_end":21},{"text":"\t\tUncheckedExtrinsic = UncheckedExtrinsics,","highlight_start":1,"highlight_end":44},{"text":"\t{","highlight_start":1,"highlight_end":3},{"text":"\t\tSystem: frame_system::{Pallet, Call, Config, Storage, Event<T>},","highlight_start":1,"highlight_end":67},{"text":"\t\tBalances: pallet_balances,","highlight_start":1,"highlight_end":29},{"text":"\t\tParachainInfo: parachain_info,","highlight_start":1,"highlight_end":33},{"text":"\t\tXcmpQueue: cumulus_pallet_xcmp_queue,","highlight_start":1,"highlight_end":40},{"text":"\t\tDmpQueue: cumulus_pallet_dmp_queue,","highlight_start":1,"highlight_end":38},{"text":"\t\tCumulusXcm: cumulus_pallet_xcm,","highlight_start":1,"highlight_end":34},{"text":"\t\tPolkadotXcm: pallet_xcm,","highlight_start":1,"highlight_end":27},{"text":"\t\tXnft: pallet_xnft,","highlight_start":1,"highlight_end":21},{"text":"\t\tParachainSystem: cumulus_pallet_parachain_system,","highlight_start":1,"highlight_end":52},{"text":"\t\tNFT:pallet_nfts::{Pallet, Call, Storage, Event<T>},","highlight_start":1,"highlight_end":54},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"struct defined here, with 1 generic parameter: `T`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/system/src/lib.rs","byte_start":36458,"byte_end":36459,"line_start":1000,"line_end":1000,"column_start":27,"column_end":28,"is_primary":false,"text":[{"text":"\tpub struct GenesisConfig<T: Config> {","highlight_start":27,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/system/src/lib.rs","byte_start":36444,"byte_end":36457,"line_start":1000,"line_end":1000,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"\tpub struct GenesisConfig<T: Config> {","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":20125,"byte_end":20125,"line_start":652,"line_end":652,"column_start":10,"column_end":10,"is_primary":true,"text":[{"text":"        }","highlight_start":10,"highlight_end":10}],"label":null,"suggested_replacement":"<T>","suggestion_applicability":"HasPlaceholders","expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":3280,"byte_end":6255119,"line_start":89,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":3280,"byte_end":6255119,"line_start":89,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":3280,"byte_end":3805,"line_start":89,"line_end":106,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"construct_runtime!(","highlight_start":1,"highlight_end":20},{"text":"\tpub enum Test where","highlight_start":1,"highlight_end":21},{"text":"\t\tBlock = Block,","highlight_start":1,"highlight_end":17},{"text":"\t\tNodeBlock = Block,","highlight_start":1,"highlight_end":21},{"text":"\t\tUncheckedExtrinsic = UncheckedExtrinsics,","highlight_start":1,"highlight_end":44},{"text":"\t{","highlight_start":1,"highlight_end":3},{"text":"\t\tSystem: frame_system::{Pallet, Call, Config, Storage, Event<T>},","highlight_start":1,"highlight_end":67},{"text":"\t\tBalances: pallet_balances,","highlight_start":1,"highlight_end":29},{"text":"\t\tParachainInfo: parachain_info,","highlight_start":1,"highlight_end":33},{"text":"\t\tXcmpQueue: cumulus_pallet_xcmp_queue,","highlight_start":1,"highlight_end":40},{"text":"\t\tDmpQueue: cumulus_pallet_dmp_queue,","highlight_start":1,"highlight_end":38},{"text":"\t\tCumulusXcm: cumulus_pallet_xcm,","highlight_start":1,"highlight_end":34},{"text":"\t\tPolkadotXcm: pallet_xcm,","highlight_start":1,"highlight_end":27},{"text":"\t\tXnft: pallet_xnft,","highlight_start":1,"highlight_end":21},{"text":"\t\tParachainSystem: cumulus_pallet_parachain_system,","highlight_start":1,"highlight_end":52},{"text":"\t\tNFT:pallet_nfts::{Pallet, Call, Storage, Event<T>},","highlight_start":1,"highlight_end":54},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: missing generics for struct `frame_system::GenesisConfig`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:89:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mconstruct_runtime!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum Test where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Block = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        NodeBlock = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 1 generic parameter: `T`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/system/src/lib.rs:1000:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1000\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct GenesisConfig<T: Config> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `frame_support::construct_runtime` which comes from the expansion of the macro `construct_runtime` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs:652:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m652\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        }\u001b[0m\u001b[0m\u001b[38;5;10m<T>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"missing generics for struct `frame_system::GenesisConfig`","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":3422,"byte_end":6240227,"line_start":108,"line_end":652,"column_start":1,"column_end":10,"is_primary":true,"text":[],"label":"expected 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":3422,"byte_end":6240227,"line_start":108,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":3422,"byte_end":4112,"line_start":108,"line_end":135,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"construct_runtime!(","highlight_start":1,"highlight_end":20},{"text":"\tpub enum Test where","highlight_start":1,"highlight_end":21},{"text":"\t\tBlock = Block,","highlight_start":1,"highlight_end":17},{"text":"\t\tNodeBlock = Block,","highlight_start":1,"highlight_end":21},{"text":"\t\tUncheckedExtrinsic = UncheckedExtrinsics,","highlight_start":1,"highlight_end":44},{"text":"\t{","highlight_start":1,"highlight_end":3},{"text":"\t\tSystem: frame_system::{Pallet, Call, Config, Storage, Event<T>},","highlight_start":1,"highlight_end":67},{"text":"\t\tBalances: pallet_balances,","highlight_start":1,"highlight_end":29},{"text":"\t\tParasOrigin: origin,","highlight_start":1,"highlight_end":23},{"text":"\t\tMessageQueue: pallet_message_queue,","highlight_start":1,"highlight_end":38},{"text":"\t\tXcmPallet: pallet_xcm,","highlight_start":1,"highlight_end":25},{"text":"\t\tParaInclusion: inclusion,","highlight_start":1,"highlight_end":28},{"text":"\t\tParas: paras,","highlight_start":1,"highlight_end":16},{"text":"\t\tXnft: pallet_xnft,","highlight_start":1,"highlight_end":21},{"text":"\t\tDisputes: disputes,","highlight_start":1,"highlight_end":22},{"text":"\t\tScheduler: scheduler,","highlight_start":1,"highlight_end":24},{"text":"\t\tConfiguration: configuration,","highlight_start":1,"highlight_end":32},{"text":"\t\tParasShared: shared,","highlight_start":1,"highlight_end":23},{"text":"\t\tParasSudoWrapperCall:paras_sudo_wrapper,","highlight_start":1,"highlight_end":43},{"text":"\t\tDmp: parachains_dmp,","highlight_start":1,"highlight_end":23},{"text":"\t\tNFT:pallet_nfts,","highlight_start":1,"highlight_end":19},{"text":"\t\tCumulusXcm: cumulus_pallet_xcm,","highlight_start":1,"highlight_end":34},{"text":"\t\tDmpQueue: cumulus_pallet_dmp_queue,","highlight_start":1,"highlight_end":38},{"text":"\t\tXcmpQueue: cumulus_pallet_xcmp_queue,","highlight_start":1,"highlight_end":40},{"text":"\t\tHrmp: hrmp,","highlight_start":1,"highlight_end":14},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":"","highlight_start":1,"highlight_end":1},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"struct defined here, with 1 generic parameter: `T`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/system/src/lib.rs","byte_start":36458,"byte_end":36459,"line_start":1000,"line_end":1000,"column_start":27,"column_end":28,"is_primary":false,"text":[{"text":"\tpub struct GenesisConfig<T: Config> {","highlight_start":27,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/system/src/lib.rs","byte_start":36444,"byte_end":36457,"line_start":1000,"line_end":1000,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"\tpub struct GenesisConfig<T: Config> {","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":20125,"byte_end":20125,"line_start":652,"line_end":652,"column_start":10,"column_end":10,"is_primary":true,"text":[{"text":"        }","highlight_start":10,"highlight_end":10}],"label":null,"suggested_replacement":"<T>","suggestion_applicability":"HasPlaceholders","expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":3422,"byte_end":6240227,"line_start":108,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":3422,"byte_end":6240227,"line_start":108,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":3422,"byte_end":4112,"line_start":108,"line_end":135,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"construct_runtime!(","highlight_start":1,"highlight_end":20},{"text":"\tpub enum Test where","highlight_start":1,"highlight_end":21},{"text":"\t\tBlock = Block,","highlight_start":1,"highlight_end":17},{"text":"\t\tNodeBlock = Block,","highlight_start":1,"highlight_end":21},{"text":"\t\tUncheckedExtrinsic = UncheckedExtrinsics,","highlight_start":1,"highlight_end":44},{"text":"\t{","highlight_start":1,"highlight_end":3},{"text":"\t\tSystem: frame_system::{Pallet, Call, Config, Storage, Event<T>},","highlight_start":1,"highlight_end":67},{"text":"\t\tBalances: pallet_balances,","highlight_start":1,"highlight_end":29},{"text":"\t\tParasOrigin: origin,","highlight_start":1,"highlight_end":23},{"text":"\t\tMessageQueue: pallet_message_queue,","highlight_start":1,"highlight_end":38},{"text":"\t\tXcmPallet: pallet_xcm,","highlight_start":1,"highlight_end":25},{"text":"\t\tParaInclusion: inclusion,","highlight_start":1,"highlight_end":28},{"text":"\t\tParas: paras,","highlight_start":1,"highlight_end":16},{"text":"\t\tXnft: pallet_xnft,","highlight_start":1,"highlight_end":21},{"text":"\t\tDisputes: disputes,","highlight_start":1,"highlight_end":22},{"text":"\t\tScheduler: scheduler,","highlight_start":1,"highlight_end":24},{"text":"\t\tConfiguration: configuration,","highlight_start":1,"highlight_end":32},{"text":"\t\tParasShared: shared,","highlight_start":1,"highlight_end":23},{"text":"\t\tParasSudoWrapperCall:paras_sudo_wrapper,","highlight_start":1,"highlight_end":43},{"text":"\t\tDmp: parachains_dmp,","highlight_start":1,"highlight_end":23},{"text":"\t\tNFT:pallet_nfts,","highlight_start":1,"highlight_end":19},{"text":"\t\tCumulusXcm: cumulus_pallet_xcm,","highlight_start":1,"highlight_end":34},{"text":"\t\tDmpQueue: cumulus_pallet_dmp_queue,","highlight_start":1,"highlight_end":38},{"text":"\t\tXcmpQueue: cumulus_pallet_xcmp_queue,","highlight_start":1,"highlight_end":40},{"text":"\t\tHrmp: hrmp,","highlight_start":1,"highlight_end":14},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":"","highlight_start":1,"highlight_end":1},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: missing generics for struct `frame_system::GenesisConfig`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:108:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mconstruct_runtime!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum Test where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Block = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        NodeBlock = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m651\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m        .rev()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m652\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m        .enumerate()\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|__________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 generic argument\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 1 generic parameter: `T`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/system/src/lib.rs:1000:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1000\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct GenesisConfig<T: Config> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `frame_support::construct_runtime` which comes from the expansion of the macro `construct_runtime` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs:652:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m652\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        }\u001b[0m\u001b[0m\u001b[38;5;10m<T>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"missing generics for struct `frame_system::GenesisConfig`","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":19523,"byte_end":19536,"line_start":660,"line_end":660,"column_start":28,"column_end":41,"is_primary":true,"text":[{"text":"\tpub system: frame_system::GenesisConfig,","highlight_start":28,"highlight_end":41}],"label":"expected 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct defined here, with 1 generic parameter: `T`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/system/src/lib.rs","byte_start":36458,"byte_end":36459,"line_start":1000,"line_end":1000,"column_start":27,"column_end":28,"is_primary":false,"text":[{"text":"\tpub struct GenesisConfig<T: Config> {","highlight_start":27,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/system/src/lib.rs","byte_start":36444,"byte_end":36457,"line_start":1000,"line_end":1000,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"\tpub struct GenesisConfig<T: Config> {","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":19536,"byte_end":19536,"line_start":660,"line_end":660,"column_start":41,"column_end":41,"is_primary":true,"text":[{"text":"\tpub system: frame_system::GenesisConfig,","highlight_start":41,"highlight_end":41}],"label":null,"suggested_replacement":"<T>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: missing generics for struct `frame_system::GenesisConfig`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:660:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m660\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub system: frame_system::GenesisConfig,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 generic argument\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 1 generic parameter: `T`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/system/src/lib.rs:1000:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1000\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct GenesisConfig<T: Config> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m660\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub system: frame_system::GenesisConfig\u001b[0m\u001b[0m\u001b[38;5;10m<T>\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 22 previous errors; 23 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 22 previous errors; 23 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0107, E0405, E0412, E0422, E0425, E0433, E0573.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0107, E0405, E0412, E0422, E0425, E0433, E0573.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0107`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0107`.\u001b[0m\n"}
