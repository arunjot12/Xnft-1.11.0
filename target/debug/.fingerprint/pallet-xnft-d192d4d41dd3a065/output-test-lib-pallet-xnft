{"$message_type":"diagnostic","message":"cannot find value `RUNTIME_API_VERSIONS` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":3728,"byte_end":3748,"line_start":112,"line_end":112,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"\tapis: RUNTIME_API_VERSIONS,","highlight_start":8,"highlight_end":28}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RUNTIME_API_VERSIONS` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:112:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    apis: RUNTIME_API_VERSIONS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `Version` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":3976,"byte_end":3983,"line_start":121,"line_end":121,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"\ttype Version = Version;","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might have meant to use the associated type","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":3976,"byte_end":3976,"line_start":121,"line_end":121,"column_start":17,"column_end":17,"is_primary":true,"text":[{"text":"\ttype Version = Version;","highlight_start":17,"highlight_end":17}],"label":null,"suggested_replacement":"Self::","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this type alias","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":14,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{self as pallet_xnft};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use xcm::Version;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Version` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:121:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type Version = Version;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might have meant to use the associated type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    type Version = \u001b[0m\u001b[0m\u001b[38;5;10mSelf::\u001b[0m\u001b[0mVersion;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this type alias\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use xcm::Version;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BlockNumber`, `Configuration`, `ParasShared`, `Paras`, `RuntimeEvent as MockEvent`, `System`, `hrmp::HrmpChannels`, `register_parachain_with_balance`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test.rs","byte_start":80,"byte_end":93,"line_start":7,"line_end":7,"column_start":3,"column_end":16,"is_primary":true,"text":[{"text":"\t\tConfiguration, Paras, ParasShared,","highlight_start":3,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":95,"byte_end":100,"line_start":7,"line_end":7,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"\t\tConfiguration, Paras, ParasShared,","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":102,"byte_end":113,"line_start":7,"line_end":7,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"\t\tConfiguration, Paras, ParasShared,","highlight_start":25,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":117,"byte_end":142,"line_start":8,"line_end":8,"column_start":3,"column_end":28,"is_primary":true,"text":[{"text":"\t\tRuntimeEvent as MockEvent, System, Test,","highlight_start":3,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":144,"byte_end":150,"line_start":8,"line_end":8,"column_start":30,"column_end":36,"is_primary":true,"text":[{"text":"\t\tRuntimeEvent as MockEvent, System, Test,","highlight_start":30,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":173,"byte_end":191,"line_start":11,"line_end":11,"column_start":3,"column_end":21,"is_primary":true,"text":[{"text":"\t\thrmp::HrmpChannels,","highlight_start":3,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":232,"byte_end":263,"line_start":13,"line_end":13,"column_start":17,"column_end":48,"is_primary":true,"text":[{"text":"\t\trelay::{hrmp, register_parachain_with_balance, BlockNumber},","highlight_start":17,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":265,"byte_end":276,"line_start":13,"line_end":13,"column_start":50,"column_end":61,"is_primary":true,"text":[{"text":"\t\trelay::{hrmp, register_parachain_with_balance, BlockNumber},","highlight_start":50,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/test.rs","byte_start":80,"byte_end":152,"line_start":7,"line_end":8,"column_start":3,"column_end":38,"is_primary":true,"text":[{"text":"\t\tConfiguration, Paras, ParasShared,","highlight_start":3,"highlight_end":37},{"text":"\t\tRuntimeEvent as MockEvent, System, Test,","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/test.rs","byte_start":173,"byte_end":195,"line_start":11,"line_end":12,"column_start":3,"column_end":3,"is_primary":true,"text":[{"text":"\t\thrmp::HrmpChannels,","highlight_start":3,"highlight_end":22},{"text":"\t\tpara::RuntimeOrigin,","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/test.rs","byte_start":230,"byte_end":276,"line_start":13,"line_end":13,"column_start":15,"column_end":61,"is_primary":true,"text":[{"text":"\t\trelay::{hrmp, register_parachain_with_balance, BlockNumber},","highlight_start":15,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BlockNumber`, `Configuration`, `ParasShared`, `Paras`, `RuntimeEvent as MockEvent`, `System`, `hrmp::HrmpChannels`, `register_parachain_with_balance`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:7:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Configuration, Paras, ParasShared,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        RuntimeEvent as MockEvent, System, Test,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        hrmp::HrmpChannels,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        para::RuntimeOrigin,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        relay::{hrmp, register_parachain_with_balance, BlockNumber},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated trait `frame_support::traits::GenesisBuild`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/mod.rs","byte_start":159,"byte_end":171,"line_start":8,"line_end":8,"column_start":28,"column_end":40,"is_primary":true,"text":[{"text":"use frame_support::traits::GenesisBuild as BuildGenesisBuild;","highlight_start":28,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(deprecated)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated trait `frame_support::traits::GenesisBuild`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:8:28\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse frame_support::traits::GenesisBuild as BuildGenesisBuild;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(deprecated)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated method `frame_support::traits::GenesisBuild::assimilate_storage`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/mod.rs","byte_start":1900,"byte_end":1918,"line_start":70,"line_end":70,"column_start":65,"column_end":83,"is_primary":true,"text":[{"text":"\t<parachain_info::GenesisConfig as BuildGenesisBuild<Test, _>>::assimilate_storage(","highlight_start":65,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated method `frame_support::traits::GenesisBuild::assimilate_storage`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:70:65\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    <parachain_info::GenesisConfig as BuildGenesisBuild<Test, _>>::assimilate_storage(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated method `frame_support::traits::GenesisBuild::assimilate_storage`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/mod.rs","byte_start":2407,"byte_end":2425,"line_start":87,"line_end":87,"column_start":65,"column_end":83,"is_primary":true,"text":[{"text":"\t<parachain_info::GenesisConfig as BuildGenesisBuild<Test, _>>::assimilate_storage(","highlight_start":65,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated method `frame_support::traits::GenesisBuild::assimilate_storage`: GenesisBuild is planned to be removed in December 2023. Use BuildGenesisConfig instead of it.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:87:65\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    <parachain_info::GenesisConfig as BuildGenesisBuild<Test, _>>::assimilate_storage(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `mock::para::WhereSection::_w`: \n\t\tIt is deprecated to use a `where` clause in `construct_runtime`.\n\t\tPlease instead use `frame_system::Config` to set the `Block` type and delete this clause.\n\t\tIt is planned to be removed in December 2023.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/14437>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":20053,"byte_end":20125,"line_start":649,"line_end":652,"column_start":11,"column_end":10,"is_primary":true,"text":[{"text":"        $($caller)::* ! {","highlight_start":11,"highlight_end":26},{"text":"            $($state)*","highlight_start":1,"highlight_end":23},{"text":"            $($append)*","highlight_start":1,"highlight_end":24},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":20053,"byte_end":20125,"line_start":649,"line_end":652,"column_start":11,"column_end":10,"is_primary":false,"text":[{"text":"        $($caller)::* ! {","highlight_start":11,"highlight_end":26},{"text":"            $($state)*","highlight_start":1,"highlight_end":23},{"text":"            $($append)*","highlight_start":1,"highlight_end":24},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":19734,"byte_end":19863,"line_start":633,"line_end":638,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::private_return! {","highlight_start":9,"highlight_end":34},{"text":"            $caller","highlight_start":1,"highlight_end":20},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $output = [{ $($tokens)* }]","highlight_start":1,"highlight_end":44},{"text":"            )*","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":2955,"byte_end":6214922,"line_start":86,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":2955,"byte_end":6214922,"line_start":86,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":2955,"byte_end":3483,"line_start":86,"line_end":103,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"construct_runtime!(","highlight_start":1,"highlight_end":20},{"text":"\tpub enum Test where","highlight_start":1,"highlight_end":21},{"text":"\t\tBlock = Block,","highlight_start":1,"highlight_end":17},{"text":"\t\tNodeBlock = Block,","highlight_start":1,"highlight_end":21},{"text":"\t\tUncheckedExtrinsic = UncheckedExtrinsics,","highlight_start":1,"highlight_end":44},{"text":"\t{","highlight_start":1,"highlight_end":3},{"text":"\t\tSystem: frame_system::{Pallet, Call, Config<T>, Storage, Event<T>},","highlight_start":1,"highlight_end":70},{"text":"\t\tBalances: pallet_balances,","highlight_start":1,"highlight_end":29},{"text":"\t\tParachainInfo: parachain_info,","highlight_start":1,"highlight_end":33},{"text":"\t\tXcmpQueue: cumulus_pallet_xcmp_queue,","highlight_start":1,"highlight_end":40},{"text":"\t\tDmpQueue: cumulus_pallet_dmp_queue,","highlight_start":1,"highlight_end":38},{"text":"\t\tCumulusXcm: cumulus_pallet_xcm,","highlight_start":1,"highlight_end":34},{"text":"\t\tPolkadotXcm: pallet_xcm,","highlight_start":1,"highlight_end":27},{"text":"\t\tXnft: pallet_xnft,","highlight_start":1,"highlight_end":21},{"text":"\t\tParachainSystem: cumulus_pallet_parachain_system,","highlight_start":1,"highlight_end":52},{"text":"\t\tNFT:pallet_nfts::{Pallet, Call, Storage, Event<T>},","highlight_start":1,"highlight_end":54},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::__private::tt_return!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":19594,"byte_end":19616,"line_start":626,"line_end":626,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! tt_return {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::private_return!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":19905,"byte_end":19932,"line_start":644,"line_end":644,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"macro_rules! private_return {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::match_and_insert!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":16125,"byte_end":16183,"line_start":433,"line_end":433,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"pub fn match_and_insert(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `mock::para::WhereSection::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use a `where` clause in `construct_runtime`.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead use `frame_system::Config` to set the `Block` type and delete this clause.\u001b[0m\n\u001b[0m\u001b[1m                 It is planned to be removed in December 2023.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/14437>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:86:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mconstruct_runtime!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum Test where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Block = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        NodeBlock = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `frame_support::match_and_insert` which comes from the expansion of the macro `construct_runtime` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `mock::relay::WhereSection::_w`: \n\t\tIt is deprecated to use a `where` clause in `construct_runtime`.\n\t\tPlease instead use `frame_system::Config` to set the `Block` type and delete this clause.\n\t\tIt is planned to be removed in December 2023.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/14437>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":20053,"byte_end":20125,"line_start":649,"line_end":652,"column_start":11,"column_end":10,"is_primary":true,"text":[{"text":"        $($caller)::* ! {","highlight_start":11,"highlight_end":26},{"text":"            $($state)*","highlight_start":1,"highlight_end":23},{"text":"            $($append)*","highlight_start":1,"highlight_end":24},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":20053,"byte_end":20125,"line_start":649,"line_end":652,"column_start":11,"column_end":10,"is_primary":false,"text":[{"text":"        $($caller)::* ! {","highlight_start":11,"highlight_end":26},{"text":"            $($state)*","highlight_start":1,"highlight_end":23},{"text":"            $($append)*","highlight_start":1,"highlight_end":24},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":19734,"byte_end":19863,"line_start":633,"line_end":638,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::private_return! {","highlight_start":9,"highlight_end":34},{"text":"            $caller","highlight_start":1,"highlight_end":20},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $output = [{ $($tokens)* }]","highlight_start":1,"highlight_end":44},{"text":"            )*","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":3349,"byte_end":6199920,"line_start":109,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":3349,"byte_end":6199920,"line_start":109,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":3349,"byte_end":4042,"line_start":109,"line_end":136,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"construct_runtime!(","highlight_start":1,"highlight_end":20},{"text":"\tpub enum Test where","highlight_start":1,"highlight_end":21},{"text":"\t\tBlock = Block,","highlight_start":1,"highlight_end":17},{"text":"\t\tNodeBlock = Block,","highlight_start":1,"highlight_end":21},{"text":"\t\tUncheckedExtrinsic = UncheckedExtrinsics,","highlight_start":1,"highlight_end":44},{"text":"\t{","highlight_start":1,"highlight_end":3},{"text":"\t\tSystem: frame_system::{Pallet, Call, Config<T>, Storage, Event<T>},","highlight_start":1,"highlight_end":70},{"text":"\t\tBalances: pallet_balances,","highlight_start":1,"highlight_end":29},{"text":"\t\tParasOrigin: origin,","highlight_start":1,"highlight_end":23},{"text":"\t\tMessageQueue: pallet_message_queue,","highlight_start":1,"highlight_end":38},{"text":"\t\tXcmPallet: pallet_xcm,","highlight_start":1,"highlight_end":25},{"text":"\t\tParaInclusion: inclusion,","highlight_start":1,"highlight_end":28},{"text":"\t\tParas: paras,","highlight_start":1,"highlight_end":16},{"text":"\t\tXnft: pallet_xnft,","highlight_start":1,"highlight_end":21},{"text":"\t\tDisputes: disputes,","highlight_start":1,"highlight_end":22},{"text":"\t\tScheduler: scheduler,","highlight_start":1,"highlight_end":24},{"text":"\t\tConfiguration: configuration,","highlight_start":1,"highlight_end":32},{"text":"\t\tParasShared: shared,","highlight_start":1,"highlight_end":23},{"text":"\t\tParasSudoWrapperCall:paras_sudo_wrapper,","highlight_start":1,"highlight_end":43},{"text":"\t\tDmp: parachains_dmp,","highlight_start":1,"highlight_end":23},{"text":"\t\tNFT:pallet_nfts,","highlight_start":1,"highlight_end":19},{"text":"\t\tCumulusXcm: cumulus_pallet_xcm,","highlight_start":1,"highlight_end":34},{"text":"\t\tDmpQueue: cumulus_pallet_dmp_queue,","highlight_start":1,"highlight_end":38},{"text":"\t\tXcmpQueue: cumulus_pallet_xcmp_queue,","highlight_start":1,"highlight_end":40},{"text":"\t\tHrmp: hrmp,","highlight_start":1,"highlight_end":14},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":"","highlight_start":1,"highlight_end":1},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::__private::tt_return!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":19594,"byte_end":19616,"line_start":626,"line_end":626,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! tt_return {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::private_return!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tt-call-1.0.9/src/lib.rs","byte_start":19905,"byte_end":19932,"line_start":644,"line_end":644,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"macro_rules! private_return {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::match_and_insert!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":16125,"byte_end":16183,"line_start":433,"line_end":433,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"pub fn match_and_insert(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `mock::relay::WhereSection::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use a `where` clause in `construct_runtime`.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead use `frame_system::Config` to set the `Block` type and delete this clause.\u001b[0m\n\u001b[0m\u001b[1m                 It is planned to be removed in December 2023.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/14437>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:109:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mconstruct_runtime!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum Test where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Block = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        NodeBlock = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `frame_support::match_and_insert` which comes from the expansion of the macro `construct_runtime` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type mismatch resolving `<MessageProcessor as ProcessMessage>::Origin == AggregateMessageOrigin`","code":{"code":"E0271","explanation":"A type mismatched an associated type of a trait.\n\nErroneous code example:\n\n```compile_fail,E0271\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType=u32> {\n//                    ~~~~~~~~ ~~~~~~~~~~~~~~~~~~\n//                        |            |\n//         This says `foo` can         |\n//           only be used with         |\n//              some type that         |\n//         implements `Trait`.         |\n//                                     |\n//                             This says not only must\n//                             `T` be an impl of `Trait`\n//                             but also that the impl\n//                             must assign the type `u32`\n//                             to the associated type.\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n//~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//      |                             |\n// `i8` does have                     |\n// implementation                     |\n// of `Trait`...                      |\n//                     ... but it is an implementation\n//                     that assigns `&'static str` to\n//                     the associated type.\n\nfoo(3_i8);\n// Here, we invoke `foo` with an `i8`, which does not satisfy\n// the constraint `<i8 as Trait>::AssociatedType=u32`, and\n// therefore the type-checker complains with this error code.\n```\n\nThe issue can be resolved by changing the associated type:\n1) in the `foo` implementation:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = &'static str> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n\nfoo(3_i8);\n```\n\n2) in the `Trait` implementation for `i8`:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = u32> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = u32; }\n\nfoo(3_i8);\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":4292,"byte_end":4359,"line_start":132,"line_end":132,"column_start":18,"column_end":85,"is_primary":true,"text":[{"text":"\ttype DmpQueue = frame_support::traits::EnqueueWithOrigin<MessageQueue, RelayOrigin>;","highlight_start":18,"highlight_end":85}],"label":"type mismatch resolving `<MessageProcessor as ProcessMessage>::Origin == AggregateMessageOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected this to be `cumulus_primitives_core::AggregateMessageOrigin`","code":null,"level":"note","spans":[{"file_name":"src/mock/relay.rs","byte_start":16875,"byte_end":16897,"line_start":567,"line_end":567,"column_start":16,"column_end":38,"is_primary":true,"text":[{"text":"\ttype Origin = AggregateMessageOrigin;","highlight_start":16,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`AggregateMessageOrigin` and `AggregateMessageOrigin` have similar names, but are actually distinct types","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`AggregateMessageOrigin` is defined in crate `polkadot_runtime_parachains`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/runtime/parachains/src/inclusion/mod.rs","byte_start":7088,"byte_end":7119,"line_start":239,"line_end":239,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"pub enum AggregateMessageOrigin {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`AggregateMessageOrigin` is defined in crate `cumulus_primitives_core`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/primitives/core/src/lib.rs","byte_start":2585,"byte_end":2616,"line_start":83,"line_end":83,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"pub enum AggregateMessageOrigin {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required for `EnqueueWithOrigin<pallet_message_queue::Pallet<mock::relay::Test>, RelayOrigin>` to implement `HandleMessage`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `cumulus_pallet_parachain_system::Config::DmpQueue`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/parachain-system/src/lib.rs","byte_start":8045,"byte_end":8058,"line_start":218,"line_end":218,"column_start":18,"column_end":31,"is_primary":true,"text":[{"text":"\t\ttype DmpQueue: HandleMessage;","highlight_start":18,"highlight_end":31}],"label":"required by this bound in `Config::DmpQueue`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0271]\u001b[0m\u001b[0m\u001b[1m: type mismatch resolving `<MessageProcessor as ProcessMessage>::Origin == AggregateMessageOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:132:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type DmpQueue = frame_support::traits::EnqueueWithOrigin<MessageQueue, RelayOrigin>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mtype mismatch resolving `<MessageProcessor as ProcessMessage>::Origin == AggregateMessageOrigin`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected this to be `cumulus_primitives_core::AggregateMessageOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:567:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m567\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type Origin = AggregateMessageOrigin;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `AggregateMessageOrigin` and `AggregateMessageOrigin` have similar names, but are actually distinct types\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `AggregateMessageOrigin` is defined in crate `polkadot_runtime_parachains`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/runtime/parachains/src/inclusion/mod.rs:239:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum AggregateMessageOrigin {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `AggregateMessageOrigin` is defined in crate `cumulus_primitives_core`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/primitives/core/src/lib.rs:83:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum AggregateMessageOrigin {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnqueueWithOrigin<pallet_message_queue::Pallet<mock::relay::Test>, RelayOrigin>` to implement `HandleMessage`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `cumulus_pallet_parachain_system::Config::DmpQueue`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/parachain-system/src/lib.rs:218:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type DmpQueue: HandleMessage;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::DmpQueue`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `SaveIntoThreadLocal: XcmpMessageHandler` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":4433,"byte_end":4452,"line_start":134,"line_end":134,"column_start":28,"column_end":47,"is_primary":true,"text":[{"text":"\ttype XcmpMessageHandler = SaveIntoThreadLocal;","highlight_start":28,"highlight_end":47}],"label":"the trait `XcmpMessageHandler` is not implemented for `SaveIntoThreadLocal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `XcmpMessageHandler`:\n  cumulus_pallet_xcmp_queue::Pallet<T>\n  mock::Para1\n  mock::Para2\n  ()","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `cumulus_pallet_parachain_system::Config::XcmpMessageHandler`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/parachain-system/src/lib.rs","byte_start":8363,"byte_end":8381,"line_start":226,"line_end":226,"column_start":28,"column_end":46,"is_primary":true,"text":[{"text":"\t\ttype XcmpMessageHandler: XcmpMessageHandler;","highlight_start":28,"highlight_end":46}],"label":"required by this bound in `Config::XcmpMessageHandler`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `SaveIntoThreadLocal: XcmpMessageHandler` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:134:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type XcmpMessageHandler = SaveIntoThreadLocal;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `XcmpMessageHandler` is not implemented for `SaveIntoThreadLocal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `XcmpMessageHandler`:\u001b[0m\n\u001b[0m              cumulus_pallet_xcmp_queue::Pallet<T>\u001b[0m\n\u001b[0m              mock::Para1\u001b[0m\n\u001b[0m              mock::Para2\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `cumulus_pallet_parachain_system::Config::XcmpMessageHandler`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/parachain-system/src/lib.rs:226:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type XcmpMessageHandler: XcmpMessageHandler;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::XcmpMessageHandler`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type mismatch resolving `<MultiSigner as IdentifyAccount>::AccountId == u64`","code":{"code":"E0271","explanation":"A type mismatched an associated type of a trait.\n\nErroneous code example:\n\n```compile_fail,E0271\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType=u32> {\n//                    ~~~~~~~~ ~~~~~~~~~~~~~~~~~~\n//                        |            |\n//         This says `foo` can         |\n//           only be used with         |\n//              some type that         |\n//         implements `Trait`.         |\n//                                     |\n//                             This says not only must\n//                             `T` be an impl of `Trait`\n//                             but also that the impl\n//                             must assign the type `u32`\n//                             to the associated type.\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n//~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//      |                             |\n// `i8` does have                     |\n// implementation                     |\n// of `Trait`...                      |\n//                     ... but it is an implementation\n//                     that assigns `&'static str` to\n//                     the associated type.\n\nfoo(3_i8);\n// Here, we invoke `foo` with an `i8`, which does not satisfy\n// the constraint `<i8 as Trait>::AssociatedType=u32`, and\n// therefore the type-checker complains with this error code.\n```\n\nThe issue can be resolved by changing the associated type:\n1) in the `foo` implementation:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = &'static str> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n\nfoo(3_i8);\n```\n\n2) in the `Trait` implementation for `i8`:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = u32> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = u32; }\n\nfoo(3_i8);\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":6167,"byte_end":6216,"line_start":187,"line_end":187,"column_start":24,"column_end":73,"is_primary":true,"text":[{"text":"\ttype OffchainPublic = <Signature as sp_runtime::traits::Verify>::Signer;","highlight_start":24,"highlight_end":73}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required by a bound in `pallet_nfts::Config::OffchainPublic`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/nfts/src/lib.rs","byte_start":6928,"byte_end":6955,"line_start":205,"line_end":205,"column_start":40,"column_end":67,"is_primary":true,"text":[{"text":"\t\ttype OffchainPublic: IdentifyAccount<AccountId = Self::AccountId>;","highlight_start":40,"highlight_end":67}],"label":"required by this bound in `Config::OffchainPublic`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0271]\u001b[0m\u001b[0m\u001b[1m: type mismatch resolving `<MultiSigner as IdentifyAccount>::AccountId == u64`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:187:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type OffchainPublic = <Signature as sp_runtime::traits::Verify>::Signer;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_nfts::Config::OffchainPublic`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/nfts/src/lib.rs:205:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type OffchainPublic: IdentifyAccount<AccountId = Self::AccountId>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::OffchainPublic`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type mismatch resolving `<Test as Config>::AccountData == AccountData<u64>`","code":{"code":"E0271","explanation":"A type mismatched an associated type of a trait.\n\nErroneous code example:\n\n```compile_fail,E0271\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType=u32> {\n//                    ~~~~~~~~ ~~~~~~~~~~~~~~~~~~\n//                        |            |\n//         This says `foo` can         |\n//           only be used with         |\n//              some type that         |\n//         implements `Trait`.         |\n//                                     |\n//                             This says not only must\n//                             `T` be an impl of `Trait`\n//                             but also that the impl\n//                             must assign the type `u32`\n//                             to the associated type.\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n//~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//      |                             |\n// `i8` does have                     |\n// implementation                     |\n// of `Trait`...                      |\n//                     ... but it is an implementation\n//                     that assigns `&'static str` to\n//                     the associated type.\n\nfoo(3_i8);\n// Here, we invoke `foo` with an `i8`, which does not satisfy\n// the constraint `<i8 as Trait>::AssociatedType=u32`, and\n// therefore the type-checker complains with this error code.\n```\n\nThe issue can be resolved by changing the associated type:\n1) in the `foo` implementation:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = &'static str> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n\nfoo(3_i8);\n```\n\n2) in the `Trait` implementation for `i8`:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = u32> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = u32; }\n\nfoo(3_i8);\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":6611,"byte_end":6637,"line_start":204,"line_end":204,"column_start":22,"column_end":48,"is_primary":true,"text":[{"text":"\ttype AccountStore = frame_system::Pallet<Test>;","highlight_start":22,"highlight_end":48}],"label":"expected `AccountData<u64>`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `AccountData<u64>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet_balances::Config::AccountStore`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/balances/src/lib.rs","byte_start":9836,"byte_end":9890,"line_start":286,"line_end":286,"column_start":22,"column_end":76,"is_primary":true,"text":[{"text":"\t\ttype AccountStore: StoredMap<Self::AccountId, AccountData<Self::Balance>>;","highlight_start":22,"highlight_end":76}],"label":"required by this bound in `Config::AccountStore`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0271]\u001b[0m\u001b[0m\u001b[1m: type mismatch resolving `<Test as Config>::AccountData == AccountData<u64>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:204:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type AccountStore = frame_system::Pallet<Test>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `AccountData<u64>`, found `()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mAccountData<u64>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m            found unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_balances::Config::AccountStore`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/balances/src/lib.rs:286:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m286\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type AccountStore: StoredMap<Self::AccountId, AccountData<Self::Balance>>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::AccountStore`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `RuntimeHoldReason`, `RuntimeFreezeReason`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":6337,"byte_end":6374,"line_start":196,"line_end":196,"column_start":1,"column_end":38,"is_primary":true,"text":[{"text":"impl pallet_balances::Config for Test {","highlight_start":1,"highlight_end":38}],"label":"missing `RuntimeHoldReason`, `RuntimeFreezeReason` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `type RuntimeHoldReason = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":6714,"byte_end":6714,"line_start":208,"line_end":208,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type RuntimeHoldReason = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type RuntimeFreezeReason = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":6714,"byte_end":6714,"line_start":208,"line_end":208,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type RuntimeFreezeReason = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `RuntimeHoldReason`, `RuntimeFreezeReason`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:196:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl pallet_balances::Config for Test {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `RuntimeHoldReason`, `RuntimeFreezeReason` in implementation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type RuntimeHoldReason = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type RuntimeFreezeReason = /* Type */;`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `(AssetFilter, cumulus_primitives_core::Location): From<(staging_xcm::v3::MultiAssetFilter, staging_xcm::v3::MultiLocation)>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":9260,"byte_end":9278,"line_start":273,"line_end":273,"column_start":22,"column_end":40,"is_primary":true,"text":[{"text":"\ttype IsTeleporter = TrustedTeleporters;","highlight_start":22,"highlight_end":40}],"label":"the trait `From<(staging_xcm::v3::MultiAssetFilter, staging_xcm::v3::MultiLocation)>` is not implemented for `(AssetFilter, cumulus_primitives_core::Location)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <() as From<cumulus_pallet_xcm::Event<T>>>\n  <() as From<frame_support_test::Event<T>>>\n  <() as From<pallet_asset_tx_payment::pallet::Event<T>>>\n  <() as From<cumulus_pallet_dmp_queue::Event<T>>>\n  <() as From<pallet_collator_selection::pallet::Event<T>>>\n  <() as From<pallet_asset_conversion::pallet::Event<T>>>\n  <() as From<pallet_message_queue::Event<T>>>\n  <() as From<cumulus_pallet_xcmp_queue::Event<T>>>\nand 60 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `OurchainPara` to implement `sp_core::Get<(AssetFilter, cumulus_primitives_core::Location)>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11282,"byte_end":11293,"line_start":302,"line_end":302,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":8486,"byte_end":8924,"line_start":255,"line_end":262,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const Roc: MultiAssetFilter = Wild(AllOf { fun: WildFungible, id: Concrete(RelayLocation::get()) });","highlight_start":1,"highlight_end":106},{"text":"\tpub const Para: MultiLocation = Parachain(2000).into_location();","highlight_start":1,"highlight_end":66},{"text":"\tpub const Para2: MultiLocation = Parachain(2001).into_location();","highlight_start":1,"highlight_end":67},{"text":"\tpub const OurchainPara: (MultiAssetFilter, MultiLocation) = (Roc::get(), Para::get());","highlight_start":1,"highlight_end":88},{"text":"\tpub const OurchainPara2: (MultiAssetFilter, MultiLocation) = (Roc::get(), Para2::get());","highlight_start":1,"highlight_end":90},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11312,"byte_end":11335,"line_start":302,"line_end":302,"column_start":42,"column_end":65,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":42,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":8486,"byte_end":8924,"line_start":255,"line_end":262,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const Roc: MultiAssetFilter = Wild(AllOf { fun: WildFungible, id: Concrete(RelayLocation::get()) });","highlight_start":1,"highlight_end":106},{"text":"\tpub const Para: MultiLocation = Parachain(2000).into_location();","highlight_start":1,"highlight_end":66},{"text":"\tpub const Para2: MultiLocation = Parachain(2001).into_location();","highlight_start":1,"highlight_end":67},{"text":"\tpub const OurchainPara: (MultiAssetFilter, MultiLocation) = (Roc::get(), Para::get());","highlight_start":1,"highlight_end":88},{"text":"\tpub const OurchainPara2: (MultiAssetFilter, MultiLocation) = (Roc::get(), Para2::get());","highlight_start":1,"highlight_end":90},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11340,"byte_end":11364,"line_start":302,"line_end":302,"column_start":70,"column_end":94,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":70,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":8486,"byte_end":8924,"line_start":255,"line_end":262,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const Roc: MultiAssetFilter = Wild(AllOf { fun: WildFungible, id: Concrete(RelayLocation::get()) });","highlight_start":1,"highlight_end":106},{"text":"\tpub const Para: MultiLocation = Parachain(2000).into_location();","highlight_start":1,"highlight_end":66},{"text":"\tpub const Para2: MultiLocation = Parachain(2001).into_location();","highlight_start":1,"highlight_end":67},{"text":"\tpub const OurchainPara: (MultiAssetFilter, MultiLocation) = (Roc::get(), Para::get());","highlight_start":1,"highlight_end":88},{"text":"\tpub const OurchainPara2: (MultiAssetFilter, MultiLocation) = (Roc::get(), Para2::get());","highlight_start":1,"highlight_end":90},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `Case<OurchainPara>` to implement `ContainsPair<Asset, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `(Case<OurchainPara>, Case<OurchainPara2>)` to implement `ContainsPair<Asset, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `staging_xcm_executor::Config::IsTeleporter`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/xcm-executor/src/config.rs","byte_start":1958,"byte_end":1987,"line_start":48,"line_end":48,"column_start":21,"column_end":50,"is_primary":true,"text":[{"text":"\ttype IsTeleporter: ContainsPair<Asset, Location>;","highlight_start":21,"highlight_end":50}],"label":"required by this bound in `Config::IsTeleporter`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `(AssetFilter, cumulus_primitives_core::Location): From<(staging_xcm::v3::MultiAssetFilter, staging_xcm::v3::MultiLocation)>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:273:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type IsTeleporter = TrustedTeleporters;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<(staging_xcm::v3::MultiAssetFilter, staging_xcm::v3::MultiLocation)>` is not implemented for `(AssetFilter, cumulus_primitives_core::Location)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <() as From<cumulus_pallet_xcm::Event<T>>>\u001b[0m\n\u001b[0m              <() as From<frame_support_test::Event<T>>>\u001b[0m\n\u001b[0m              <() as From<pallet_asset_tx_payment::pallet::Event<T>>>\u001b[0m\n\u001b[0m              <() as From<cumulus_pallet_dmp_queue::Event<T>>>\u001b[0m\n\u001b[0m              <() as From<pallet_collator_selection::pallet::Event<T>>>\u001b[0m\n\u001b[0m              <() as From<pallet_asset_conversion::pallet::Event<T>>>\u001b[0m\n\u001b[0m              <() as From<pallet_message_queue::Event<T>>>\u001b[0m\n\u001b[0m              <() as From<cumulus_pallet_xcmp_queue::Event<T>>>\u001b[0m\n\u001b[0m            and 60 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `OurchainPara` to implement `sp_core::Get<(AssetFilter, cumulus_primitives_core::Location)>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:255:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const Roc: MultiAssetFilter = Wild(AllOf { fun: WildFungible, id: Concrete(RelayLocation::get()) });\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const Para: MultiLocation = Parachain(2000).into_location();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const Para2: MultiLocation = Parachain(2001).into_location();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Case<OurchainPara>` to implement `ContainsPair<Asset, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `(Case<OurchainPara>, Case<OurchainPara2>)` to implement `ContainsPair<Asset, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `staging_xcm_executor::Config::IsTeleporter`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/xcm-executor/src/config.rs:48:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type IsTeleporter: ContainsPair<Asset, Location>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::IsTeleporter`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `cumulus_primitives_core::Junction: From<staging_xcm::v3::Junctions>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":9306,"byte_end":9323,"line_start":274,"line_end":274,"column_start":27,"column_end":44,"is_primary":true,"text":[{"text":"\ttype UniversalLocation = UniversalLocation;","highlight_start":27,"highlight_end":44}],"label":"the trait `From<staging_xcm::v3::Junctions>` is not implemented for `cumulus_primitives_core::Junction`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <cumulus_primitives_core::Junction as From<u64>>\n  <cumulus_primitives_core::Junction as From<u128>>\n  <cumulus_primitives_core::Junction as From<sp_runtime::BoundedVec<u8, ConstU32<32>>>>\n  <cumulus_primitives_core::Junction as From<BoundedSlice<'a, u8, ConstU32<32>>>>\n  <cumulus_primitives_core::Junction as From<cumulus_primitives_core::NetworkId>>\n  <cumulus_primitives_core::Junction as From<[u8; 20]>>\n  <cumulus_primitives_core::Junction as From<[u8; 32]>>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `staging_xcm::v3::Junctions` to implement `Into<cumulus_primitives_core::Junction>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `cumulus_primitives_core::Junctions` to implement `From<staging_xcm::v3::Junctions>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `mock::para::UniversalLocation` to implement `sp_core::Get<cumulus_primitives_core::Junctions>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11811,"byte_end":11822,"line_start":323,"line_end":323,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10573,"byte_end":10612,"line_start":279,"line_end":279,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11842,"byte_end":11865,"line_start":323,"line_end":323,"column_start":43,"column_end":66,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":43,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10573,"byte_end":10612,"line_start":279,"line_end":279,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11870,"byte_end":11894,"line_start":323,"line_end":323,"column_start":71,"column_end":95,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":71,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10573,"byte_end":10612,"line_start":279,"line_end":279,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required by a bound in `staging_xcm_executor::Config::UniversalLocation`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/xcm-executor/src/config.rs","byte_start":2225,"byte_end":2246,"line_start":55,"line_end":55,"column_start":26,"column_end":47,"is_primary":true,"text":[{"text":"\ttype UniversalLocation: Get<InteriorLocation>;","highlight_start":26,"highlight_end":47}],"label":"required by this bound in `Config::UniversalLocation`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `cumulus_primitives_core::Junction: From<staging_xcm::v3::Junctions>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:274:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m274\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type UniversalLocation = UniversalLocation;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<staging_xcm::v3::Junctions>` is not implemented for `cumulus_primitives_core::Junction`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<u64>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<u128>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<sp_runtime::BoundedVec<u8, ConstU32<32>>>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<BoundedSlice<'a, u8, ConstU32<32>>>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<cumulus_primitives_core::NetworkId>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<[u8; 20]>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<[u8; 32]>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `staging_xcm::v3::Junctions` to implement `Into<cumulus_primitives_core::Junction>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `cumulus_primitives_core::Junctions` to implement `From<staging_xcm::v3::Junctions>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `mock::para::UniversalLocation` to implement `sp_core::Get<cumulus_primitives_core::Junctions>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayLocation: MultiLocation = MultiLocation::parent();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const AnyNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `staging_xcm_executor::Config::UniversalLocation`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/xcm-executor/src/config.rs:55:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type UniversalLocation: Get<InteriorLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::UniversalLocation`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `Aliasers`, `TransactionalProcessor`, `HrmpNewChannelOpenRequestHandler`, `HrmpChannelAcceptedHandler`, `HrmpChannelClosingHandler`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":9048,"byte_end":9087,"line_start":267,"line_end":267,"column_start":1,"column_end":40,"is_primary":true,"text":[{"text":"impl xcm_executor::Config for XcmConfig {","highlight_start":1,"highlight_end":40}],"label":"missing `Aliasers`, `TransactionalProcessor`, `HrmpNewChannelOpenRequestHandler`, `HrmpChannelAcceptedHandler`, `HrmpChannelClosingHandler` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `type Aliasers = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":9849,"byte_end":9849,"line_start":291,"line_end":291,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type Aliasers = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type TransactionalProcessor = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":9849,"byte_end":9849,"line_start":291,"line_end":291,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type TransactionalProcessor = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type HrmpNewChannelOpenRequestHandler = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":9849,"byte_end":9849,"line_start":291,"line_end":291,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type HrmpNewChannelOpenRequestHandler = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type HrmpChannelAcceptedHandler = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":9849,"byte_end":9849,"line_start":291,"line_end":291,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type HrmpChannelAcceptedHandler = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type HrmpChannelClosingHandler = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":9849,"byte_end":9849,"line_start":291,"line_end":291,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type HrmpChannelClosingHandler = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `Aliasers`, `TransactionalProcessor`, `HrmpNewChannelOpenRequestHandler`, `HrmpChannelAcceptedHandler`, `HrmpChannelClosingHandler`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:267:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m267\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl xcm_executor::Config for XcmConfig {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `Aliasers`, `TransactionalProcessor`, `HrmpNewChannelOpenRequestHandler`, `HrmpChannelAcceptedHandler`, `HrmpChannelClosingHandler` in implementation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type Aliasers = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type TransactionalProcessor = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type HrmpNewChannelOpenRequestHandler = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type HrmpChannelAcceptedHandler = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type HrmpChannelClosingHandler = /* Type */;`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type mismatch resolving `<MessageProcessor as ProcessMessage>::Origin == AggregateMessageOrigin`","code":{"code":"E0271","explanation":"A type mismatched an associated type of a trait.\n\nErroneous code example:\n\n```compile_fail,E0271\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType=u32> {\n//                    ~~~~~~~~ ~~~~~~~~~~~~~~~~~~\n//                        |            |\n//         This says `foo` can         |\n//           only be used with         |\n//              some type that         |\n//         implements `Trait`.         |\n//                                     |\n//                             This says not only must\n//                             `T` be an impl of `Trait`\n//                             but also that the impl\n//                             must assign the type `u32`\n//                             to the associated type.\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n//~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//      |                             |\n// `i8` does have                     |\n// implementation                     |\n// of `Trait`...                      |\n//                     ... but it is an implementation\n//                     that assigns `&'static str` to\n//                     the associated type.\n\nfoo(3_i8);\n// Here, we invoke `foo` with an `i8`, which does not satisfy\n// the constraint `<i8 as Trait>::AssociatedType=u32`, and\n// therefore the type-checker complains with this error code.\n```\n\nThe issue can be resolved by changing the associated type:\n1) in the `foo` implementation:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = &'static str> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n\nfoo(3_i8);\n```\n\n2) in the `Trait` implementation for `i8`:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = u32> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = u32; }\n\nfoo(3_i8);\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":11489,"byte_end":11567,"line_start":326,"line_end":326,"column_start":19,"column_end":97,"is_primary":true,"text":[{"text":"\ttype XcmpQueue = TransformOrigin<MessageQueue, AggregateMessageOrigin, ParaId, ParaIdToSibling>;","highlight_start":19,"highlight_end":97}],"label":"type mismatch resolving `<MessageProcessor as ProcessMessage>::Origin == AggregateMessageOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected this to be `cumulus_primitives_core::AggregateMessageOrigin`","code":null,"level":"note","spans":[{"file_name":"src/mock/relay.rs","byte_start":16875,"byte_end":16897,"line_start":567,"line_end":567,"column_start":16,"column_end":38,"is_primary":true,"text":[{"text":"\ttype Origin = AggregateMessageOrigin;","highlight_start":16,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`AggregateMessageOrigin` and `AggregateMessageOrigin` have similar names, but are actually distinct types","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`AggregateMessageOrigin` is defined in crate `polkadot_runtime_parachains`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/runtime/parachains/src/inclusion/mod.rs","byte_start":7088,"byte_end":7119,"line_start":239,"line_end":239,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"pub enum AggregateMessageOrigin {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`AggregateMessageOrigin` is defined in crate `cumulus_primitives_core`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/primitives/core/src/lib.rs","byte_start":2585,"byte_end":2616,"line_start":83,"line_end":83,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"pub enum AggregateMessageOrigin {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required for `TransformOrigin<pallet_message_queue::Pallet<mock::relay::Test>, cumulus_primitives_core::AggregateMessageOrigin, ParaId, ParaIdToSibling>` to implement `EnqueueMessage<ParaId>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `cumulus_pallet_xcmp_queue::Config::XcmpQueue`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs","byte_start":4949,"byte_end":4971,"line_start":125,"line_end":125,"column_start":19,"column_end":41,"is_primary":true,"text":[{"text":"\t\ttype XcmpQueue: EnqueueMessage<ParaId>;","highlight_start":19,"highlight_end":41}],"label":"required by this bound in `Config::XcmpQueue`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0271]\u001b[0m\u001b[0m\u001b[1m: type mismatch resolving `<MessageProcessor as ProcessMessage>::Origin == AggregateMessageOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:326:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m326\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type XcmpQueue = TransformOrigin<MessageQueue, AggregateMessageOrigin, ParaId, ParaIdToSibling>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mtype mismatch resolving `<MessageProcessor as ProcessMessage>::Origin == AggregateMessageOrigin`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected this to be `cumulus_primitives_core::AggregateMessageOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:567:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m567\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type Origin = AggregateMessageOrigin;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `AggregateMessageOrigin` and `AggregateMessageOrigin` have similar names, but are actually distinct types\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `AggregateMessageOrigin` is defined in crate `polkadot_runtime_parachains`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/runtime/parachains/src/inclusion/mod.rs:239:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum AggregateMessageOrigin {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `AggregateMessageOrigin` is defined in crate `cumulus_primitives_core`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/primitives/core/src/lib.rs:83:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum AggregateMessageOrigin {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `TransformOrigin<pallet_message_queue::Pallet<mock::relay::Test>, cumulus_primitives_core::AggregateMessageOrigin, ParaId, ParaIdToSibling>` to implement `EnqueueMessage<ParaId>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `cumulus_pallet_xcmp_queue::Config::XcmpQueue`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs:125:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type XcmpQueue: EnqueueMessage<ParaId>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::XcmpQueue`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `mock::para::RuntimeOrigin: From<RawOrigin<sp_runtime::AccountId32>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":11648,"byte_end":11669,"line_start":328,"line_end":328,"column_start":26,"column_end":47,"is_primary":true,"text":[{"text":"\ttype ControllerOrigin = EnsureRoot<AccountId>;","highlight_start":26,"highlight_end":47}],"label":"the trait `From<RawOrigin<sp_runtime::AccountId32>>` is not implemented for `mock::para::RuntimeOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <mock::para::RuntimeOrigin as From<cumulus_pallet_xcm::Origin>>\n  <mock::para::RuntimeOrigin as From<pallet_xcm::Origin>>\n  <mock::para::RuntimeOrigin as From<mock::para::OriginCaller>>\n  <mock::para::RuntimeOrigin as From<RawOrigin<<mock::para::Test as frame_system::Config>::AccountId>>>\n  <mock::para::RuntimeOrigin as From<std::option::Option<<mock::para::Test as frame_system::Config>::AccountId>>>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureRoot<sp_runtime::AccountId32>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `cumulus_pallet_xcmp_queue::Config::ControllerOrigin`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs","byte_start":5464,"byte_end":5497,"line_start":136,"line_end":136,"column_start":26,"column_end":59,"is_primary":true,"text":[{"text":"\t\ttype ControllerOrigin: EnsureOrigin<Self::RuntimeOrigin>;","highlight_start":26,"highlight_end":59}],"label":"required by this bound in `Config::ControllerOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `mock::para::RuntimeOrigin: From<RawOrigin<sp_runtime::AccountId32>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:328:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m328\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ControllerOrigin = EnsureRoot<AccountId>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<RawOrigin<sp_runtime::AccountId32>>` is not implemented for `mock::para::RuntimeOrigin`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <mock::para::RuntimeOrigin as From<cumulus_pallet_xcm::Origin>>\u001b[0m\n\u001b[0m              <mock::para::RuntimeOrigin as From<pallet_xcm::Origin>>\u001b[0m\n\u001b[0m              <mock::para::RuntimeOrigin as From<mock::para::OriginCaller>>\u001b[0m\n\u001b[0m              <mock::para::RuntimeOrigin as From<RawOrigin<<mock::para::Test as frame_system::Config>::AccountId>>>\u001b[0m\n\u001b[0m              <mock::para::RuntimeOrigin as From<std::option::Option<<mock::para::Test as frame_system::Config>::AccountId>>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureRoot<sp_runtime::AccountId32>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `cumulus_pallet_xcmp_queue::Config::ControllerOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs:136:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ControllerOrigin: EnsureOrigin<Self::RuntimeOrigin>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ControllerOrigin`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Result<RawOrigin<sp_runtime::AccountId32>, mock::para::RuntimeOrigin>: From<mock::para::RuntimeOrigin>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":11648,"byte_end":11669,"line_start":328,"line_end":328,"column_start":26,"column_end":47,"is_primary":true,"text":[{"text":"\ttype ControllerOrigin = EnsureRoot<AccountId>;","highlight_start":26,"highlight_end":47}],"label":"the trait `From<mock::para::RuntimeOrigin>` is not implemented for `Result<RawOrigin<sp_runtime::AccountId32>, mock::para::RuntimeOrigin>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <Result<cumulus_pallet_xcm::Origin, mock::relay::RuntimeOrigin> as From<mock::relay::RuntimeOrigin>>\n  <Result<cumulus_pallet_xcm::Origin, mock::para::RuntimeOrigin> as From<mock::para::RuntimeOrigin>>\n  <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<miniz_oxide::StreamResult>>\n  <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<&miniz_oxide::StreamResult>>\n  <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<miniz_oxide::StreamResult>>\n  <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<&miniz_oxide::StreamResult>>\n  <Result<pallet_xcm::Origin, mock::relay::RuntimeOrigin> as From<mock::relay::RuntimeOrigin>>\n  <Result<pallet_xcm::Origin, mock::para::RuntimeOrigin> as From<mock::para::RuntimeOrigin>>\nand 7 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `mock::para::RuntimeOrigin` to implement `Into<Result<RawOrigin<sp_runtime::AccountId32>, mock::para::RuntimeOrigin>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureRoot<sp_runtime::AccountId32>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `cumulus_pallet_xcmp_queue::Config::ControllerOrigin`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs","byte_start":5464,"byte_end":5497,"line_start":136,"line_end":136,"column_start":26,"column_end":59,"is_primary":true,"text":[{"text":"\t\ttype ControllerOrigin: EnsureOrigin<Self::RuntimeOrigin>;","highlight_start":26,"highlight_end":59}],"label":"required by this bound in `Config::ControllerOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Result<RawOrigin<sp_runtime::AccountId32>, mock::para::RuntimeOrigin>: From<mock::para::RuntimeOrigin>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:328:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m328\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ControllerOrigin = EnsureRoot<AccountId>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<mock::para::RuntimeOrigin>` is not implemented for `Result<RawOrigin<sp_runtime::AccountId32>, mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <Result<cumulus_pallet_xcm::Origin, mock::relay::RuntimeOrigin> as From<mock::relay::RuntimeOrigin>>\u001b[0m\n\u001b[0m              <Result<cumulus_pallet_xcm::Origin, mock::para::RuntimeOrigin> as From<mock::para::RuntimeOrigin>>\u001b[0m\n\u001b[0m              <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<miniz_oxide::StreamResult>>\u001b[0m\n\u001b[0m              <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<&miniz_oxide::StreamResult>>\u001b[0m\n\u001b[0m              <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<miniz_oxide::StreamResult>>\u001b[0m\n\u001b[0m              <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<&miniz_oxide::StreamResult>>\u001b[0m\n\u001b[0m              <Result<pallet_xcm::Origin, mock::relay::RuntimeOrigin> as From<mock::relay::RuntimeOrigin>>\u001b[0m\n\u001b[0m              <Result<pallet_xcm::Origin, mock::para::RuntimeOrigin> as From<mock::para::RuntimeOrigin>>\u001b[0m\n\u001b[0m            and 7 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `mock::para::RuntimeOrigin` to implement `Into<Result<RawOrigin<sp_runtime::AccountId32>, mock::para::RuntimeOrigin>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureRoot<sp_runtime::AccountId32>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `cumulus_pallet_xcmp_queue::Config::ControllerOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs:136:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ControllerOrigin: EnsureOrigin<Self::RuntimeOrigin>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ControllerOrigin`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `u64: From<[u8; 32]>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":11705,"byte_end":11738,"line_start":329,"line_end":329,"column_start":35,"column_end":68,"is_primary":true,"text":[{"text":"\ttype ControllerOriginConverter = XcmOriginToTransactDispatchOrigin;","highlight_start":35,"highlight_end":68}],"label":"the trait `From<[u8; 32]>` is not implemented for `u64`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <u64 as From<bool>>\n  <u64 as From<char>>\n  <u64 as From<u8>>\n  <u64 as From<u16>>\n  <u64 as From<u32>>\n  <u64 as From<sp_timestamp::Timestamp>>\n  <u64 as From<cumulus_primitives_core::relay_chain::Slot>>\n  <u64 as From<sp_wasm_interface::Pointer<T>>>\nand 8 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `SignedAccountId32AsNative<mock::para::RelayNetwork, mock::para::RuntimeOrigin>` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `(SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, ..., ...), ...>, ..., ..., ..., ..., ...)` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-18257033176972527605.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `cumulus_pallet_xcmp_queue::Config::ControllerOriginConverter`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs","byte_start":5645,"byte_end":5679,"line_start":140,"line_end":140,"column_start":35,"column_end":69,"is_primary":true,"text":[{"text":"\t\ttype ControllerOriginConverter: ConvertOrigin<Self::RuntimeOrigin>;","highlight_start":35,"highlight_end":69}],"label":"required by this bound in `Config::ControllerOriginConverter`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `u64: From<[u8; 32]>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:329:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ControllerOriginConverter = XcmOriginToTransactDispatchOrigin;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<[u8; 32]>` is not implemented for `u64`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <u64 as From<bool>>\u001b[0m\n\u001b[0m              <u64 as From<char>>\u001b[0m\n\u001b[0m              <u64 as From<u8>>\u001b[0m\n\u001b[0m              <u64 as From<u16>>\u001b[0m\n\u001b[0m              <u64 as From<u32>>\u001b[0m\n\u001b[0m              <u64 as From<sp_timestamp::Timestamp>>\u001b[0m\n\u001b[0m              <u64 as From<cumulus_primitives_core::relay_chain::Slot>>\u001b[0m\n\u001b[0m              <u64 as From<sp_wasm_interface::Pointer<T>>>\u001b[0m\n\u001b[0m            and 8 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedAccountId32AsNative<mock::para::RelayNetwork, mock::para::RuntimeOrigin>` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `(SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, ..., ...), ...>, ..., ..., ..., ..., ...)` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-18257033176972527605.txt'\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `cumulus_pallet_xcmp_queue::Config::ControllerOriginConverter`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs:140:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ControllerOriginConverter: ConvertOrigin<Self::RuntimeOrigin>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ControllerOriginConverter`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `ParentIsPreset<sp_runtime::AccountId32>: ConvertLocation<u64>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":11705,"byte_end":11738,"line_start":329,"line_end":329,"column_start":35,"column_end":68,"is_primary":true,"text":[{"text":"\ttype ControllerOriginConverter = XcmOriginToTransactDispatchOrigin;","highlight_start":35,"highlight_end":68}],"label":"the trait `ConvertLocation<u64>` is not implemented for `ParentIsPreset<sp_runtime::AccountId32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `ConvertLocation<sp_runtime::AccountId32>` is implemented for `ParentIsPreset<sp_runtime::AccountId32>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `sp_runtime::AccountId32`, found `u64`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `(ParentIsPreset<AccountId32>, SiblingParachainConvertsVia<Sibling, AccountId32>, AccountId32Aliases<..., ...>)` to implement `ConvertLocation<u64>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-14245772550176827075.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, SiblingParachainConvertsVia<Sibling, ...>, ...), ...>` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-8580360115438010377.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `(SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, ..., ...), ...>, ..., ..., ..., ..., ...)` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-18257033176972527605.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `cumulus_pallet_xcmp_queue::Config::ControllerOriginConverter`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs","byte_start":5645,"byte_end":5679,"line_start":140,"line_end":140,"column_start":35,"column_end":69,"is_primary":true,"text":[{"text":"\t\ttype ControllerOriginConverter: ConvertOrigin<Self::RuntimeOrigin>;","highlight_start":35,"highlight_end":69}],"label":"required by this bound in `Config::ControllerOriginConverter`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ParentIsPreset<sp_runtime::AccountId32>: ConvertLocation<u64>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:329:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ControllerOriginConverter = XcmOriginToTransactDispatchOrigin;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ConvertLocation<u64>` is not implemented for `ParentIsPreset<sp_runtime::AccountId32>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `ConvertLocation<sp_runtime::AccountId32>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mParentIsPreset<sp_runtime::AccountId32>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `sp_runtime::AccountId32`, found `u64`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `(ParentIsPreset<AccountId32>, SiblingParachainConvertsVia<Sibling, AccountId32>, AccountId32Aliases<..., ...>)` to implement `ConvertLocation<u64>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-14245772550176827075.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, SiblingParachainConvertsVia<Sibling, ...>, ...), ...>` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-8580360115438010377.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `(SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, ..., ...), ...>, ..., ..., ..., ..., ...)` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-18257033176972527605.txt'\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `cumulus_pallet_xcmp_queue::Config::ControllerOriginConverter`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs:140:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ControllerOriginConverter: ConvertOrigin<Self::RuntimeOrigin>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ControllerOriginConverter`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `SiblingParachainConvertsVia<polkadot_parachain_primitives::primitives::Sibling, sp_runtime::AccountId32>: ConvertLocation<u64>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":11705,"byte_end":11738,"line_start":329,"line_end":329,"column_start":35,"column_end":68,"is_primary":true,"text":[{"text":"\ttype ControllerOriginConverter = XcmOriginToTransactDispatchOrigin;","highlight_start":35,"highlight_end":68}],"label":"the trait `ConvertLocation<u64>` is not implemented for `SiblingParachainConvertsVia<polkadot_parachain_primitives::primitives::Sibling, sp_runtime::AccountId32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `ConvertLocation<sp_runtime::AccountId32>` is implemented for `SiblingParachainConvertsVia<polkadot_parachain_primitives::primitives::Sibling, sp_runtime::AccountId32>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `sp_runtime::AccountId32`, found `u64`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `(ParentIsPreset<AccountId32>, SiblingParachainConvertsVia<Sibling, AccountId32>, AccountId32Aliases<..., ...>)` to implement `ConvertLocation<u64>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-14245772550176827075.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, SiblingParachainConvertsVia<Sibling, ...>, ...), ...>` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-8580360115438010377.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `(SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, ..., ...), ...>, ..., ..., ..., ..., ...)` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-18257033176972527605.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `cumulus_pallet_xcmp_queue::Config::ControllerOriginConverter`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs","byte_start":5645,"byte_end":5679,"line_start":140,"line_end":140,"column_start":35,"column_end":69,"is_primary":true,"text":[{"text":"\t\ttype ControllerOriginConverter: ConvertOrigin<Self::RuntimeOrigin>;","highlight_start":35,"highlight_end":69}],"label":"required by this bound in `Config::ControllerOriginConverter`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `SiblingParachainConvertsVia<polkadot_parachain_primitives::primitives::Sibling, sp_runtime::AccountId32>: ConvertLocation<u64>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:329:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ControllerOriginConverter = XcmOriginToTransactDispatchOrigin;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ConvertLocation<u64>` is not implemented for `SiblingParachainConvertsVia<polkadot_parachain_primitives::primitives::Sibling, sp_runtime::AccountId32>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `ConvertLocation<sp_runtime::AccountId32>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mSiblingParachainConvertsVia<polkadot_parachain_primitives::primitives::Sibling, sp_runtime::AccountId32>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `sp_runtime::AccountId32`, found `u64`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `(ParentIsPreset<AccountId32>, SiblingParachainConvertsVia<Sibling, AccountId32>, AccountId32Aliases<..., ...>)` to implement `ConvertLocation<u64>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-14245772550176827075.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, SiblingParachainConvertsVia<Sibling, ...>, ...), ...>` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-8580360115438010377.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `(SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, ..., ...), ...>, ..., ..., ..., ..., ...)` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-18257033176972527605.txt'\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `cumulus_pallet_xcmp_queue::Config::ControllerOriginConverter`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs:140:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ControllerOriginConverter: ConvertOrigin<Self::RuntimeOrigin>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ControllerOriginConverter`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `AccountId32Aliases<mock::para::RelayNetwork, sp_runtime::AccountId32>: ConvertLocation<u64>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":11705,"byte_end":11738,"line_start":329,"line_end":329,"column_start":35,"column_end":68,"is_primary":true,"text":[{"text":"\ttype ControllerOriginConverter = XcmOriginToTransactDispatchOrigin;","highlight_start":35,"highlight_end":68}],"label":"the trait `ConvertLocation<u64>` is not implemented for `AccountId32Aliases<mock::para::RelayNetwork, sp_runtime::AccountId32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `ConvertLocation<AccountId>` is implemented for `AccountId32Aliases<Network, AccountId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `(ParentIsPreset<AccountId32>, SiblingParachainConvertsVia<Sibling, AccountId32>, AccountId32Aliases<..., ...>)` to implement `ConvertLocation<u64>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-14245772550176827075.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, SiblingParachainConvertsVia<Sibling, ...>, ...), ...>` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-8580360115438010377.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `(SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, ..., ...), ...>, ..., ..., ..., ..., ...)` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-18257033176972527605.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `cumulus_pallet_xcmp_queue::Config::ControllerOriginConverter`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs","byte_start":5645,"byte_end":5679,"line_start":140,"line_end":140,"column_start":35,"column_end":69,"is_primary":true,"text":[{"text":"\t\ttype ControllerOriginConverter: ConvertOrigin<Self::RuntimeOrigin>;","highlight_start":35,"highlight_end":69}],"label":"required by this bound in `Config::ControllerOriginConverter`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `AccountId32Aliases<mock::para::RelayNetwork, sp_runtime::AccountId32>: ConvertLocation<u64>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:329:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ControllerOriginConverter = XcmOriginToTransactDispatchOrigin;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ConvertLocation<u64>` is not implemented for `AccountId32Aliases<mock::para::RelayNetwork, sp_runtime::AccountId32>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `ConvertLocation<AccountId>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mAccountId32Aliases<Network, AccountId>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `(ParentIsPreset<AccountId32>, SiblingParachainConvertsVia<Sibling, AccountId32>, AccountId32Aliases<..., ...>)` to implement `ConvertLocation<u64>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-14245772550176827075.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, SiblingParachainConvertsVia<Sibling, ...>, ...), ...>` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-8580360115438010377.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `(SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, ..., ...), ...>, ..., ..., ..., ..., ...)` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-18257033176972527605.txt'\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `cumulus_pallet_xcmp_queue::Config::ControllerOriginConverter`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs:140:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ControllerOriginConverter: ConvertOrigin<Self::RuntimeOrigin>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ControllerOriginConverter`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `std::option::Option<cumulus_primitives_core::NetworkId>: From<std::option::Option<staging_xcm::v3::NetworkId>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":11705,"byte_end":11738,"line_start":329,"line_end":329,"column_start":35,"column_end":68,"is_primary":true,"text":[{"text":"\ttype ControllerOriginConverter = XcmOriginToTransactDispatchOrigin;","highlight_start":35,"highlight_end":68}],"label":"the trait `From<std::option::Option<staging_xcm::v3::NetworkId>>` is not implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `From<staging_xcm::v3::NetworkId>` is implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `staging_xcm::v3::NetworkId`, found `std::option::Option<staging_xcm::v3::NetworkId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `mock::para::RelayNetwork` to implement `sp_core::Get<std::option::Option<cumulus_primitives_core::NetworkId>>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11282,"byte_end":11293,"line_start":302,"line_end":302,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11312,"byte_end":11335,"line_start":302,"line_end":302,"column_start":42,"column_end":65,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":42,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11340,"byte_end":11364,"line_start":302,"line_end":302,"column_start":70,"column_end":94,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":70,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `SignedAccountId32AsNative<mock::para::RelayNetwork, mock::para::RuntimeOrigin>` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `(SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, ..., ...), ...>, ..., ..., ..., ..., ...)` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-18257033176972527605.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `cumulus_pallet_xcmp_queue::Config::ControllerOriginConverter`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs","byte_start":5645,"byte_end":5679,"line_start":140,"line_end":140,"column_start":35,"column_end":69,"is_primary":true,"text":[{"text":"\t\ttype ControllerOriginConverter: ConvertOrigin<Self::RuntimeOrigin>;","highlight_start":35,"highlight_end":69}],"label":"required by this bound in `Config::ControllerOriginConverter`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `std::option::Option<cumulus_primitives_core::NetworkId>: From<std::option::Option<staging_xcm::v3::NetworkId>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:329:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ControllerOriginConverter = XcmOriginToTransactDispatchOrigin;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<std::option::Option<staging_xcm::v3::NetworkId>>` is not implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `From<staging_xcm::v3::NetworkId>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::option::Option<cumulus_primitives_core::NetworkId>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `staging_xcm::v3::NetworkId`, found `std::option::Option<staging_xcm::v3::NetworkId>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `mock::para::RelayNetwork` to implement `sp_core::Get<std::option::Option<cumulus_primitives_core::NetworkId>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayLocation: MultiLocation = MultiLocation::parent();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const AnyNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedAccountId32AsNative<mock::para::RelayNetwork, mock::para::RuntimeOrigin>` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `(SovereignSignedViaLocation<(ParentIsPreset<AccountId32>, ..., ...), ...>, ..., ..., ..., ..., ...)` to implement `ConvertOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-18257033176972527605.txt'\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `cumulus_pallet_xcmp_queue::Config::ControllerOriginConverter`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs:140:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ControllerOriginConverter: ConvertOrigin<Self::RuntimeOrigin>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ControllerOriginConverter`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `cumulus_primitives_core::Location: From<staging_xcm::v3::AssetId>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":11795,"byte_end":11827,"line_start":331,"line_end":331,"column_start":33,"column_end":65,"is_primary":true,"text":[{"text":"\ttype PriceForSiblingDelivery = PriceForSiblingParachainDelivery;","highlight_start":33,"highlight_end":65}],"label":"the trait `From<staging_xcm::v3::AssetId>` is not implemented for `cumulus_primitives_core::Location`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::AggregateMessageOrigin>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junction>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junctions>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Parent>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::ParentThen>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Ancestor>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::AncestorThen<Interior>>>\n  <cumulus_primitives_core::Location as From<[u8; 32]>>\nand 108 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `staging_xcm::v3::AssetId` to implement `Into<cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `cumulus_primitives_core::AssetId` to implement `From<staging_xcm::v3::AssetId>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `FeeAssetId` to implement `sp_core::Get<cumulus_primitives_core::AssetId>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11811,"byte_end":11822,"line_start":323,"line_end":323,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":12464,"byte_end":12809,"line_start":427,"line_end":433,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\t/// The amount of weight an XCM operation takes. This is a safe overestimate.","highlight_start":1,"highlight_end":79},{"text":"\t/// The asset ID for the asset that we use to pay for message delivery fees.","highlight_start":1,"highlight_end":78},{"text":"\tpub FeeAssetId: AssetId = Concrete(RelayLocation::get());","highlight_start":1,"highlight_end":59},{"text":"\t/// The base fee for the message delivery fees.","highlight_start":1,"highlight_end":49},{"text":"\tpub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);","highlight_start":1,"highlight_end":60},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11842,"byte_end":11865,"line_start":323,"line_end":323,"column_start":43,"column_end":66,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":43,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":12464,"byte_end":12809,"line_start":427,"line_end":433,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\t/// The amount of weight an XCM operation takes. This is a safe overestimate.","highlight_start":1,"highlight_end":79},{"text":"\t/// The asset ID for the asset that we use to pay for message delivery fees.","highlight_start":1,"highlight_end":78},{"text":"\tpub FeeAssetId: AssetId = Concrete(RelayLocation::get());","highlight_start":1,"highlight_end":59},{"text":"\t/// The base fee for the message delivery fees.","highlight_start":1,"highlight_end":49},{"text":"\tpub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);","highlight_start":1,"highlight_end":60},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11870,"byte_end":11894,"line_start":323,"line_end":323,"column_start":71,"column_end":95,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":71,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":12464,"byte_end":12809,"line_start":427,"line_end":433,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\t/// The amount of weight an XCM operation takes. This is a safe overestimate.","highlight_start":1,"highlight_end":79},{"text":"\t/// The asset ID for the asset that we use to pay for message delivery fees.","highlight_start":1,"highlight_end":78},{"text":"\tpub FeeAssetId: AssetId = Concrete(RelayLocation::get());","highlight_start":1,"highlight_end":59},{"text":"\t/// The base fee for the message delivery fees.","highlight_start":1,"highlight_end":49},{"text":"\tpub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);","highlight_start":1,"highlight_end":60},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `ExponentialPrice<FeeAssetId, BaseDeliveryFee, TransactionByteFee, cumulus_pallet_xcmp_queue::Pallet<mock::para::Test>>` to implement `PriceForMessageDelivery`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `cumulus_pallet_xcmp_queue::Config::PriceForSiblingDelivery`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs","byte_start":5812,"byte_end":5823,"line_start":143,"line_end":143,"column_start":57,"column_end":68,"is_primary":true,"text":[{"text":"\t\ttype PriceForSiblingDelivery: PriceForMessageDelivery<Id = ParaId>;","highlight_start":57,"highlight_end":68}],"label":"required by this bound in `Config::PriceForSiblingDelivery`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `cumulus_primitives_core::Location: From<staging_xcm::v3::AssetId>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:331:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m331\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type PriceForSiblingDelivery = PriceForSiblingParachainDelivery;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<staging_xcm::v3::AssetId>` is not implemented for `cumulus_primitives_core::Location`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::AggregateMessageOrigin>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junction>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junctions>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Parent>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::ParentThen>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Ancestor>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::AncestorThen<Interior>>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<[u8; 32]>>\u001b[0m\n\u001b[0m            and 108 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `staging_xcm::v3::AssetId` to implement `Into<cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `cumulus_primitives_core::AssetId` to implement `From<staging_xcm::v3::AssetId>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `FeeAssetId` to implement `sp_core::Get<cumulus_primitives_core::AssetId>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:427:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m427\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m428\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// The amount of weight an XCM operation takes. This is a safe overestimate.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// The asset ID for the asset that we use to pay for message delivery fees.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m430\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub FeeAssetId: AssetId = Concrete(RelayLocation::get());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m431\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// The base fee for the message delivery fees.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m432\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m433\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `ExponentialPrice<FeeAssetId, BaseDeliveryFee, TransactionByteFee, cumulus_pallet_xcmp_queue::Pallet<mock::para::Test>>` to implement `PriceForMessageDelivery`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `cumulus_pallet_xcmp_queue::Config::PriceForSiblingDelivery`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs:143:57\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type PriceForSiblingDelivery: PriceForMessageDelivery<Id = ParaId>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::PriceForSiblingDelivery`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `DmpSink`, `WeightInfo`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":11832,"byte_end":11878,"line_start":334,"line_end":334,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"impl cumulus_pallet_dmp_queue::Config for Test {","highlight_start":1,"highlight_end":47}],"label":"missing `DmpSink`, `WeightInfo` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `type DmpSink = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":11916,"byte_end":11916,"line_start":336,"line_end":336,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type DmpSink = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type WeightInfo = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":11916,"byte_end":11916,"line_start":336,"line_end":336,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type WeightInfo = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `DmpSink`, `WeightInfo`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:334:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl cumulus_pallet_dmp_queue::Config for Test {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `DmpSink`, `WeightInfo` in implementation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type DmpSink = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type WeightInfo = /* Type */;`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type mismatch resolving `<OriginCaller as TryInto<RawOrigin<AccountId32>>>::Error == OriginCaller`","code":{"code":"E0271","explanation":"A type mismatched an associated type of a trait.\n\nErroneous code example:\n\n```compile_fail,E0271\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType=u32> {\n//                    ~~~~~~~~ ~~~~~~~~~~~~~~~~~~\n//                        |            |\n//         This says `foo` can         |\n//           only be used with         |\n//              some type that         |\n//         implements `Trait`.         |\n//                                     |\n//                             This says not only must\n//                             `T` be an impl of `Trait`\n//                             but also that the impl\n//                             must assign the type `u32`\n//                             to the associated type.\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n//~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//      |                             |\n// `i8` does have                     |\n// implementation                     |\n// of `Trait`...                      |\n//                     ... but it is an implementation\n//                     that assigns `&'static str` to\n//                     the associated type.\n\nfoo(3_i8);\n// Here, we invoke `foo` with an `i8`, which does not satisfy\n// the constraint `<i8 as Trait>::AssociatedType=u32`, and\n// therefore the type-checker complains with this error code.\n```\n\nThe issue can be resolved by changing the associated type:\n1) in the `foo` implementation:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = &'static str> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n\nfoo(3_i8);\n```\n\n2) in the `Trait` implementation for `i8`:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = u32> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = u32; }\n\nfoo(3_i8);\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":12355,"byte_end":12408,"line_start":352,"line_end":352,"column_start":23,"column_end":76,"is_primary":true,"text":[{"text":"\ttype SendXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":23,"highlight_end":76}],"label":"expected `OriginCaller`, found `Infallible`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::SendXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":6287,"byte_end":6305,"line_start":219,"line_end":219,"column_start":72,"column_end":90,"is_primary":true,"text":[{"text":"\t\ttype SendXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;","highlight_start":72,"highlight_end":90}],"label":"required by this bound in `Config::SendXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0271]\u001b[0m\u001b[0m\u001b[1m: type mismatch resolving `<OriginCaller as TryInto<RawOrigin<AccountId32>>>::Error == OriginCaller`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:352:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type SendXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `OriginCaller`, found `Infallible`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::SendXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:219:72\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type SendXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::SendXcmOrigin`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `mock::para::OriginCaller: From<RawOrigin<sp_runtime::AccountId32>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":12355,"byte_end":12408,"line_start":352,"line_end":352,"column_start":23,"column_end":76,"is_primary":true,"text":[{"text":"\ttype SendXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":23,"highlight_end":76}],"label":"the trait `From<RawOrigin<sp_runtime::AccountId32>>` is not implemented for `mock::para::OriginCaller`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <mock::para::OriginCaller as From<cumulus_pallet_xcm::Origin>>\n  <mock::para::OriginCaller as From<pallet_xcm::Origin>>\n  <mock::para::OriginCaller as From<RawOrigin<<mock::para::Test as frame_system::Config>::AccountId>>>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::SendXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":6287,"byte_end":6305,"line_start":219,"line_end":219,"column_start":72,"column_end":90,"is_primary":true,"text":[{"text":"\t\ttype SendXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;","highlight_start":72,"highlight_end":90}],"label":"required by this bound in `Config::SendXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `mock::para::OriginCaller: From<RawOrigin<sp_runtime::AccountId32>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:352:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type SendXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<RawOrigin<sp_runtime::AccountId32>>` is not implemented for `mock::para::OriginCaller`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <mock::para::OriginCaller as From<cumulus_pallet_xcm::Origin>>\u001b[0m\n\u001b[0m              <mock::para::OriginCaller as From<pallet_xcm::Origin>>\u001b[0m\n\u001b[0m              <mock::para::OriginCaller as From<RawOrigin<<mock::para::Test as frame_system::Config>::AccountId>>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::SendXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:219:72\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type SendXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::SendXcmOrigin`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `std::option::Option<cumulus_primitives_core::NetworkId>: From<std::option::Option<staging_xcm::v3::NetworkId>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":12355,"byte_end":12408,"line_start":352,"line_end":352,"column_start":23,"column_end":76,"is_primary":true,"text":[{"text":"\ttype SendXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":23,"highlight_end":76}],"label":"the trait `From<std::option::Option<staging_xcm::v3::NetworkId>>` is not implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `From<staging_xcm::v3::NetworkId>` is implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `staging_xcm::v3::NetworkId`, found `std::option::Option<staging_xcm::v3::NetworkId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `mock::para::AnyNetwork` to implement `sp_core::Get<std::option::Option<cumulus_primitives_core::NetworkId>>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11282,"byte_end":11293,"line_start":302,"line_end":302,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11312,"byte_end":11335,"line_start":302,"line_end":302,"column_start":42,"column_end":65,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":42,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11340,"byte_end":11364,"line_start":302,"line_end":302,"column_start":70,"column_end":94,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":70,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::SendXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":6287,"byte_end":6305,"line_start":219,"line_end":219,"column_start":72,"column_end":90,"is_primary":true,"text":[{"text":"\t\ttype SendXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;","highlight_start":72,"highlight_end":90}],"label":"required by this bound in `Config::SendXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `std::option::Option<cumulus_primitives_core::NetworkId>: From<std::option::Option<staging_xcm::v3::NetworkId>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:352:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type SendXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<std::option::Option<staging_xcm::v3::NetworkId>>` is not implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `From<staging_xcm::v3::NetworkId>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::option::Option<cumulus_primitives_core::NetworkId>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `staging_xcm::v3::NetworkId`, found `std::option::Option<staging_xcm::v3::NetworkId>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `mock::para::AnyNetwork` to implement `sp_core::Get<std::option::Option<cumulus_primitives_core::NetworkId>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayLocation: MultiLocation = MultiLocation::parent();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const AnyNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::SendXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:219:72\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type SendXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::SendXcmOrigin`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `RawOrigin<sp_runtime::AccountId32>: From<mock::para::OriginCaller>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":12355,"byte_end":12408,"line_start":352,"line_end":352,"column_start":23,"column_end":76,"is_primary":true,"text":[{"text":"\ttype SendXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":23,"highlight_end":76}],"label":"the trait `From<mock::para::OriginCaller>` is not implemented for `RawOrigin<sp_runtime::AccountId32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `From<std::option::Option<sp_runtime::AccountId32>>` is implemented for `RawOrigin<sp_runtime::AccountId32>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `std::option::Option<sp_runtime::AccountId32>`, found `mock::para::OriginCaller`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `mock::para::OriginCaller` to implement `Into<RawOrigin<sp_runtime::AccountId32>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `RawOrigin<sp_runtime::AccountId32>` to implement `TryFrom<mock::para::OriginCaller>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `mock::para::OriginCaller` to implement `TryInto<RawOrigin<sp_runtime::AccountId32>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::SendXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":6287,"byte_end":6305,"line_start":219,"line_end":219,"column_start":72,"column_end":90,"is_primary":true,"text":[{"text":"\t\ttype SendXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;","highlight_start":72,"highlight_end":90}],"label":"required by this bound in `Config::SendXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `RawOrigin<sp_runtime::AccountId32>: From<mock::para::OriginCaller>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:352:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type SendXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<mock::para::OriginCaller>` is not implemented for `RawOrigin<sp_runtime::AccountId32>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `From<std::option::Option<sp_runtime::AccountId32>>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mRawOrigin<sp_runtime::AccountId32>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `std::option::Option<sp_runtime::AccountId32>`, found `mock::para::OriginCaller`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `mock::para::OriginCaller` to implement `Into<RawOrigin<sp_runtime::AccountId32>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `RawOrigin<sp_runtime::AccountId32>` to implement `TryFrom<mock::para::OriginCaller>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `mock::para::OriginCaller` to implement `TryInto<RawOrigin<sp_runtime::AccountId32>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::SendXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:219:72\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type SendXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::SendXcmOrigin`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type mismatch resolving `<OriginCaller as TryInto<RawOrigin<AccountId32>>>::Error == OriginCaller`","code":{"code":"E0271","explanation":"A type mismatched an associated type of a trait.\n\nErroneous code example:\n\n```compile_fail,E0271\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType=u32> {\n//                    ~~~~~~~~ ~~~~~~~~~~~~~~~~~~\n//                        |            |\n//         This says `foo` can         |\n//           only be used with         |\n//              some type that         |\n//         implements `Trait`.         |\n//                                     |\n//                             This says not only must\n//                             `T` be an impl of `Trait`\n//                             but also that the impl\n//                             must assign the type `u32`\n//                             to the associated type.\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n//~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//      |                             |\n// `i8` does have                     |\n// implementation                     |\n// of `Trait`...                      |\n//                     ... but it is an implementation\n//                     that assigns `&'static str` to\n//                     the associated type.\n\nfoo(3_i8);\n// Here, we invoke `foo` with an `i8`, which does not satisfy\n// the constraint `<i8 as Trait>::AssociatedType=u32`, and\n// therefore the type-checker complains with this error code.\n```\n\nThe issue can be resolved by changing the associated type:\n1) in the `foo` implementation:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = &'static str> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n\nfoo(3_i8);\n```\n\n2) in the `Trait` implementation for `i8`:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = u32> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = u32; }\n\nfoo(3_i8);\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":12464,"byte_end":12517,"line_start":354,"line_end":354,"column_start":26,"column_end":79,"is_primary":true,"text":[{"text":"\ttype ExecuteXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":26,"highlight_end":79}],"label":"expected `OriginCaller`, found `Infallible`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::ExecuteXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":6695,"byte_end":6713,"line_start":227,"line_end":227,"column_start":75,"column_end":93,"is_primary":true,"text":[{"text":"\t\ttype ExecuteXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;","highlight_start":75,"highlight_end":93}],"label":"required by this bound in `Config::ExecuteXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0271]\u001b[0m\u001b[0m\u001b[1m: type mismatch resolving `<OriginCaller as TryInto<RawOrigin<AccountId32>>>::Error == OriginCaller`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:354:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ExecuteXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `OriginCaller`, found `Infallible`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::ExecuteXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:227:75\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ExecuteXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ExecuteXcmOrigin`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `mock::para::OriginCaller: From<RawOrigin<sp_runtime::AccountId32>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":12464,"byte_end":12517,"line_start":354,"line_end":354,"column_start":26,"column_end":79,"is_primary":true,"text":[{"text":"\ttype ExecuteXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":26,"highlight_end":79}],"label":"the trait `From<RawOrigin<sp_runtime::AccountId32>>` is not implemented for `mock::para::OriginCaller`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <mock::para::OriginCaller as From<cumulus_pallet_xcm::Origin>>\n  <mock::para::OriginCaller as From<pallet_xcm::Origin>>\n  <mock::para::OriginCaller as From<RawOrigin<<mock::para::Test as frame_system::Config>::AccountId>>>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::ExecuteXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":6695,"byte_end":6713,"line_start":227,"line_end":227,"column_start":75,"column_end":93,"is_primary":true,"text":[{"text":"\t\ttype ExecuteXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;","highlight_start":75,"highlight_end":93}],"label":"required by this bound in `Config::ExecuteXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `mock::para::OriginCaller: From<RawOrigin<sp_runtime::AccountId32>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:354:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ExecuteXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<RawOrigin<sp_runtime::AccountId32>>` is not implemented for `mock::para::OriginCaller`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <mock::para::OriginCaller as From<cumulus_pallet_xcm::Origin>>\u001b[0m\n\u001b[0m              <mock::para::OriginCaller as From<pallet_xcm::Origin>>\u001b[0m\n\u001b[0m              <mock::para::OriginCaller as From<RawOrigin<<mock::para::Test as frame_system::Config>::AccountId>>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::ExecuteXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:227:75\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ExecuteXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ExecuteXcmOrigin`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `std::option::Option<cumulus_primitives_core::NetworkId>: From<std::option::Option<staging_xcm::v3::NetworkId>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":12464,"byte_end":12517,"line_start":354,"line_end":354,"column_start":26,"column_end":79,"is_primary":true,"text":[{"text":"\ttype ExecuteXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":26,"highlight_end":79}],"label":"the trait `From<std::option::Option<staging_xcm::v3::NetworkId>>` is not implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `From<staging_xcm::v3::NetworkId>` is implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `staging_xcm::v3::NetworkId`, found `std::option::Option<staging_xcm::v3::NetworkId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `mock::para::AnyNetwork` to implement `sp_core::Get<std::option::Option<cumulus_primitives_core::NetworkId>>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11282,"byte_end":11293,"line_start":302,"line_end":302,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11312,"byte_end":11335,"line_start":302,"line_end":302,"column_start":42,"column_end":65,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":42,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11340,"byte_end":11364,"line_start":302,"line_end":302,"column_start":70,"column_end":94,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":70,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::ExecuteXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":6695,"byte_end":6713,"line_start":227,"line_end":227,"column_start":75,"column_end":93,"is_primary":true,"text":[{"text":"\t\ttype ExecuteXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;","highlight_start":75,"highlight_end":93}],"label":"required by this bound in `Config::ExecuteXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `std::option::Option<cumulus_primitives_core::NetworkId>: From<std::option::Option<staging_xcm::v3::NetworkId>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:354:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ExecuteXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<std::option::Option<staging_xcm::v3::NetworkId>>` is not implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `From<staging_xcm::v3::NetworkId>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::option::Option<cumulus_primitives_core::NetworkId>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `staging_xcm::v3::NetworkId`, found `std::option::Option<staging_xcm::v3::NetworkId>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `mock::para::AnyNetwork` to implement `sp_core::Get<std::option::Option<cumulus_primitives_core::NetworkId>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayLocation: MultiLocation = MultiLocation::parent();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const AnyNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::ExecuteXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:227:75\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ExecuteXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ExecuteXcmOrigin`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `RawOrigin<sp_runtime::AccountId32>: From<mock::para::OriginCaller>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":12464,"byte_end":12517,"line_start":354,"line_end":354,"column_start":26,"column_end":79,"is_primary":true,"text":[{"text":"\ttype ExecuteXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":26,"highlight_end":79}],"label":"the trait `From<mock::para::OriginCaller>` is not implemented for `RawOrigin<sp_runtime::AccountId32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `From<std::option::Option<sp_runtime::AccountId32>>` is implemented for `RawOrigin<sp_runtime::AccountId32>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `std::option::Option<sp_runtime::AccountId32>`, found `mock::para::OriginCaller`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `mock::para::OriginCaller` to implement `Into<RawOrigin<sp_runtime::AccountId32>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `RawOrigin<sp_runtime::AccountId32>` to implement `TryFrom<mock::para::OriginCaller>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `mock::para::OriginCaller` to implement `TryInto<RawOrigin<sp_runtime::AccountId32>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::ExecuteXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":6695,"byte_end":6713,"line_start":227,"line_end":227,"column_start":75,"column_end":93,"is_primary":true,"text":[{"text":"\t\ttype ExecuteXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;","highlight_start":75,"highlight_end":93}],"label":"required by this bound in `Config::ExecuteXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `RawOrigin<sp_runtime::AccountId32>: From<mock::para::OriginCaller>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:354:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ExecuteXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<mock::para::OriginCaller>` is not implemented for `RawOrigin<sp_runtime::AccountId32>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `From<std::option::Option<sp_runtime::AccountId32>>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mRawOrigin<sp_runtime::AccountId32>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `std::option::Option<sp_runtime::AccountId32>`, found `mock::para::OriginCaller`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `mock::para::OriginCaller` to implement `Into<RawOrigin<sp_runtime::AccountId32>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `RawOrigin<sp_runtime::AccountId32>` to implement `TryFrom<mock::para::OriginCaller>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `mock::para::OriginCaller` to implement `TryInto<RawOrigin<sp_runtime::AccountId32>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::ExecuteXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:227:75\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ExecuteXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ExecuteXcmOrigin`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `cumulus_primitives_core::Junction: From<staging_xcm::v3::Junctions>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":12790,"byte_end":12807,"line_start":360,"line_end":360,"column_start":27,"column_end":44,"is_primary":true,"text":[{"text":"\ttype UniversalLocation = UniversalLocation;","highlight_start":27,"highlight_end":44}],"label":"the trait `From<staging_xcm::v3::Junctions>` is not implemented for `cumulus_primitives_core::Junction`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <cumulus_primitives_core::Junction as From<u64>>\n  <cumulus_primitives_core::Junction as From<u128>>\n  <cumulus_primitives_core::Junction as From<sp_runtime::BoundedVec<u8, ConstU32<32>>>>\n  <cumulus_primitives_core::Junction as From<BoundedSlice<'a, u8, ConstU32<32>>>>\n  <cumulus_primitives_core::Junction as From<cumulus_primitives_core::NetworkId>>\n  <cumulus_primitives_core::Junction as From<[u8; 20]>>\n  <cumulus_primitives_core::Junction as From<[u8; 32]>>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `staging_xcm::v3::Junctions` to implement `Into<cumulus_primitives_core::Junction>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `cumulus_primitives_core::Junctions` to implement `From<staging_xcm::v3::Junctions>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `mock::para::UniversalLocation` to implement `sp_core::Get<cumulus_primitives_core::Junctions>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11811,"byte_end":11822,"line_start":323,"line_end":323,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10573,"byte_end":10612,"line_start":279,"line_end":279,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11842,"byte_end":11865,"line_start":323,"line_end":323,"column_start":43,"column_end":66,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":43,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10573,"byte_end":10612,"line_start":279,"line_end":279,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11870,"byte_end":11894,"line_start":323,"line_end":323,"column_start":71,"column_end":95,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":71,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10573,"byte_end":10612,"line_start":279,"line_end":279,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::UniversalLocation`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":7541,"byte_end":7562,"line_start":246,"line_end":246,"column_start":27,"column_end":48,"is_primary":true,"text":[{"text":"\t\ttype UniversalLocation: Get<InteriorLocation>;","highlight_start":27,"highlight_end":48}],"label":"required by this bound in `Config::UniversalLocation`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `cumulus_primitives_core::Junction: From<staging_xcm::v3::Junctions>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:360:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m360\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type UniversalLocation = UniversalLocation;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<staging_xcm::v3::Junctions>` is not implemented for `cumulus_primitives_core::Junction`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<u64>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<u128>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<sp_runtime::BoundedVec<u8, ConstU32<32>>>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<BoundedSlice<'a, u8, ConstU32<32>>>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<cumulus_primitives_core::NetworkId>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<[u8; 20]>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<[u8; 32]>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `staging_xcm::v3::Junctions` to implement `Into<cumulus_primitives_core::Junction>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `cumulus_primitives_core::Junctions` to implement `From<staging_xcm::v3::Junctions>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `mock::para::UniversalLocation` to implement `sp_core::Get<cumulus_primitives_core::Junctions>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayLocation: MultiLocation = MultiLocation::parent();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const AnyNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::UniversalLocation`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:246:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type UniversalLocation: Get<InteriorLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::UniversalLocation`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `mock::para::RuntimeOrigin: From<RawOrigin<sp_runtime::AccountId32>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":13199,"byte_end":13220,"line_start":371,"line_end":371,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"\ttype AdminOrigin = EnsureRoot<AccountId>;","highlight_start":21,"highlight_end":42}],"label":"the trait `From<RawOrigin<sp_runtime::AccountId32>>` is not implemented for `mock::para::RuntimeOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <mock::para::RuntimeOrigin as From<cumulus_pallet_xcm::Origin>>\n  <mock::para::RuntimeOrigin as From<pallet_xcm::Origin>>\n  <mock::para::RuntimeOrigin as From<mock::para::OriginCaller>>\n  <mock::para::RuntimeOrigin as From<RawOrigin<<mock::para::Test as frame_system::Config>::AccountId>>>\n  <mock::para::RuntimeOrigin as From<std::option::Option<<mock::para::Test as frame_system::Config>::AccountId>>>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureRoot<sp_runtime::AccountId32>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::AdminOrigin`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":8182,"byte_end":8230,"line_start":266,"line_end":266,"column_start":21,"column_end":69,"is_primary":true,"text":[{"text":"\t\ttype AdminOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin>;","highlight_start":21,"highlight_end":69}],"label":"required by this bound in `Config::AdminOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `mock::para::RuntimeOrigin: From<RawOrigin<sp_runtime::AccountId32>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:371:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m371\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type AdminOrigin = EnsureRoot<AccountId>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<RawOrigin<sp_runtime::AccountId32>>` is not implemented for `mock::para::RuntimeOrigin`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <mock::para::RuntimeOrigin as From<cumulus_pallet_xcm::Origin>>\u001b[0m\n\u001b[0m              <mock::para::RuntimeOrigin as From<pallet_xcm::Origin>>\u001b[0m\n\u001b[0m              <mock::para::RuntimeOrigin as From<mock::para::OriginCaller>>\u001b[0m\n\u001b[0m              <mock::para::RuntimeOrigin as From<RawOrigin<<mock::para::Test as frame_system::Config>::AccountId>>>\u001b[0m\n\u001b[0m              <mock::para::RuntimeOrigin as From<std::option::Option<<mock::para::Test as frame_system::Config>::AccountId>>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureRoot<sp_runtime::AccountId32>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::AdminOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:266:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type AdminOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::AdminOrigin`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Result<RawOrigin<sp_runtime::AccountId32>, mock::para::RuntimeOrigin>: From<mock::para::RuntimeOrigin>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":13199,"byte_end":13220,"line_start":371,"line_end":371,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"\ttype AdminOrigin = EnsureRoot<AccountId>;","highlight_start":21,"highlight_end":42}],"label":"the trait `From<mock::para::RuntimeOrigin>` is not implemented for `Result<RawOrigin<sp_runtime::AccountId32>, mock::para::RuntimeOrigin>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <Result<cumulus_pallet_xcm::Origin, mock::relay::RuntimeOrigin> as From<mock::relay::RuntimeOrigin>>\n  <Result<cumulus_pallet_xcm::Origin, mock::para::RuntimeOrigin> as From<mock::para::RuntimeOrigin>>\n  <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<miniz_oxide::StreamResult>>\n  <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<&miniz_oxide::StreamResult>>\n  <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<miniz_oxide::StreamResult>>\n  <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<&miniz_oxide::StreamResult>>\n  <Result<pallet_xcm::Origin, mock::relay::RuntimeOrigin> as From<mock::relay::RuntimeOrigin>>\n  <Result<pallet_xcm::Origin, mock::para::RuntimeOrigin> as From<mock::para::RuntimeOrigin>>\nand 7 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `mock::para::RuntimeOrigin` to implement `Into<Result<RawOrigin<sp_runtime::AccountId32>, mock::para::RuntimeOrigin>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureRoot<sp_runtime::AccountId32>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::AdminOrigin`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":8182,"byte_end":8230,"line_start":266,"line_end":266,"column_start":21,"column_end":69,"is_primary":true,"text":[{"text":"\t\ttype AdminOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin>;","highlight_start":21,"highlight_end":69}],"label":"required by this bound in `Config::AdminOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Result<RawOrigin<sp_runtime::AccountId32>, mock::para::RuntimeOrigin>: From<mock::para::RuntimeOrigin>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:371:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m371\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type AdminOrigin = EnsureRoot<AccountId>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<mock::para::RuntimeOrigin>` is not implemented for `Result<RawOrigin<sp_runtime::AccountId32>, mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <Result<cumulus_pallet_xcm::Origin, mock::relay::RuntimeOrigin> as From<mock::relay::RuntimeOrigin>>\u001b[0m\n\u001b[0m              <Result<cumulus_pallet_xcm::Origin, mock::para::RuntimeOrigin> as From<mock::para::RuntimeOrigin>>\u001b[0m\n\u001b[0m              <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<miniz_oxide::StreamResult>>\u001b[0m\n\u001b[0m              <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<&miniz_oxide::StreamResult>>\u001b[0m\n\u001b[0m              <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<miniz_oxide::StreamResult>>\u001b[0m\n\u001b[0m              <Result<miniz_oxide::MZStatus, miniz_oxide::MZError> as From<&miniz_oxide::StreamResult>>\u001b[0m\n\u001b[0m              <Result<pallet_xcm::Origin, mock::relay::RuntimeOrigin> as From<mock::relay::RuntimeOrigin>>\u001b[0m\n\u001b[0m              <Result<pallet_xcm::Origin, mock::para::RuntimeOrigin> as From<mock::para::RuntimeOrigin>>\u001b[0m\n\u001b[0m            and 7 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `mock::para::RuntimeOrigin` to implement `Into<Result<RawOrigin<sp_runtime::AccountId32>, mock::para::RuntimeOrigin>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureRoot<sp_runtime::AccountId32>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::AdminOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:266:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type AdminOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::AdminOrigin`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type mismatch resolving `<OriginCaller as TryInto<RawOrigin<AccountId32>>>::Error == OriginCaller`","code":{"code":"E0271","explanation":"A type mismatched an associated type of a trait.\n\nErroneous code example:\n\n```compile_fail,E0271\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType=u32> {\n//                    ~~~~~~~~ ~~~~~~~~~~~~~~~~~~\n//                        |            |\n//         This says `foo` can         |\n//           only be used with         |\n//              some type that         |\n//         implements `Trait`.         |\n//                                     |\n//                             This says not only must\n//                             `T` be an impl of `Trait`\n//                             but also that the impl\n//                             must assign the type `u32`\n//                             to the associated type.\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n//~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//      |                             |\n// `i8` does have                     |\n// implementation                     |\n// of `Trait`...                      |\n//                     ... but it is an implementation\n//                     that assigns `&'static str` to\n//                     the associated type.\n\nfoo(3_i8);\n// Here, we invoke `foo` with an `i8`, which does not satisfy\n// the constraint `<i8 as Trait>::AssociatedType=u32`, and\n// therefore the type-checker complains with this error code.\n```\n\nThe issue can be resolved by changing the associated type:\n1) in the `foo` implementation:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = &'static str> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n\nfoo(3_i8);\n```\n\n2) in the `Trait` implementation for `i8`:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = u32> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = u32; }\n\nfoo(3_i8);\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":14363,"byte_end":14429,"line_start":401,"line_end":401,"column_start":26,"column_end":92,"is_primary":true,"text":[{"text":"\ttype ExecuteXcmOrigin = xcm_builder::EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":26,"highlight_end":92}],"label":"expected `OriginCaller`, found `Infallible`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet::Config::ExecuteXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":4205,"byte_end":4221,"line_start":120,"line_end":120,"column_start":8,"column_end":24,"is_primary":false,"text":[{"text":"\t\ttype ExecuteXcmOrigin: EnsureOrigin<","highlight_start":8,"highlight_end":24}],"label":"required by a bound in this associated type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":4282,"byte_end":4300,"line_start":122,"line_end":122,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"\t\t\tSuccess = Location,","highlight_start":4,"highlight_end":22}],"label":"required by this bound in `Config::ExecuteXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0271]\u001b[0m\u001b[0m\u001b[1m: type mismatch resolving `<OriginCaller as TryInto<RawOrigin<AccountId32>>>::Error == OriginCaller`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:401:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ExecuteXcmOrigin = xcm_builder::EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `OriginCaller`, found `Infallible`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet::Config::ExecuteXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:122:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ExecuteXcmOrigin: EnsureOrigin<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this associated type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            <Self as SystemConfig>::RuntimeOrigin,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Success = Location,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ExecuteXcmOrigin`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `mock::para::OriginCaller: From<RawOrigin<sp_runtime::AccountId32>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":14363,"byte_end":14429,"line_start":401,"line_end":401,"column_start":26,"column_end":92,"is_primary":true,"text":[{"text":"\ttype ExecuteXcmOrigin = xcm_builder::EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":26,"highlight_end":92}],"label":"the trait `From<RawOrigin<sp_runtime::AccountId32>>` is not implemented for `mock::para::OriginCaller`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <mock::para::OriginCaller as From<cumulus_pallet_xcm::Origin>>\n  <mock::para::OriginCaller as From<pallet_xcm::Origin>>\n  <mock::para::OriginCaller as From<RawOrigin<<mock::para::Test as frame_system::Config>::AccountId>>>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet::Config::ExecuteXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":4205,"byte_end":4221,"line_start":120,"line_end":120,"column_start":8,"column_end":24,"is_primary":false,"text":[{"text":"\t\ttype ExecuteXcmOrigin: EnsureOrigin<","highlight_start":8,"highlight_end":24}],"label":"required by a bound in this associated type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":4282,"byte_end":4300,"line_start":122,"line_end":122,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"\t\t\tSuccess = Location,","highlight_start":4,"highlight_end":22}],"label":"required by this bound in `Config::ExecuteXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `mock::para::OriginCaller: From<RawOrigin<sp_runtime::AccountId32>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:401:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ExecuteXcmOrigin = xcm_builder::EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<RawOrigin<sp_runtime::AccountId32>>` is not implemented for `mock::para::OriginCaller`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <mock::para::OriginCaller as From<cumulus_pallet_xcm::Origin>>\u001b[0m\n\u001b[0m              <mock::para::OriginCaller as From<pallet_xcm::Origin>>\u001b[0m\n\u001b[0m              <mock::para::OriginCaller as From<RawOrigin<<mock::para::Test as frame_system::Config>::AccountId>>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet::Config::ExecuteXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:122:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ExecuteXcmOrigin: EnsureOrigin<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this associated type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            <Self as SystemConfig>::RuntimeOrigin,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Success = Location,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ExecuteXcmOrigin`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `std::option::Option<cumulus_primitives_core::NetworkId>: From<std::option::Option<staging_xcm::v3::NetworkId>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":14363,"byte_end":14429,"line_start":401,"line_end":401,"column_start":26,"column_end":92,"is_primary":true,"text":[{"text":"\ttype ExecuteXcmOrigin = xcm_builder::EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":26,"highlight_end":92}],"label":"the trait `From<std::option::Option<staging_xcm::v3::NetworkId>>` is not implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `From<staging_xcm::v3::NetworkId>` is implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `staging_xcm::v3::NetworkId`, found `std::option::Option<staging_xcm::v3::NetworkId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `mock::para::AnyNetwork` to implement `sp_core::Get<std::option::Option<cumulus_primitives_core::NetworkId>>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11282,"byte_end":11293,"line_start":302,"line_end":302,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11312,"byte_end":11335,"line_start":302,"line_end":302,"column_start":42,"column_end":65,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":42,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11340,"byte_end":11364,"line_start":302,"line_end":302,"column_start":70,"column_end":94,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":70,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":7078,"byte_end":7450,"line_start":218,"line_end":224,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet::Config::ExecuteXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":4205,"byte_end":4221,"line_start":120,"line_end":120,"column_start":8,"column_end":24,"is_primary":false,"text":[{"text":"\t\ttype ExecuteXcmOrigin: EnsureOrigin<","highlight_start":8,"highlight_end":24}],"label":"required by a bound in this associated type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":4282,"byte_end":4300,"line_start":122,"line_end":122,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"\t\t\tSuccess = Location,","highlight_start":4,"highlight_end":22}],"label":"required by this bound in `Config::ExecuteXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `std::option::Option<cumulus_primitives_core::NetworkId>: From<std::option::Option<staging_xcm::v3::NetworkId>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:401:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ExecuteXcmOrigin = xcm_builder::EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<std::option::Option<staging_xcm::v3::NetworkId>>` is not implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `From<staging_xcm::v3::NetworkId>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::option::Option<cumulus_primitives_core::NetworkId>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `staging_xcm::v3::NetworkId`, found `std::option::Option<staging_xcm::v3::NetworkId>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `mock::para::AnyNetwork` to implement `sp_core::Get<std::option::Option<cumulus_primitives_core::NetworkId>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayLocation: MultiLocation = MultiLocation::parent();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const AnyNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet::Config::ExecuteXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:122:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ExecuteXcmOrigin: EnsureOrigin<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this associated type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            <Self as SystemConfig>::RuntimeOrigin,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Success = Location,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ExecuteXcmOrigin`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `RawOrigin<sp_runtime::AccountId32>: From<mock::para::OriginCaller>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":14363,"byte_end":14429,"line_start":401,"line_end":401,"column_start":26,"column_end":92,"is_primary":true,"text":[{"text":"\ttype ExecuteXcmOrigin = xcm_builder::EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":26,"highlight_end":92}],"label":"the trait `From<mock::para::OriginCaller>` is not implemented for `RawOrigin<sp_runtime::AccountId32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `From<std::option::Option<sp_runtime::AccountId32>>` is implemented for `RawOrigin<sp_runtime::AccountId32>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `std::option::Option<sp_runtime::AccountId32>`, found `mock::para::OriginCaller`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `mock::para::OriginCaller` to implement `Into<RawOrigin<sp_runtime::AccountId32>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `RawOrigin<sp_runtime::AccountId32>` to implement `TryFrom<mock::para::OriginCaller>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `mock::para::OriginCaller` to implement `TryInto<RawOrigin<sp_runtime::AccountId32>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet::Config::ExecuteXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":4205,"byte_end":4221,"line_start":120,"line_end":120,"column_start":8,"column_end":24,"is_primary":false,"text":[{"text":"\t\ttype ExecuteXcmOrigin: EnsureOrigin<","highlight_start":8,"highlight_end":24}],"label":"required by a bound in this associated type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":4282,"byte_end":4300,"line_start":122,"line_end":122,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"\t\t\tSuccess = Location,","highlight_start":4,"highlight_end":22}],"label":"required by this bound in `Config::ExecuteXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `RawOrigin<sp_runtime::AccountId32>: From<mock::para::OriginCaller>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:401:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ExecuteXcmOrigin = xcm_builder::EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<mock::para::OriginCaller>` is not implemented for `RawOrigin<sp_runtime::AccountId32>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `From<std::option::Option<sp_runtime::AccountId32>>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mRawOrigin<sp_runtime::AccountId32>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `std::option::Option<sp_runtime::AccountId32>`, found `mock::para::OriginCaller`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `mock::para::OriginCaller` to implement `Into<RawOrigin<sp_runtime::AccountId32>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `RawOrigin<sp_runtime::AccountId32>` to implement `TryFrom<mock::para::OriginCaller>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `mock::para::OriginCaller` to implement `TryInto<RawOrigin<sp_runtime::AccountId32>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>` to implement `TryConvert<mock::para::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<mock::para::RuntimeOrigin, SignedToAccountId32<mock::para::RuntimeOrigin, sp_runtime::AccountId32, mock::para::AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::para::RuntimeOrigin>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet::Config::ExecuteXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:122:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ExecuteXcmOrigin: EnsureOrigin<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this associated type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            <Self as SystemConfig>::RuntimeOrigin,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Success = Location,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ExecuteXcmOrigin`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `RuntimeHoldReason`, `RuntimeFreezeReason`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":6011,"byte_end":6048,"line_start":202,"line_end":202,"column_start":1,"column_end":38,"is_primary":true,"text":[{"text":"impl pallet_balances::Config for Test {","highlight_start":1,"highlight_end":38}],"label":"missing `RuntimeHoldReason`, `RuntimeFreezeReason` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `type RuntimeHoldReason = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":6388,"byte_end":6388,"line_start":214,"line_end":214,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type RuntimeHoldReason = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type RuntimeFreezeReason = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":6388,"byte_end":6388,"line_start":214,"line_end":214,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type RuntimeFreezeReason = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `RuntimeHoldReason`, `RuntimeFreezeReason`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:202:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl pallet_balances::Config for Test {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `RuntimeHoldReason`, `RuntimeFreezeReason` in implementation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type RuntimeHoldReason = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type RuntimeFreezeReason = /* Type */;`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `TestNextSessionRotation: EstimateNextSessionRotation<u64>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":7142,"byte_end":7165,"line_start":240,"line_end":240,"column_start":29,"column_end":52,"is_primary":true,"text":[{"text":"\ttype NextSessionRotation = TestNextSessionRotation;","highlight_start":29,"highlight_end":52}],"label":"the trait `EstimateNextSessionRotation<u64>` is not implemented for `TestNextSessionRotation`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `EstimateNextSessionRotation<u32>` is implemented for `TestNextSessionRotation`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `u32`, found `u64`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `polkadot_runtime_parachains::paras::Config::NextSessionRotation`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/runtime/parachains/src/paras/mod.rs","byte_start":23975,"byte_end":24024,"line_start":626,"line_end":626,"column_start":29,"column_end":78,"is_primary":true,"text":[{"text":"\t\ttype NextSessionRotation: EstimateNextSessionRotation<BlockNumberFor<Self>>;","highlight_start":29,"highlight_end":78}],"label":"required by this bound in `Config::NextSessionRotation`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `TestNextSessionRotation: EstimateNextSessionRotation<u64>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:240:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type NextSessionRotation = TestNextSessionRotation;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `EstimateNextSessionRotation<u64>` is not implemented for `TestNextSessionRotation`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `EstimateNextSessionRotation<u32>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mTestNextSessionRotation\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `u32`, found `u64`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `polkadot_runtime_parachains::paras::Config::NextSessionRotation`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/runtime/parachains/src/paras/mod.rs:626:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m626\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type NextSessionRotation: EstimateNextSessionRotation<BlockNumberFor<Self>>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::NextSessionRotation`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `OnNewHead`, `AssignCoretime`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":6890,"byte_end":6917,"line_start":235,"line_end":235,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"impl paras::Config for Test {","highlight_start":1,"highlight_end":28}],"label":"missing `OnNewHead`, `AssignCoretime` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `type OnNewHead = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":7167,"byte_end":7167,"line_start":241,"line_end":241,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type OnNewHead = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type AssignCoretime = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":7167,"byte_end":7167,"line_start":241,"line_end":241,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type AssignCoretime = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `OnNewHead`, `AssignCoretime`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:235:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl paras::Config for Test {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `OnNewHead`, `AssignCoretime` in implementation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type OnNewHead = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type AssignCoretime = /* Type */;`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `AssignmentProvider`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":8851,"byte_end":8882,"line_start":312,"line_end":312,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"impl scheduler::Config for Test {}","highlight_start":1,"highlight_end":32}],"label":"missing `AssignmentProvider` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `type AssignmentProvider = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":8884,"byte_end":8884,"line_start":312,"line_end":312,"column_start":34,"column_end":34,"is_primary":true,"text":[{"text":"impl scheduler::Config for Test {}","highlight_start":34,"highlight_end":34}],"label":null,"suggested_replacement":"type AssignmentProvider = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `AssignmentProvider`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:312:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m312\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl scheduler::Config for Test {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `AssignmentProvider` in implementation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type AssignmentProvider = /* Type */;`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `mock::relay::Test: SlashingHandler<u64>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":9010,"byte_end":9014,"line_start":317,"line_end":317,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"\ttype SlashingHandler = Self;","highlight_start":25,"highlight_end":29}],"label":"the trait `SlashingHandler<u64>` is not implemented for `mock::relay::Test`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `SlashingHandler<u32>` is implemented for `mock::relay::Test`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `u32`, found `u64`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `polkadot_runtime_parachains::disputes::Config::SlashingHandler`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/runtime/parachains/src/disputes.rs","byte_start":11989,"byte_end":12026,"line_start":376,"line_end":376,"column_start":25,"column_end":62,"is_primary":true,"text":[{"text":"\t\ttype SlashingHandler: SlashingHandler<BlockNumberFor<Self>>;","highlight_start":25,"highlight_end":62}],"label":"required by this bound in `Config::SlashingHandler`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `mock::relay::Test: SlashingHandler<u64>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:317:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m317\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type SlashingHandler = Self;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `SlashingHandler<u64>` is not implemented for `mock::relay::Test`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `SlashingHandler<u32>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mmock::relay::Test\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `u32`, found `u64`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `polkadot_runtime_parachains::disputes::Config::SlashingHandler`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/runtime/parachains/src/disputes.rs:376:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m376\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type SlashingHandler: SlashingHandler<BlockNumberFor<Self>>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::SlashingHandler`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `ChannelManager`, `DefaultChannelSizeAndCapacityWithSystem`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":11126,"byte_end":11152,"line_start":386,"line_end":386,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"impl hrmp::Config for Test {","highlight_start":1,"highlight_end":27}],"label":"missing `ChannelManager`, `DefaultChannelSizeAndCapacityWithSystem` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `type ChannelManager = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":11316,"byte_end":11316,"line_start":391,"line_end":391,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type ChannelManager = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type DefaultChannelSizeAndCapacityWithSystem = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":11316,"byte_end":11316,"line_start":391,"line_end":391,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type DefaultChannelSizeAndCapacityWithSystem = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `ChannelManager`, `DefaultChannelSizeAndCapacityWithSystem`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:386:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m386\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl hrmp::Config for Test {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `ChannelManager`, `DefaultChannelSizeAndCapacityWithSystem` in implementation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type ChannelManager = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type DefaultChannelSizeAndCapacityWithSystem = /* Type */;`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `DisabledValidators`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":11319,"byte_end":11347,"line_start":393,"line_end":393,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"impl shared::Config for Test {}","highlight_start":1,"highlight_end":29}],"label":"missing `DisabledValidators` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `type DisabledValidators = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":11349,"byte_end":11349,"line_start":393,"line_end":393,"column_start":31,"column_end":31,"is_primary":true,"text":[{"text":"impl shared::Config for Test {}","highlight_start":31,"highlight_end":31}],"label":null,"suggested_replacement":"type DisabledValidators = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `DisabledValidators`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:393:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl shared::Config for Test {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `DisabledValidators` in implementation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type DisabledValidators = /* Type */;`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type mismatch resolving `<() as PriceForMessageDelivery>::Id == ParaId`","code":{"code":"E0271","explanation":"A type mismatched an associated type of a trait.\n\nErroneous code example:\n\n```compile_fail,E0271\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType=u32> {\n//                    ~~~~~~~~ ~~~~~~~~~~~~~~~~~~\n//                        |            |\n//         This says `foo` can         |\n//           only be used with         |\n//              some type that         |\n//         implements `Trait`.         |\n//                                     |\n//                             This says not only must\n//                             `T` be an impl of `Trait`\n//                             but also that the impl\n//                             must assign the type `u32`\n//                             to the associated type.\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n//~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//      |                             |\n// `i8` does have                     |\n// implementation                     |\n// of `Trait`...                      |\n//                     ... but it is an implementation\n//                     that assigns `&'static str` to\n//                     the associated type.\n\nfoo(3_i8);\n// Here, we invoke `foo` with an `i8`, which does not satisfy\n// the constraint `<i8 as Trait>::AssociatedType=u32`, and\n// therefore the type-checker complains with this error code.\n```\n\nThe issue can be resolved by changing the associated type:\n1) in the `foo` implementation:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = &'static str> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n\nfoo(3_i8);\n```\n\n2) in the `Trait` implementation for `i8`:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = u32> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = u32; }\n\nfoo(3_i8);\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":11858,"byte_end":11860,"line_start":411,"line_end":411,"column_start":33,"column_end":35,"is_primary":true,"text":[{"text":"\ttype PriceForSiblingDelivery = ();","highlight_start":33,"highlight_end":35}],"label":"expected `ParaId`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required by a bound in `cumulus_pallet_xcmp_queue::Config::PriceForSiblingDelivery`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs","byte_start":5812,"byte_end":5823,"line_start":143,"line_end":143,"column_start":57,"column_end":68,"is_primary":true,"text":[{"text":"\t\ttype PriceForSiblingDelivery: PriceForMessageDelivery<Id = ParaId>;","highlight_start":57,"highlight_end":68}],"label":"required by this bound in `Config::PriceForSiblingDelivery`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0271]\u001b[0m\u001b[0m\u001b[1m: type mismatch resolving `<() as PriceForMessageDelivery>::Id == ParaId`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:411:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m411\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type PriceForSiblingDelivery = ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `ParaId`, found `()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `cumulus_pallet_xcmp_queue::Config::PriceForSiblingDelivery`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/pallets/xcmp-queue/src/lib.rs:143:57\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type PriceForSiblingDelivery: PriceForMessageDelivery<Id = ParaId>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::PriceForSiblingDelivery`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `XcmpQueue`, `MaxInboundSuspended`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":11568,"byte_end":11615,"line_start":404,"line_end":404,"column_start":1,"column_end":48,"is_primary":true,"text":[{"text":"impl cumulus_pallet_xcmp_queue::Config for Test {","highlight_start":1,"highlight_end":48}],"label":"missing `XcmpQueue`, `MaxInboundSuspended` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `type XcmpQueue = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":11862,"byte_end":11862,"line_start":412,"line_end":412,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type XcmpQueue = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type MaxInboundSuspended = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":11862,"byte_end":11862,"line_start":412,"line_end":412,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type MaxInboundSuspended = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `XcmpQueue`, `MaxInboundSuspended`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:404:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m404\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl cumulus_pallet_xcmp_queue::Config for Test {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `XcmpQueue`, `MaxInboundSuspended` in implementation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type XcmpQueue = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type MaxInboundSuspended = /* Type */;`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `cumulus_primitives_core::Location: From<staging_xcm::v3::AssetId>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":14524,"byte_end":14533,"line_start":498,"line_end":498,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"\ttype XcmSender = XcmRouter;","highlight_start":19,"highlight_end":28}],"label":"the trait `From<staging_xcm::v3::AssetId>` is not implemented for `cumulus_primitives_core::Location`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::AggregateMessageOrigin>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junction>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junctions>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Parent>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::ParentThen>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Ancestor>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::AncestorThen<Interior>>>\n  <cumulus_primitives_core::Location as From<[u8; 32]>>\nand 108 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `staging_xcm::v3::AssetId` to implement `Into<cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `cumulus_primitives_core::AssetId` to implement `From<staging_xcm::v3::AssetId>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `FeeAssetId` to implement `sp_core::Get<cumulus_primitives_core::AssetId>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11811,"byte_end":11822,"line_start":323,"line_end":323,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":12464,"byte_end":12809,"line_start":427,"line_end":433,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\t/// The amount of weight an XCM operation takes. This is a safe overestimate.","highlight_start":1,"highlight_end":79},{"text":"\t/// The asset ID for the asset that we use to pay for message delivery fees.","highlight_start":1,"highlight_end":78},{"text":"\tpub FeeAssetId: AssetId = Concrete(RelayLocation::get());","highlight_start":1,"highlight_end":59},{"text":"\t/// The base fee for the message delivery fees.","highlight_start":1,"highlight_end":49},{"text":"\tpub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);","highlight_start":1,"highlight_end":60},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11842,"byte_end":11865,"line_start":323,"line_end":323,"column_start":43,"column_end":66,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":43,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":12464,"byte_end":12809,"line_start":427,"line_end":433,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\t/// The amount of weight an XCM operation takes. This is a safe overestimate.","highlight_start":1,"highlight_end":79},{"text":"\t/// The asset ID for the asset that we use to pay for message delivery fees.","highlight_start":1,"highlight_end":78},{"text":"\tpub FeeAssetId: AssetId = Concrete(RelayLocation::get());","highlight_start":1,"highlight_end":59},{"text":"\t/// The base fee for the message delivery fees.","highlight_start":1,"highlight_end":49},{"text":"\tpub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);","highlight_start":1,"highlight_end":60},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11870,"byte_end":11894,"line_start":323,"line_end":323,"column_start":71,"column_end":95,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":71,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":12464,"byte_end":12809,"line_start":427,"line_end":433,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\t/// The amount of weight an XCM operation takes. This is a safe overestimate.","highlight_start":1,"highlight_end":79},{"text":"\t/// The asset ID for the asset that we use to pay for message delivery fees.","highlight_start":1,"highlight_end":78},{"text":"\tpub FeeAssetId: AssetId = Concrete(RelayLocation::get());","highlight_start":1,"highlight_end":59},{"text":"\t/// The base fee for the message delivery fees.","highlight_start":1,"highlight_end":49},{"text":"\tpub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);","highlight_start":1,"highlight_end":60},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `ExponentialPrice<FeeAssetId, BaseDeliveryFee, TransactionByteFee, polkadot_runtime_parachains::dmp::Pallet<mock::relay::Test>>` to implement `PriceForMessageDelivery`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `ChildParachainRouter<Test, Pallet<Test>, ExponentialPrice<FeeAssetId, BaseDeliveryFee, ..., ...>>` to implement `cumulus_primitives_core::SendXcm`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-10374308755822688581.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `(ChildParachainRouter<Test, Pallet<Test>, ExponentialPrice<FeeAssetId, BaseDeliveryFee, ..., ...>>,)` to implement `cumulus_primitives_core::SendXcm`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-14263340955285980884.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `staging_xcm_executor::Config::XcmSender`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/xcm-executor/src/config.rs","byte_start":1500,"byte_end":1507,"line_start":36,"line_end":36,"column_start":18,"column_end":25,"is_primary":true,"text":[{"text":"\ttype XcmSender: SendXcm;","highlight_start":18,"highlight_end":25}],"label":"required by this bound in `Config::XcmSender`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `cumulus_primitives_core::Location: From<staging_xcm::v3::AssetId>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:498:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m498\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type XcmSender = XcmRouter;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<staging_xcm::v3::AssetId>` is not implemented for `cumulus_primitives_core::Location`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::AggregateMessageOrigin>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junction>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junctions>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Parent>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::ParentThen>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Ancestor>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::AncestorThen<Interior>>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<[u8; 32]>>\u001b[0m\n\u001b[0m            and 108 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `staging_xcm::v3::AssetId` to implement `Into<cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `cumulus_primitives_core::AssetId` to implement `From<staging_xcm::v3::AssetId>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `FeeAssetId` to implement `sp_core::Get<cumulus_primitives_core::AssetId>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:427:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m427\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m428\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// The amount of weight an XCM operation takes. This is a safe overestimate.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// The asset ID for the asset that we use to pay for message delivery fees.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m430\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub FeeAssetId: AssetId = Concrete(RelayLocation::get());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m431\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// The base fee for the message delivery fees.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m432\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m433\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `ExponentialPrice<FeeAssetId, BaseDeliveryFee, TransactionByteFee, polkadot_runtime_parachains::dmp::Pallet<mock::relay::Test>>` to implement `PriceForMessageDelivery`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `ChildParachainRouter<Test, Pallet<Test>, ExponentialPrice<FeeAssetId, BaseDeliveryFee, ..., ...>>` to implement `cumulus_primitives_core::SendXcm`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-10374308755822688581.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `(ChildParachainRouter<Test, Pallet<Test>, ExponentialPrice<FeeAssetId, BaseDeliveryFee, ..., ...>>,)` to implement `cumulus_primitives_core::SendXcm`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-14263340955285980884.txt'\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `staging_xcm_executor::Config::XcmSender`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/xcm-executor/src/config.rs:36:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type XcmSender: SendXcm;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::XcmSender`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `cumulus_primitives_core::Junction: From<staging_xcm::v3::Junctions>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":14645,"byte_end":14662,"line_start":502,"line_end":502,"column_start":27,"column_end":44,"is_primary":true,"text":[{"text":"\ttype UniversalLocation = UniversalLocation;","highlight_start":27,"highlight_end":44}],"label":"the trait `From<staging_xcm::v3::Junctions>` is not implemented for `cumulus_primitives_core::Junction`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <cumulus_primitives_core::Junction as From<u64>>\n  <cumulus_primitives_core::Junction as From<u128>>\n  <cumulus_primitives_core::Junction as From<sp_runtime::BoundedVec<u8, ConstU32<32>>>>\n  <cumulus_primitives_core::Junction as From<BoundedSlice<'a, u8, ConstU32<32>>>>\n  <cumulus_primitives_core::Junction as From<cumulus_primitives_core::NetworkId>>\n  <cumulus_primitives_core::Junction as From<[u8; 20]>>\n  <cumulus_primitives_core::Junction as From<[u8; 32]>>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `staging_xcm::v3::Junctions` to implement `Into<cumulus_primitives_core::Junction>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `cumulus_primitives_core::Junctions` to implement `From<staging_xcm::v3::Junctions>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `mock::relay::UniversalLocation` to implement `sp_core::Get<cumulus_primitives_core::Junctions>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11811,"byte_end":11822,"line_start":323,"line_end":323,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10573,"byte_end":10612,"line_start":279,"line_end":279,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11842,"byte_end":11865,"line_start":323,"line_end":323,"column_start":43,"column_end":66,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":43,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10573,"byte_end":10612,"line_start":279,"line_end":279,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11870,"byte_end":11894,"line_start":323,"line_end":323,"column_start":71,"column_end":95,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":71,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10573,"byte_end":10612,"line_start":279,"line_end":279,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required by a bound in `staging_xcm_executor::Config::UniversalLocation`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/xcm-executor/src/config.rs","byte_start":2225,"byte_end":2246,"line_start":55,"line_end":55,"column_start":26,"column_end":47,"is_primary":true,"text":[{"text":"\ttype UniversalLocation: Get<InteriorLocation>;","highlight_start":26,"highlight_end":47}],"label":"required by this bound in `Config::UniversalLocation`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `cumulus_primitives_core::Junction: From<staging_xcm::v3::Junctions>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:502:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m502\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type UniversalLocation = UniversalLocation;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<staging_xcm::v3::Junctions>` is not implemented for `cumulus_primitives_core::Junction`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<u64>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<u128>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<sp_runtime::BoundedVec<u8, ConstU32<32>>>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<BoundedSlice<'a, u8, ConstU32<32>>>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<cumulus_primitives_core::NetworkId>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<[u8; 20]>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<[u8; 32]>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `staging_xcm::v3::Junctions` to implement `Into<cumulus_primitives_core::Junction>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `cumulus_primitives_core::Junctions` to implement `From<staging_xcm::v3::Junctions>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `mock::relay::UniversalLocation` to implement `sp_core::Get<cumulus_primitives_core::Junctions>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:413:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayLocation: MultiLocation = MultiLocation::parent();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m416\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const AnyNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m418\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m419\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `staging_xcm_executor::Config::UniversalLocation`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/xcm-executor/src/config.rs:55:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type UniversalLocation: Get<InteriorLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::UniversalLocation`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `Aliasers`, `TransactionalProcessor`, `HrmpNewChannelOpenRequestHandler`, `HrmpChannelAcceptedHandler`, `HrmpChannelClosingHandler`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":14431,"byte_end":14470,"line_start":496,"line_end":496,"column_start":1,"column_end":40,"is_primary":true,"text":[{"text":"impl xcm_executor::Config for XcmConfig {","highlight_start":1,"highlight_end":40}],"label":"missing `Aliasers`, `TransactionalProcessor`, `HrmpNewChannelOpenRequestHandler`, `HrmpChannelAcceptedHandler`, `HrmpChannelClosingHandler` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `type Aliasers = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":15213,"byte_end":15213,"line_start":520,"line_end":520,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type Aliasers = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type TransactionalProcessor = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":15213,"byte_end":15213,"line_start":520,"line_end":520,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type TransactionalProcessor = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type HrmpNewChannelOpenRequestHandler = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":15213,"byte_end":15213,"line_start":520,"line_end":520,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type HrmpNewChannelOpenRequestHandler = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type HrmpChannelAcceptedHandler = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":15213,"byte_end":15213,"line_start":520,"line_end":520,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type HrmpChannelAcceptedHandler = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type HrmpChannelClosingHandler = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":15213,"byte_end":15213,"line_start":520,"line_end":520,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type HrmpChannelClosingHandler = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `Aliasers`, `TransactionalProcessor`, `HrmpNewChannelOpenRequestHandler`, `HrmpChannelAcceptedHandler`, `HrmpChannelClosingHandler`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:496:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m496\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl xcm_executor::Config for XcmConfig {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `Aliasers`, `TransactionalProcessor`, `HrmpNewChannelOpenRequestHandler`, `HrmpChannelAcceptedHandler`, `HrmpChannelClosingHandler` in implementation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type Aliasers = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type TransactionalProcessor = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type HrmpNewChannelOpenRequestHandler = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type HrmpChannelAcceptedHandler = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type HrmpChannelClosingHandler = /* Type */;`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `std::option::Option<cumulus_primitives_core::NetworkId>: From<std::option::Option<staging_xcm::v3::NetworkId>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":15527,"byte_end":15580,"line_start":531,"line_end":531,"column_start":23,"column_end":76,"is_primary":true,"text":[{"text":"\ttype SendXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":23,"highlight_end":76}],"label":"the trait `From<std::option::Option<staging_xcm::v3::NetworkId>>` is not implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `From<staging_xcm::v3::NetworkId>` is implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `staging_xcm::v3::NetworkId`, found `std::option::Option<staging_xcm::v3::NetworkId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `mock::relay::AnyNetwork` to implement `sp_core::Get<std::option::Option<cumulus_primitives_core::NetworkId>>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11282,"byte_end":11293,"line_start":302,"line_end":302,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11312,"byte_end":11335,"line_start":302,"line_end":302,"column_start":42,"column_end":65,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":42,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11340,"byte_end":11364,"line_start":302,"line_end":302,"column_start":70,"column_end":94,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":70,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `SignedToAccountId32<mock::relay::RuntimeOrigin, sp_runtime::AccountId32, mock::relay::AnyNetwork>` to implement `TryConvert<mock::relay::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<RuntimeOrigin, SignedToAccountId32<RuntimeOrigin, AccountId32, AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::relay::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-551004718312029703.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::SendXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":6287,"byte_end":6305,"line_start":219,"line_end":219,"column_start":72,"column_end":90,"is_primary":true,"text":[{"text":"\t\ttype SendXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;","highlight_start":72,"highlight_end":90}],"label":"required by this bound in `Config::SendXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `std::option::Option<cumulus_primitives_core::NetworkId>: From<std::option::Option<staging_xcm::v3::NetworkId>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:531:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m531\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type SendXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<std::option::Option<staging_xcm::v3::NetworkId>>` is not implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `From<staging_xcm::v3::NetworkId>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::option::Option<cumulus_primitives_core::NetworkId>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `staging_xcm::v3::NetworkId`, found `std::option::Option<staging_xcm::v3::NetworkId>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `mock::relay::AnyNetwork` to implement `sp_core::Get<std::option::Option<cumulus_primitives_core::NetworkId>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:413:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayLocation: MultiLocation = MultiLocation::parent();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m416\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const AnyNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m418\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m419\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::relay::RuntimeOrigin, sp_runtime::AccountId32, mock::relay::AnyNetwork>` to implement `TryConvert<mock::relay::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<RuntimeOrigin, SignedToAccountId32<RuntimeOrigin, AccountId32, AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::relay::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-551004718312029703.txt'\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::SendXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:219:72\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type SendXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::SendXcmOrigin`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `cumulus_primitives_core::Location: From<staging_xcm::v3::AssetId>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":15600,"byte_end":15609,"line_start":532,"line_end":532,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"\ttype XcmRouter = XcmRouter;","highlight_start":19,"highlight_end":28}],"label":"the trait `From<staging_xcm::v3::AssetId>` is not implemented for `cumulus_primitives_core::Location`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::AggregateMessageOrigin>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junction>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junctions>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Parent>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::ParentThen>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Ancestor>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::AncestorThen<Interior>>>\n  <cumulus_primitives_core::Location as From<[u8; 32]>>\nand 108 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `staging_xcm::v3::AssetId` to implement `Into<cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `cumulus_primitives_core::AssetId` to implement `From<staging_xcm::v3::AssetId>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `FeeAssetId` to implement `sp_core::Get<cumulus_primitives_core::AssetId>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11811,"byte_end":11822,"line_start":323,"line_end":323,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":12464,"byte_end":12809,"line_start":427,"line_end":433,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\t/// The amount of weight an XCM operation takes. This is a safe overestimate.","highlight_start":1,"highlight_end":79},{"text":"\t/// The asset ID for the asset that we use to pay for message delivery fees.","highlight_start":1,"highlight_end":78},{"text":"\tpub FeeAssetId: AssetId = Concrete(RelayLocation::get());","highlight_start":1,"highlight_end":59},{"text":"\t/// The base fee for the message delivery fees.","highlight_start":1,"highlight_end":49},{"text":"\tpub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);","highlight_start":1,"highlight_end":60},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11842,"byte_end":11865,"line_start":323,"line_end":323,"column_start":43,"column_end":66,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":43,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":12464,"byte_end":12809,"line_start":427,"line_end":433,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\t/// The amount of weight an XCM operation takes. This is a safe overestimate.","highlight_start":1,"highlight_end":79},{"text":"\t/// The asset ID for the asset that we use to pay for message delivery fees.","highlight_start":1,"highlight_end":78},{"text":"\tpub FeeAssetId: AssetId = Concrete(RelayLocation::get());","highlight_start":1,"highlight_end":59},{"text":"\t/// The base fee for the message delivery fees.","highlight_start":1,"highlight_end":49},{"text":"\tpub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);","highlight_start":1,"highlight_end":60},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11870,"byte_end":11894,"line_start":323,"line_end":323,"column_start":71,"column_end":95,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":71,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":12464,"byte_end":12809,"line_start":427,"line_end":433,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\t/// The amount of weight an XCM operation takes. This is a safe overestimate.","highlight_start":1,"highlight_end":79},{"text":"\t/// The asset ID for the asset that we use to pay for message delivery fees.","highlight_start":1,"highlight_end":78},{"text":"\tpub FeeAssetId: AssetId = Concrete(RelayLocation::get());","highlight_start":1,"highlight_end":59},{"text":"\t/// The base fee for the message delivery fees.","highlight_start":1,"highlight_end":49},{"text":"\tpub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);","highlight_start":1,"highlight_end":60},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `ExponentialPrice<FeeAssetId, BaseDeliveryFee, TransactionByteFee, polkadot_runtime_parachains::dmp::Pallet<mock::relay::Test>>` to implement `PriceForMessageDelivery`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `ChildParachainRouter<Test, Pallet<Test>, ExponentialPrice<FeeAssetId, BaseDeliveryFee, ..., ...>>` to implement `cumulus_primitives_core::SendXcm`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-10374308755822688581.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `(ChildParachainRouter<Test, Pallet<Test>, ExponentialPrice<FeeAssetId, BaseDeliveryFee, ..., ...>>,)` to implement `cumulus_primitives_core::SendXcm`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-14263340955285980884.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::XcmRouter`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":6395,"byte_end":6402,"line_start":222,"line_end":222,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"\t\ttype XcmRouter: SendXcm;","highlight_start":19,"highlight_end":26}],"label":"required by this bound in `Config::XcmRouter`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `cumulus_primitives_core::Location: From<staging_xcm::v3::AssetId>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:532:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m532\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type XcmRouter = XcmRouter;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<staging_xcm::v3::AssetId>` is not implemented for `cumulus_primitives_core::Location`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::AggregateMessageOrigin>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junction>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junctions>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Parent>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::ParentThen>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Ancestor>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::AncestorThen<Interior>>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<[u8; 32]>>\u001b[0m\n\u001b[0m            and 108 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `staging_xcm::v3::AssetId` to implement `Into<cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `cumulus_primitives_core::AssetId` to implement `From<staging_xcm::v3::AssetId>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `FeeAssetId` to implement `sp_core::Get<cumulus_primitives_core::AssetId>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:427:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m427\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m428\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// The amount of weight an XCM operation takes. This is a safe overestimate.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// The asset ID for the asset that we use to pay for message delivery fees.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m430\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub FeeAssetId: AssetId = Concrete(RelayLocation::get());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m431\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// The base fee for the message delivery fees.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m432\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m433\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `ExponentialPrice<FeeAssetId, BaseDeliveryFee, TransactionByteFee, polkadot_runtime_parachains::dmp::Pallet<mock::relay::Test>>` to implement `PriceForMessageDelivery`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `ChildParachainRouter<Test, Pallet<Test>, ExponentialPrice<FeeAssetId, BaseDeliveryFee, ..., ...>>` to implement `cumulus_primitives_core::SendXcm`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-10374308755822688581.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `(ChildParachainRouter<Test, Pallet<Test>, ExponentialPrice<FeeAssetId, BaseDeliveryFee, ..., ...>>,)` to implement `cumulus_primitives_core::SendXcm`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-14263340955285980884.txt'\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::XcmRouter`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:222:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type XcmRouter: SendXcm;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::XcmRouter`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `std::option::Option<cumulus_primitives_core::NetworkId>: From<std::option::Option<staging_xcm::v3::NetworkId>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":15636,"byte_end":15689,"line_start":533,"line_end":533,"column_start":26,"column_end":79,"is_primary":true,"text":[{"text":"\ttype ExecuteXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":26,"highlight_end":79}],"label":"the trait `From<std::option::Option<staging_xcm::v3::NetworkId>>` is not implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `From<staging_xcm::v3::NetworkId>` is implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `staging_xcm::v3::NetworkId`, found `std::option::Option<staging_xcm::v3::NetworkId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `mock::relay::AnyNetwork` to implement `sp_core::Get<std::option::Option<cumulus_primitives_core::NetworkId>>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11282,"byte_end":11293,"line_start":302,"line_end":302,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11312,"byte_end":11335,"line_start":302,"line_end":302,"column_start":42,"column_end":65,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":42,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11340,"byte_end":11364,"line_start":302,"line_end":302,"column_start":70,"column_end":94,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":70,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `SignedToAccountId32<mock::relay::RuntimeOrigin, sp_runtime::AccountId32, mock::relay::AnyNetwork>` to implement `TryConvert<mock::relay::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<RuntimeOrigin, SignedToAccountId32<RuntimeOrigin, AccountId32, AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::relay::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-551004718312029703.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::ExecuteXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":6695,"byte_end":6713,"line_start":227,"line_end":227,"column_start":75,"column_end":93,"is_primary":true,"text":[{"text":"\t\ttype ExecuteXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;","highlight_start":75,"highlight_end":93}],"label":"required by this bound in `Config::ExecuteXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `std::option::Option<cumulus_primitives_core::NetworkId>: From<std::option::Option<staging_xcm::v3::NetworkId>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:533:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m533\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ExecuteXcmOrigin = EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<std::option::Option<staging_xcm::v3::NetworkId>>` is not implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `From<staging_xcm::v3::NetworkId>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::option::Option<cumulus_primitives_core::NetworkId>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `staging_xcm::v3::NetworkId`, found `std::option::Option<staging_xcm::v3::NetworkId>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `mock::relay::AnyNetwork` to implement `sp_core::Get<std::option::Option<cumulus_primitives_core::NetworkId>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:413:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayLocation: MultiLocation = MultiLocation::parent();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m416\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const AnyNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m418\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m419\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::relay::RuntimeOrigin, sp_runtime::AccountId32, mock::relay::AnyNetwork>` to implement `TryConvert<mock::relay::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<RuntimeOrigin, SignedToAccountId32<RuntimeOrigin, AccountId32, AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::relay::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-551004718312029703.txt'\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::ExecuteXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:227:75\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ExecuteXcmOrigin: EnsureOrigin<<Self as SysConfig>::RuntimeOrigin, Success = Location>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ExecuteXcmOrigin`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `cumulus_primitives_core::Junction: From<staging_xcm::v3::Junctions>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":15959,"byte_end":15976,"line_start":539,"line_end":539,"column_start":27,"column_end":44,"is_primary":true,"text":[{"text":"\ttype UniversalLocation = UniversalLocation;","highlight_start":27,"highlight_end":44}],"label":"the trait `From<staging_xcm::v3::Junctions>` is not implemented for `cumulus_primitives_core::Junction`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <cumulus_primitives_core::Junction as From<u64>>\n  <cumulus_primitives_core::Junction as From<u128>>\n  <cumulus_primitives_core::Junction as From<sp_runtime::BoundedVec<u8, ConstU32<32>>>>\n  <cumulus_primitives_core::Junction as From<BoundedSlice<'a, u8, ConstU32<32>>>>\n  <cumulus_primitives_core::Junction as From<cumulus_primitives_core::NetworkId>>\n  <cumulus_primitives_core::Junction as From<[u8; 20]>>\n  <cumulus_primitives_core::Junction as From<[u8; 32]>>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `staging_xcm::v3::Junctions` to implement `Into<cumulus_primitives_core::Junction>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `cumulus_primitives_core::Junctions` to implement `From<staging_xcm::v3::Junctions>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `mock::relay::UniversalLocation` to implement `sp_core::Get<cumulus_primitives_core::Junctions>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11811,"byte_end":11822,"line_start":323,"line_end":323,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10573,"byte_end":10612,"line_start":279,"line_end":279,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11842,"byte_end":11865,"line_start":323,"line_end":323,"column_start":43,"column_end":66,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":43,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10573,"byte_end":10612,"line_start":279,"line_end":279,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11870,"byte_end":11894,"line_start":323,"line_end":323,"column_start":71,"column_end":95,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":71,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10573,"byte_end":10612,"line_start":279,"line_end":279,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required by a bound in `pallet_xcm::Config::UniversalLocation`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs","byte_start":7541,"byte_end":7562,"line_start":246,"line_end":246,"column_start":27,"column_end":48,"is_primary":true,"text":[{"text":"\t\ttype UniversalLocation: Get<InteriorLocation>;","highlight_start":27,"highlight_end":48}],"label":"required by this bound in `Config::UniversalLocation`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `cumulus_primitives_core::Junction: From<staging_xcm::v3::Junctions>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:539:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m539\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type UniversalLocation = UniversalLocation;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<staging_xcm::v3::Junctions>` is not implemented for `cumulus_primitives_core::Junction`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<u64>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<u128>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<sp_runtime::BoundedVec<u8, ConstU32<32>>>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<BoundedSlice<'a, u8, ConstU32<32>>>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<cumulus_primitives_core::NetworkId>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<[u8; 20]>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Junction as From<[u8; 32]>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `staging_xcm::v3::Junctions` to implement `Into<cumulus_primitives_core::Junction>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `cumulus_primitives_core::Junctions` to implement `From<staging_xcm::v3::Junctions>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `mock::relay::UniversalLocation` to implement `sp_core::Get<cumulus_primitives_core::Junctions>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:413:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayLocation: MultiLocation = MultiLocation::parent();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m416\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const AnyNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m418\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m419\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet_xcm::Config::UniversalLocation`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/pallet-xcm/src/lib.rs:246:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type UniversalLocation: Get<InteriorLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::UniversalLocation`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `QueuePausedQuery`, `IdleMaxServiceWeight`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":17340,"byte_end":17382,"line_start":587,"line_end":587,"column_start":1,"column_end":43,"is_primary":true,"text":[{"text":"impl pallet_message_queue::Config for Test {","highlight_start":1,"highlight_end":43}],"label":"missing `QueuePausedQuery`, `IdleMaxServiceWeight` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `type QueuePausedQuery = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":17693,"byte_end":17693,"line_start":597,"line_end":597,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type QueuePausedQuery = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `type IdleMaxServiceWeight = /* Type */;`","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":17693,"byte_end":17693,"line_start":597,"line_end":597,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"type IdleMaxServiceWeight = /* Type */;\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `QueuePausedQuery`, `IdleMaxServiceWeight`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:587:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m587\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl pallet_message_queue::Config for Test {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `QueuePausedQuery`, `IdleMaxServiceWeight` in implementation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type QueuePausedQuery = /* Type */;`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mimplement the missing item: `type IdleMaxServiceWeight = /* Type */;`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `std::option::Option<cumulus_primitives_core::NetworkId>: From<std::option::Option<staging_xcm::v3::NetworkId>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":17836,"byte_end":17902,"line_start":602,"line_end":602,"column_start":26,"column_end":92,"is_primary":true,"text":[{"text":"\ttype ExecuteXcmOrigin = xcm_builder::EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;","highlight_start":26,"highlight_end":92}],"label":"the trait `From<std::option::Option<staging_xcm::v3::NetworkId>>` is not implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `From<staging_xcm::v3::NetworkId>` is implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `staging_xcm::v3::NetworkId`, found `std::option::Option<staging_xcm::v3::NetworkId>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `mock::relay::AnyNetwork` to implement `sp_core::Get<std::option::Option<cumulus_primitives_core::NetworkId>>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11282,"byte_end":11293,"line_start":302,"line_end":302,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11312,"byte_end":11335,"line_start":302,"line_end":302,"column_start":42,"column_end":65,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":42,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11340,"byte_end":11364,"line_start":302,"line_end":302,"column_start":70,"column_end":94,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type> $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":70,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10094,"byte_end":10176,"line_start":266,"line_end":266,"column_start":3,"column_end":85,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL_CONST $name , $type , $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10180,"byte_end":10219,"line_start":267,"line_end":267,"column_start":3,"column_end":42,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!( $( $rest )* );","highlight_start":3,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":11864,"byte_end":12236,"line_start":413,"line_end":419,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\tpub const RelayLocation: MultiLocation = MultiLocation::parent();","highlight_start":1,"highlight_end":67},{"text":"\tpub const RelayNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":51},{"text":"\tpub const AnyNetwork: Option<NetworkId> = None;","highlight_start":1,"highlight_end":49},{"text":"\tpub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();","highlight_start":1,"highlight_end":81},{"text":"\tpub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();","highlight_start":1,"highlight_end":104},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `SignedToAccountId32<mock::relay::RuntimeOrigin, sp_runtime::AccountId32, mock::relay::AnyNetwork>` to implement `TryConvert<mock::relay::RuntimeOrigin, cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `EnsureXcmOrigin<RuntimeOrigin, SignedToAccountId32<RuntimeOrigin, AccountId32, AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::relay::RuntimeOrigin>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-551004718312029703.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet::Config::ExecuteXcmOrigin`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":4205,"byte_end":4221,"line_start":120,"line_end":120,"column_start":8,"column_end":24,"is_primary":false,"text":[{"text":"\t\ttype ExecuteXcmOrigin: EnsureOrigin<","highlight_start":8,"highlight_end":24}],"label":"required by a bound in this associated type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":4282,"byte_end":4300,"line_start":122,"line_end":122,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"\t\t\tSuccess = Location,","highlight_start":4,"highlight_end":22}],"label":"required by this bound in `Config::ExecuteXcmOrigin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `std::option::Option<cumulus_primitives_core::NetworkId>: From<std::option::Option<staging_xcm::v3::NetworkId>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:602:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m602\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type ExecuteXcmOrigin = xcm_builder::EnsureXcmOrigin<RuntimeOrigin, LocalOriginToLocation>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<std::option::Option<staging_xcm::v3::NetworkId>>` is not implemented for `std::option::Option<cumulus_primitives_core::NetworkId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `From<staging_xcm::v3::NetworkId>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::option::Option<cumulus_primitives_core::NetworkId>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `staging_xcm::v3::NetworkId`, found `std::option::Option<staging_xcm::v3::NetworkId>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `mock::relay::AnyNetwork` to implement `sp_core::Get<std::option::Option<cumulus_primitives_core::NetworkId>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:413:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayLocation: MultiLocation = MultiLocation::parent();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const RelayNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m416\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const AnyNetwork: Option<NetworkId> = None;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub RelayChainOrigin: RuntimeOrigin = cumulus_pallet_xcm::Origin::Relay.into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m418\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub UniversalLocation: InteriorMultiLocation = Parachain(ParachainInfo::parachain_id().into()).into();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m419\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `SignedToAccountId32<mock::relay::RuntimeOrigin, sp_runtime::AccountId32, mock::relay::AnyNetwork>` to implement `TryConvert<mock::relay::RuntimeOrigin, cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `EnsureXcmOrigin<RuntimeOrigin, SignedToAccountId32<RuntimeOrigin, AccountId32, AnyNetwork>>` to implement `frame_support::traits::EnsureOrigin<mock::relay::RuntimeOrigin>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-551004718312029703.txt'\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet::Config::ExecuteXcmOrigin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:122:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type ExecuteXcmOrigin: EnsureOrigin<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this associated type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            <Self as SystemConfig>::RuntimeOrigin,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Success = Location,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::ExecuteXcmOrigin`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `cumulus_primitives_core::Location: From<staging_xcm::v3::AssetId>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":17922,"byte_end":17931,"line_start":603,"line_end":603,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"\ttype XcmSender = XcmRouter;","highlight_start":19,"highlight_end":28}],"label":"the trait `From<staging_xcm::v3::AssetId>` is not implemented for `cumulus_primitives_core::Location`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::AggregateMessageOrigin>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junction>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junctions>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Parent>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::ParentThen>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::Ancestor>>\n  <cumulus_primitives_core::Location as From<cumulus_primitives_core::AncestorThen<Interior>>>\n  <cumulus_primitives_core::Location as From<[u8; 32]>>\nand 108 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `staging_xcm::v3::AssetId` to implement `Into<cumulus_primitives_core::Location>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `cumulus_primitives_core::AssetId` to implement `From<staging_xcm::v3::AssetId>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `FeeAssetId` to implement `sp_core::Get<cumulus_primitives_core::AssetId>`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11811,"byte_end":11822,"line_start":323,"line_end":323,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":12,"highlight_end":23}],"label":"unsatisfied trait bound introduced here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":12464,"byte_end":12809,"line_start":427,"line_end":433,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\t/// The amount of weight an XCM operation takes. This is a safe overestimate.","highlight_start":1,"highlight_end":79},{"text":"\t/// The asset ID for the asset that we use to pay for message delivery fees.","highlight_start":1,"highlight_end":78},{"text":"\tpub FeeAssetId: AssetId = Concrete(RelayLocation::get());","highlight_start":1,"highlight_end":59},{"text":"\t/// The base fee for the message delivery fees.","highlight_start":1,"highlight_end":49},{"text":"\tpub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);","highlight_start":1,"highlight_end":60},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11842,"byte_end":11865,"line_start":323,"line_end":323,"column_start":43,"column_end":66,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":43,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":12464,"byte_end":12809,"line_start":427,"line_end":433,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\t/// The amount of weight an XCM operation takes. This is a safe overestimate.","highlight_start":1,"highlight_end":79},{"text":"\t/// The asset ID for the asset that we use to pay for message delivery fees.","highlight_start":1,"highlight_end":78},{"text":"\tpub FeeAssetId: AssetId = Concrete(RelayLocation::get());","highlight_start":1,"highlight_end":59},{"text":"\t/// The base fee for the message delivery fees.","highlight_start":1,"highlight_end":49},{"text":"\tpub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);","highlight_start":1,"highlight_end":60},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":11870,"byte_end":11894,"line_start":323,"line_end":323,"column_start":71,"column_end":95,"is_primary":true,"text":[{"text":"\t\timpl<_I: From<$type>, $(, $ty_params)*> $crate::traits::Get<_I> for $name< $($ty_params),* > {","highlight_start":71,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":10495,"byte_end":10569,"line_start":278,"line_end":278,"column_start":3,"column_end":77,"is_primary":false,"text":[{"text":"\t\t$crate::parameter_types!(IMPL $name, $type, $value $( $(, $ty_params)* )?);","highlight_start":3,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/relay.rs","byte_start":12464,"byte_end":12809,"line_start":427,"line_end":433,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"parameter_types! {","highlight_start":1,"highlight_end":19},{"text":"\t/// The amount of weight an XCM operation takes. This is a safe overestimate.","highlight_start":1,"highlight_end":79},{"text":"\t/// The asset ID for the asset that we use to pay for message delivery fees.","highlight_start":1,"highlight_end":78},{"text":"\tpub FeeAssetId: AssetId = Concrete(RelayLocation::get());","highlight_start":1,"highlight_end":59},{"text":"\t/// The base fee for the message delivery fees.","highlight_start":1,"highlight_end":49},{"text":"\tpub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);","highlight_start":1,"highlight_end":60},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::parameter_types!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/src/lib.rs","byte_start":9787,"byte_end":9815,"line_start":256,"line_end":256,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! parameter_types {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `ExponentialPrice<FeeAssetId, BaseDeliveryFee, TransactionByteFee, polkadot_runtime_parachains::dmp::Pallet<mock::relay::Test>>` to implement `PriceForMessageDelivery`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `ChildParachainRouter<Test, Pallet<Test>, ExponentialPrice<FeeAssetId, BaseDeliveryFee, ..., ...>>` to implement `cumulus_primitives_core::SendXcm`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-10374308755822688581.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `(ChildParachainRouter<Test, Pallet<Test>, ExponentialPrice<FeeAssetId, BaseDeliveryFee, ..., ...>>,)` to implement `cumulus_primitives_core::SendXcm`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-14263340955285980884.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `pallet::Config::XcmSender`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":4652,"byte_end":4659,"line_start":130,"line_end":130,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"\t\ttype XcmSender: SendXcm;","highlight_start":19,"highlight_end":26}],"label":"required by this bound in `Config::XcmSender`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `cumulus_primitives_core::Location: From<staging_xcm::v3::AssetId>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:603:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m603\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type XcmSender = XcmRouter;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<staging_xcm::v3::AssetId>` is not implemented for `cumulus_primitives_core::Location`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::AggregateMessageOrigin>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junction>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Junctions>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Parent>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::ParentThen>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::Ancestor>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<cumulus_primitives_core::AncestorThen<Interior>>>\u001b[0m\n\u001b[0m              <cumulus_primitives_core::Location as From<[u8; 32]>>\u001b[0m\n\u001b[0m            and 108 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `staging_xcm::v3::AssetId` to implement `Into<cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `cumulus_primitives_core::AssetId` to implement `From<staging_xcm::v3::AssetId>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `FeeAssetId` to implement `sp_core::Get<cumulus_primitives_core::AssetId>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:427:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m427\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mparameter_types! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m428\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// The amount of weight an XCM operation takes. This is a safe overestimate.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// The asset ID for the asset that we use to pay for message delivery fees.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m430\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub FeeAssetId: AssetId = Concrete(RelayLocation::get());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m431\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// The base fee for the message delivery fees.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m432\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const BaseDeliveryFee: u128 = CENTS.saturating_mul(3);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m433\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `ExponentialPrice<FeeAssetId, BaseDeliveryFee, TransactionByteFee, polkadot_runtime_parachains::dmp::Pallet<mock::relay::Test>>` to implement `PriceForMessageDelivery`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `ChildParachainRouter<Test, Pallet<Test>, ExponentialPrice<FeeAssetId, BaseDeliveryFee, ..., ...>>` to implement `cumulus_primitives_core::SendXcm`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-10374308755822688581.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `(ChildParachainRouter<Test, Pallet<Test>, ExponentialPrice<FeeAssetId, BaseDeliveryFee, ..., ...>>,)` to implement `cumulus_primitives_core::SendXcm`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/data/Project/xnft/xnft/pallet-xnft/target/debug/deps/pallet_xnft-d192d4d41dd3a065.long-type-14263340955285980884.txt'\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `pallet::Config::XcmSender`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:130:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type XcmSender: SendXcm;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Config::XcmSender`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::parameter_types` which comes from the expansion of the macro `parameter_types` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":2223,"byte_end":2226,"line_start":64,"line_end":64,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"\tRuntimeOrigin::signed(who)","highlight_start":24,"highlight_end":27}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/mock/para.rs","byte_start":2201,"byte_end":2222,"line_start":64,"line_end":64,"column_start":2,"column_end":23,"is_primary":false,"text":[{"text":"\tRuntimeOrigin::signed(who)","highlight_start":2,"highlight_end":23}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/mock/para.rs","byte_start":2955,"byte_end":6214922,"line_start":86,"line_end":652,"column_start":1,"column_end":10,"is_primary":true,"text":[],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":2955,"byte_end":6214922,"line_start":86,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":2955,"byte_end":3483,"line_start":86,"line_end":103,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"construct_runtime!(","highlight_start":1,"highlight_end":20},{"text":"\tpub enum Test where","highlight_start":1,"highlight_end":21},{"text":"\t\tBlock = Block,","highlight_start":1,"highlight_end":17},{"text":"\t\tNodeBlock = Block,","highlight_start":1,"highlight_end":21},{"text":"\t\tUncheckedExtrinsic = UncheckedExtrinsics,","highlight_start":1,"highlight_end":44},{"text":"\t{","highlight_start":1,"highlight_end":3},{"text":"\t\tSystem: frame_system::{Pallet, Call, Config<T>, Storage, Event<T>},","highlight_start":1,"highlight_end":70},{"text":"\t\tBalances: pallet_balances,","highlight_start":1,"highlight_end":29},{"text":"\t\tParachainInfo: parachain_info,","highlight_start":1,"highlight_end":33},{"text":"\t\tXcmpQueue: cumulus_pallet_xcmp_queue,","highlight_start":1,"highlight_end":40},{"text":"\t\tDmpQueue: cumulus_pallet_dmp_queue,","highlight_start":1,"highlight_end":38},{"text":"\t\tCumulusXcm: cumulus_pallet_xcm,","highlight_start":1,"highlight_end":34},{"text":"\t\tPolkadotXcm: pallet_xcm,","highlight_start":1,"highlight_end":27},{"text":"\t\tXnft: pallet_xnft,","highlight_start":1,"highlight_end":21},{"text":"\t\tParachainSystem: cumulus_pallet_parachain_system,","highlight_start":1,"highlight_end":52},{"text":"\t\tNFT:pallet_nfts::{Pallet, Call, Storage, Event<T>},","highlight_start":1,"highlight_end":54},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:64:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    RuntimeOrigin::signed(who)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:86:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mconstruct_runtime!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum Test where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Block = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        NodeBlock = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `frame_support::construct_runtime` which comes from the expansion of the macro `construct_runtime` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method takes 0 generic arguments but 1 generic argument was supplied","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":14683,"byte_end":14696,"line_start":409,"line_end":409,"column_start":41,"column_end":54,"is_primary":true,"text":[{"text":"\tframe_system::GenesisConfig::default().build_storage::<Test>().unwrap().into()","highlight_start":41,"highlight_end":54}],"label":"expected 0 generic arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here, with 0 generic parameters","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/primitives/runtime/src/lib.rs","byte_start":7343,"byte_end":7356,"line_start":216,"line_end":216,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"\tfn build_storage(&self) -> Result<sp_core::storage::Storage, String> {","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove these generics","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":14696,"byte_end":14704,"line_start":409,"line_end":409,"column_start":54,"column_end":62,"is_primary":true,"text":[{"text":"\tframe_system::GenesisConfig::default().build_storage::<Test>().unwrap().into()","highlight_start":54,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: method takes 0 generic arguments but 1 generic argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:409:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m409\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    frame_system::GenesisConfig::default().build_storage::<Test>().unwrap().into()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove these generics\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 0 generic arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: method defined here, with 0 generic parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/primitives/runtime/src/lib.rs:216:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn build_storage(&self) -> Result<sp_core::storage::Storage, String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method takes 0 generic arguments but 1 generic argument was supplied","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/para.rs","byte_start":14945,"byte_end":14958,"line_start":421,"line_end":421,"column_start":56,"column_end":69,"is_primary":true,"text":[{"text":"\t\tlet storage = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();","highlight_start":56,"highlight_end":69}],"label":"expected 0 generic arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here, with 0 generic parameters","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/primitives/runtime/src/lib.rs","byte_start":7343,"byte_end":7356,"line_start":216,"line_end":216,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"\tfn build_storage(&self) -> Result<sp_core::storage::Storage, String> {","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove these generics","code":null,"level":"help","spans":[{"file_name":"src/mock/para.rs","byte_start":14958,"byte_end":14966,"line_start":421,"line_end":421,"column_start":69,"column_end":77,"is_primary":true,"text":[{"text":"\t\tlet storage = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();","highlight_start":69,"highlight_end":77}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: method takes 0 generic arguments but 1 generic argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:421:56\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m421\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let storage = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove these generics\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 0 generic arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: method defined here, with 0 generic parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/primitives/runtime/src/lib.rs:216:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn build_storage(&self) -> Result<sp_core::storage::Storage, String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `process_message` exists for struct `ProcessXcmMessage<Junction, XcmExecutor<XcmConfig>, RuntimeCall>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":17247,"byte_end":17262,"line_start":578,"line_end":578,"column_start":98,"column_end":113,"is_primary":true,"text":[{"text":"\t\txcm_builder::ProcessXcmMessage::<Junction, xcm_executor::XcmExecutor<XcmConfig>, RuntimeCall>::process_message(","highlight_start":98,"highlight_end":113}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/src/v3/junction.rs","byte_start":8204,"byte_end":8221,"line_start":300,"line_end":300,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub enum Junction {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `_: Into<Location>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/xcm-builder/src/process_xcm_message.rs","byte_start":1169,"byte_end":1231,"line_start":29,"line_end":29,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"pub struct ProcessXcmMessage<MessageOrigin, XcmExecutor, Call>(","highlight_start":1,"highlight_end":63}],"label":"doesn't satisfy `_: ProcessMessage`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`staging_xcm::v3::Junction: Into<cumulus_primitives_core::Location>`\nwhich is required by `ProcessXcmMessage<staging_xcm::v3::Junction, XcmExecutor<mock::relay::XcmConfig>, mock::relay::RuntimeCall>: ProcessMessage`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `process_message` exists for struct `ProcessXcmMessage<Junction, XcmExecutor<XcmConfig>, RuntimeCall>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:578:98\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m578\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        xcm_builder::ProcessXcmMessage::<Junction, xcm_executor::XcmExecutor<XcmConfig>, RuntimeCall>::process_message(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/src/v3/junction.rs:300:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum Junction {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Into<Location>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/xcm-builder/src/process_xcm_message.rs:29:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct ProcessXcmMessage<MessageOrigin, XcmExecutor, Call>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: ProcessMessage`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `staging_xcm::v3::Junction: Into<cumulus_primitives_core::Location>`\u001b[0m\n\u001b[0m            which is required by `ProcessXcmMessage<staging_xcm::v3::Junction, XcmExecutor<mock::relay::XcmConfig>, mock::relay::RuntimeCall>: ProcessMessage`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method takes 0 generic arguments but 1 generic argument was supplied","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/relay.rs","byte_start":18285,"byte_end":18298,"line_start":620,"line_end":620,"column_start":56,"column_end":69,"is_primary":true,"text":[{"text":"\t\tlet storage = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();","highlight_start":56,"highlight_end":69}],"label":"expected 0 generic arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here, with 0 generic parameters","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/primitives/runtime/src/lib.rs","byte_start":7343,"byte_end":7356,"line_start":216,"line_end":216,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"\tfn build_storage(&self) -> Result<sp_core::storage::Storage, String> {","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove these generics","code":null,"level":"help","spans":[{"file_name":"src/mock/relay.rs","byte_start":18298,"byte_end":18306,"line_start":620,"line_end":620,"column_start":69,"column_end":77,"is_primary":true,"text":[{"text":"\t\tlet storage = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();","highlight_start":69,"highlight_end":77}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: method takes 0 generic arguments but 1 generic argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:620:56\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m620\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let storage = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove these generics\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 0 generic arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: method defined here, with 0 generic parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/primitives/runtime/src/lib.rs:216:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn build_storage(&self) -> Result<sp_core::storage::Storage, String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `handle_dmp_messages` found for struct `cumulus_pallet_dmp_queue::Pallet` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/xcm-simulator/src/lib.rs","byte_start":6584,"byte_end":6603,"line_start":210,"line_end":210,"column_start":30,"column_end":49,"is_primary":true,"text":[{"text":"\t\t\t\t\t<$dmp_message_handler>::handle_dmp_messages(iter, max_weight)","highlight_start":30,"highlight_end":49}],"label":"function or associated item not found in `Pallet<Test>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/mod.rs","byte_start":660,"byte_end":834,"line_start":22,"line_end":29,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"decl_test_parachain! {","highlight_start":1,"highlight_end":23},{"text":"\tpub struct Para1 {","highlight_start":1,"highlight_end":20},{"text":"\t\tRuntime = para::Test,","highlight_start":1,"highlight_end":24},{"text":"\t\tXcmpMessageHandler = para::XcmpQueue,","highlight_start":1,"highlight_end":40},{"text":"\t\tDmpMessageHandler = para::DmpQueue,","highlight_start":1,"highlight_end":38},{"text":"\t\tnew_ext = para_ext(4),","highlight_start":1,"highlight_end":25},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"decl_test_parachain!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/xcm-simulator/src/lib.rs","byte_start":5581,"byte_end":5613,"line_start":173,"line_end":173,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"macro_rules! decl_test_parachain {","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `handle_dmp_messages` found for struct `cumulus_pallet_dmp_queue::Pallet` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:22:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mdecl_test_parachain! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Para1 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Runtime = para::Test,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        XcmpMessageHandler = para::XcmpQueue,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item not found in `Pallet<Test>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `decl_test_parachain` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `handle_dmp_messages` found for struct `cumulus_pallet_dmp_queue::Pallet` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/xcm-simulator/src/lib.rs","byte_start":6584,"byte_end":6603,"line_start":210,"line_end":210,"column_start":30,"column_end":49,"is_primary":true,"text":[{"text":"\t\t\t\t\t<$dmp_message_handler>::handle_dmp_messages(iter, max_weight)","highlight_start":30,"highlight_end":49}],"label":"function or associated item not found in `Pallet<Test>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/mod.rs","byte_start":836,"byte_end":1010,"line_start":31,"line_end":38,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"decl_test_parachain! {","highlight_start":1,"highlight_end":23},{"text":"\tpub struct Para2 {","highlight_start":1,"highlight_end":20},{"text":"\t\tRuntime = para::Test,","highlight_start":1,"highlight_end":24},{"text":"\t\tXcmpMessageHandler = para::XcmpQueue,","highlight_start":1,"highlight_end":40},{"text":"\t\tDmpMessageHandler = para::DmpQueue,","highlight_start":1,"highlight_end":38},{"text":"\t\tnew_ext = para_ext(4),","highlight_start":1,"highlight_end":25},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"decl_test_parachain!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/polkadot/xcm/xcm-simulator/src/lib.rs","byte_start":5581,"byte_end":5613,"line_start":173,"line_end":173,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"macro_rules! decl_test_parachain {","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `handle_dmp_messages` found for struct `cumulus_pallet_dmp_queue::Pallet` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:31:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mdecl_test_parachain! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Para2 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Runtime = para::Test,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        XcmpMessageHandler = para::XcmpQueue,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item not found in `Pallet<Test>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `decl_test_parachain` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method takes 0 generic arguments but 1 generic argument was supplied","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/mod.rs","byte_start":1708,"byte_end":1721,"line_start":67,"line_end":67,"column_start":53,"column_end":66,"is_primary":true,"text":[{"text":"\tlet mut t = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();","highlight_start":53,"highlight_end":66}],"label":"expected 0 generic arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here, with 0 generic parameters","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/primitives/runtime/src/lib.rs","byte_start":7343,"byte_end":7356,"line_start":216,"line_end":216,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"\tfn build_storage(&self) -> Result<sp_core::storage::Storage, String> {","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove these generics","code":null,"level":"help","spans":[{"file_name":"src/mock/mod.rs","byte_start":1721,"byte_end":1729,"line_start":67,"line_end":67,"column_start":66,"column_end":74,"is_primary":true,"text":[{"text":"\tlet mut t = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();","highlight_start":66,"highlight_end":74}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: method takes 0 generic arguments but 1 generic argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:67:53\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut t = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove these generics\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 0 generic arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: method defined here, with 0 generic parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/primitives/runtime/src/lib.rs:216:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn build_storage(&self) -> Result<sp_core::storage::Storage, String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"missing field `_config` in initializer of `staging_parachain_info::GenesisConfig<_>`","code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/mod.rs","byte_start":1772,"byte_end":1801,"line_start":69,"line_end":69,"column_start":30,"column_end":59,"is_primary":true,"text":[{"text":"\tlet parachain_info_config = parachain_info::GenesisConfig { parachain_id: para_id.into() };","highlight_start":30,"highlight_end":59}],"label":"missing `_config`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0063]\u001b[0m\u001b[0m\u001b[1m: missing field `_config` in initializer of `staging_parachain_info::GenesisConfig<_>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:69:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let parachain_info_config = parachain_info::GenesisConfig { parachain_id: para_id.into() };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `_config`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"missing generics for struct `staging_parachain_info::GenesisConfig`","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/mod.rs","byte_start":1854,"byte_end":1867,"line_start":70,"line_end":70,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"\t<parachain_info::GenesisConfig as BuildGenesisBuild<Test, _>>::assimilate_storage(","highlight_start":19,"highlight_end":32}],"label":"expected 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct defined here, with 1 generic parameter: `T`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/parachains/pallets/parachain-info/src/lib.rs","byte_start":1292,"byte_end":1293,"line_start":42,"line_end":42,"column_start":27,"column_end":28,"is_primary":false,"text":[{"text":"\tpub struct GenesisConfig<T: Config> {","highlight_start":27,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/parachains/pallets/parachain-info/src/lib.rs","byte_start":1278,"byte_end":1291,"line_start":42,"line_end":42,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"\tpub struct GenesisConfig<T: Config> {","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"src/mock/mod.rs","byte_start":1867,"byte_end":1867,"line_start":70,"line_end":70,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"\t<parachain_info::GenesisConfig as BuildGenesisBuild<Test, _>>::assimilate_storage(","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":"<T>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: missing generics for struct `staging_parachain_info::GenesisConfig`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:70:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    <parachain_info::GenesisConfig as BuildGenesisBuild<Test, _>>::assimilate_storage(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 1 generic parameter: `T`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/parachains/pallets/parachain-info/src/lib.rs:42:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct GenesisConfig<T: Config> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    <parachain_info::GenesisConfig\u001b[0m\u001b[0m\u001b[38;5;10m<T>\u001b[0m\u001b[0m as BuildGenesisBuild<Test, _>>::assimilate_storage(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method takes 0 generic arguments but 1 generic argument was supplied","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/mod.rs","byte_start":2215,"byte_end":2228,"line_start":84,"line_end":84,"column_start":53,"column_end":66,"is_primary":true,"text":[{"text":"\tlet mut t = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();","highlight_start":53,"highlight_end":66}],"label":"expected 0 generic arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here, with 0 generic parameters","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/primitives/runtime/src/lib.rs","byte_start":7343,"byte_end":7356,"line_start":216,"line_end":216,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"\tfn build_storage(&self) -> Result<sp_core::storage::Storage, String> {","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove these generics","code":null,"level":"help","spans":[{"file_name":"src/mock/mod.rs","byte_start":2228,"byte_end":2236,"line_start":84,"line_end":84,"column_start":66,"column_end":74,"is_primary":true,"text":[{"text":"\tlet mut t = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();","highlight_start":66,"highlight_end":74}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: method takes 0 generic arguments but 1 generic argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:84:53\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut t = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove these generics\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 0 generic arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: method defined here, with 0 generic parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/primitives/runtime/src/lib.rs:216:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn build_storage(&self) -> Result<sp_core::storage::Storage, String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"missing field `_config` in initializer of `staging_parachain_info::GenesisConfig<_>`","code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/mod.rs","byte_start":2279,"byte_end":2308,"line_start":86,"line_end":86,"column_start":30,"column_end":59,"is_primary":true,"text":[{"text":"\tlet parachain_info_config = parachain_info::GenesisConfig { parachain_id: para_id.into() };","highlight_start":30,"highlight_end":59}],"label":"missing `_config`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0063]\u001b[0m\u001b[0m\u001b[1m: missing field `_config` in initializer of `staging_parachain_info::GenesisConfig<_>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:86:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let parachain_info_config = parachain_info::GenesisConfig { parachain_id: para_id.into() };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `_config`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"missing generics for struct `staging_parachain_info::GenesisConfig`","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/mod.rs","byte_start":2361,"byte_end":2374,"line_start":87,"line_end":87,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"\t<parachain_info::GenesisConfig as BuildGenesisBuild<Test, _>>::assimilate_storage(","highlight_start":19,"highlight_end":32}],"label":"expected 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct defined here, with 1 generic parameter: `T`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/parachains/pallets/parachain-info/src/lib.rs","byte_start":1292,"byte_end":1293,"line_start":42,"line_end":42,"column_start":27,"column_end":28,"is_primary":false,"text":[{"text":"\tpub struct GenesisConfig<T: Config> {","highlight_start":27,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/parachains/pallets/parachain-info/src/lib.rs","byte_start":1278,"byte_end":1291,"line_start":42,"line_end":42,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"\tpub struct GenesisConfig<T: Config> {","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"src/mock/mod.rs","byte_start":2374,"byte_end":2374,"line_start":87,"line_end":87,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"\t<parachain_info::GenesisConfig as BuildGenesisBuild<Test, _>>::assimilate_storage(","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":"<T>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: missing generics for struct `staging_parachain_info::GenesisConfig`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:87:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    <parachain_info::GenesisConfig as BuildGenesisBuild<Test, _>>::assimilate_storage(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 1 generic parameter: `T`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/cumulus/parachains/pallets/parachain-info/src/lib.rs:42:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct GenesisConfig<T: Config> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    <parachain_info::GenesisConfig\u001b[0m\u001b[0m\u001b[38;5;10m<T>\u001b[0m\u001b[0m as BuildGenesisBuild<Test, _>>::assimilate_storage(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method takes 0 generic arguments but 1 generic argument was supplied","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/mock/mod.rs","byte_start":2711,"byte_end":2724,"line_start":102,"line_end":102,"column_start":53,"column_end":66,"is_primary":true,"text":[{"text":"\tlet mut t = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();","highlight_start":53,"highlight_end":66}],"label":"expected 0 generic arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here, with 0 generic parameters","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/primitives/runtime/src/lib.rs","byte_start":7343,"byte_end":7356,"line_start":216,"line_end":216,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"\tfn build_storage(&self) -> Result<sp_core::storage::Storage, String> {","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove these generics","code":null,"level":"help","spans":[{"file_name":"src/mock/mod.rs","byte_start":2724,"byte_end":2732,"line_start":102,"line_end":102,"column_start":66,"column_end":74,"is_primary":true,"text":[{"text":"\tlet mut t = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();","highlight_start":66,"highlight_end":74}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: method takes 0 generic arguments but 1 generic argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/mod.rs:102:53\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut t = frame_system::GenesisConfig::default().build_storage::<Test>().unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove these generics\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 0 generic arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: method defined here, with 0 generic parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/primitives/runtime/src/lib.rs:216:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn build_storage(&self) -> Result<sp_core::storage::Storage, String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `sp_runtime::AccountId32: std::marker::Copy` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":690,"byte_end":692,"line_start":25,"line_end":25,"column_start":22,"column_end":24,"is_primary":true,"text":[{"text":"\tlet account :u64 = [id; 32].into();","highlight_start":22,"highlight_end":24}],"label":"the trait `std::marker::Copy` is not implemented for `sp_runtime::AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `Copy` trait is required because this value will be copied for each element of the array","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `sp_runtime::AccountId32: std::marker::Copy` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:25:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let account :u64 = [id; 32].into();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `std::marker::Copy` is not implemented for `sp_runtime::AccountId32`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `Copy` trait is required because this value will be copied for each element of the array\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `u64: From<[sp_runtime::AccountId32; 32]>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":698,"byte_end":702,"line_start":25,"line_end":25,"column_start":30,"column_end":34,"is_primary":true,"text":[{"text":"\tlet account :u64 = [id; 32].into();","highlight_start":30,"highlight_end":34}],"label":"the trait `From<[sp_runtime::AccountId32; 32]>` is not implemented for `u64`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <u64 as From<bool>>\n  <u64 as From<char>>\n  <u64 as From<u8>>\n  <u64 as From<u16>>\n  <u64 as From<u32>>\n  <u64 as From<sp_timestamp::Timestamp>>\n  <u64 as From<cumulus_primitives_core::relay_chain::Slot>>\n  <u64 as From<sp_wasm_interface::Pointer<T>>>\nand 8 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `[sp_runtime::AccountId32; 32]` to implement `Into<u64>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `u64: From<[sp_runtime::AccountId32; 32]>` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:25:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let account :u64 = [id; 32].into();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<[sp_runtime::AccountId32; 32]>` is not implemented for `u64`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m             <u64 as From<bool>>\u001b[0m\n\u001b[0m             <u64 as From<char>>\u001b[0m\n\u001b[0m             <u64 as From<u8>>\u001b[0m\n\u001b[0m             <u64 as From<u16>>\u001b[0m\n\u001b[0m             <u64 as From<u32>>\u001b[0m\n\u001b[0m             <u64 as From<sp_timestamp::Timestamp>>\u001b[0m\n\u001b[0m             <u64 as From<cumulus_primitives_core::relay_chain::Slot>>\u001b[0m\n\u001b[0m             <u64 as From<sp_wasm_interface::Pointer<T>>>\u001b[0m\n\u001b[0m           and 8 others\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `[sp_runtime::AccountId32; 32]` to implement `Into<u64>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":3050,"byte_end":3080,"line_start":125,"line_end":125,"column_start":4,"column_end":34,"is_primary":true,"text":[{"text":"\t\t\tfetch.sibling_account2.clone(),","highlight_start":4,"highlight_end":34}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":2972,"byte_end":3003,"line_start":123,"line_end":123,"column_start":14,"column_end":45,"is_primary":false,"text":[{"text":"\t\tassert_ok!(ParaChain1::collection_transfer(","highlight_start":14,"highlight_end":45}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":8598,"byte_end":8635,"line_start":236,"line_end":236,"column_start":4,"column_end":41,"is_primary":false,"text":[{"text":"\t\t\tsibling_account: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":8549,"byte_end":8568,"line_start":234,"line_end":234,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"\t\tpub fn collection_transfer(","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:125:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_ok!(ParaChain1::collection_transfer(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            RuntimeOrigin::signed(account(ALICE)),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            fetch.sibling_account2.clone(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:234:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn collection_transfer(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            origin: OriginFor<T>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            sibling_account: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":4434,"byte_end":4456,"line_start":188,"line_end":188,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"\t\t\t\tfetch.sibling_account2,","highlight_start":5,"highlight_end":27}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":4356,"byte_end":4387,"line_start":186,"line_end":186,"column_start":4,"column_end":35,"is_primary":false,"text":[{"text":"\t\t\tParaChain1::collection_transfer(","highlight_start":4,"highlight_end":35}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":8598,"byte_end":8635,"line_start":236,"line_end":236,"column_start":4,"column_end":41,"is_primary":false,"text":[{"text":"\t\t\tsibling_account: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":8549,"byte_end":8568,"line_start":234,"line_end":234,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"\t\tpub fn collection_transfer(","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:188:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ParaChain1::collection_transfer(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                RuntimeOrigin::signed(account(BOB)),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                fetch.sibling_account2,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:234:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn collection_transfer(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            origin: OriginFor<T>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            sibling_account: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":5622,"byte_end":5652,"line_start":238,"line_end":238,"column_start":4,"column_end":34,"is_primary":true,"text":[{"text":"\t\t\tfetch.sibling_account1.clone(),","highlight_start":4,"highlight_end":34}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":5457,"byte_end":5481,"line_start":232,"line_end":232,"column_start":14,"column_end":38,"is_primary":false,"text":[{"text":"\t\tassert_ok!(ParaChain1::nft_transfer(","highlight_start":14,"highlight_end":38}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":11245,"byte_end":11282,"line_start":304,"line_end":304,"column_start":4,"column_end":41,"is_primary":false,"text":[{"text":"\t\t\tmint_to_sibling: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11077,"byte_end":11089,"line_start":298,"line_end":298,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"\t\tpub fn nft_transfer(","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:238:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_ok!(ParaChain1::nft_transfer(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            fetch.sibling_account1.clone(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:298:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn nft_transfer(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m304\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            mint_to_sibling: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":6024,"byte_end":6027,"line_start":257,"line_end":257,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"\t\t\t\tRuntimeOrigin::signed(BOB),","highlight_start":27,"highlight_end":30}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":6002,"byte_end":6023,"line_start":257,"line_end":257,"column_start":5,"column_end":26,"is_primary":false,"text":[{"text":"\t\t\t\tRuntimeOrigin::signed(BOB),","highlight_start":5,"highlight_end":26}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/mock/para.rs","byte_start":2955,"byte_end":6214922,"line_start":86,"line_end":652,"column_start":1,"column_end":10,"is_primary":true,"text":[],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":2955,"byte_end":6214922,"line_start":86,"line_end":652,"column_start":1,"column_end":10,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/mock/para.rs","byte_start":2955,"byte_end":3483,"line_start":86,"line_end":103,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"construct_runtime!(","highlight_start":1,"highlight_end":20},{"text":"\tpub enum Test where","highlight_start":1,"highlight_end":21},{"text":"\t\tBlock = Block,","highlight_start":1,"highlight_end":17},{"text":"\t\tNodeBlock = Block,","highlight_start":1,"highlight_end":21},{"text":"\t\tUncheckedExtrinsic = UncheckedExtrinsics,","highlight_start":1,"highlight_end":44},{"text":"\t{","highlight_start":1,"highlight_end":3},{"text":"\t\tSystem: frame_system::{Pallet, Call, Config<T>, Storage, Event<T>},","highlight_start":1,"highlight_end":70},{"text":"\t\tBalances: pallet_balances,","highlight_start":1,"highlight_end":29},{"text":"\t\tParachainInfo: parachain_info,","highlight_start":1,"highlight_end":33},{"text":"\t\tXcmpQueue: cumulus_pallet_xcmp_queue,","highlight_start":1,"highlight_end":40},{"text":"\t\tDmpQueue: cumulus_pallet_dmp_queue,","highlight_start":1,"highlight_end":38},{"text":"\t\tCumulusXcm: cumulus_pallet_xcm,","highlight_start":1,"highlight_end":34},{"text":"\t\tPolkadotXcm: pallet_xcm,","highlight_start":1,"highlight_end":27},{"text":"\t\tXnft: pallet_xnft,","highlight_start":1,"highlight_end":21},{"text":"\t\tParachainSystem: cumulus_pallet_parachain_system,","highlight_start":1,"highlight_end":52},{"text":"\t\tNFT:pallet_nfts::{Pallet, Call, Storage, Event<T>},","highlight_start":1,"highlight_end":54},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"frame_support::construct_runtime!","def_site_span":{"file_name":"/home/user/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/8c8edac/substrate/frame/support/procedural/src/lib.rs","byte_start":7582,"byte_end":7641,"line_start":188,"line_end":188,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"pub fn construct_runtime(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:257:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                RuntimeOrigin::signed(BOB),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/para.rs:86:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mconstruct_runtime!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum Test where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Block = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        NodeBlock = Block,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `frame_support::construct_runtime` which comes from the expansion of the macro `construct_runtime` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arguments to this function are incorrect","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":6132,"byte_end":6154,"line_start":262,"line_end":262,"column_start":5,"column_end":27,"is_primary":false,"text":[{"text":"\t\t\t\tfetch.sibling_account2,","highlight_start":5,"highlight_end":27}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":6160,"byte_end":6165,"line_start":263,"line_end":263,"column_start":5,"column_end":10,"is_primary":false,"text":[{"text":"\t\t\t\towner,","highlight_start":5,"highlight_end":10}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":5972,"byte_end":5996,"line_start":256,"line_end":256,"column_start":4,"column_end":28,"is_primary":true,"text":[{"text":"\t\t\tParaChain1::nft_transfer(","highlight_start":4,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":11094,"byte_end":11114,"line_start":299,"line_end":299,"column_start":4,"column_end":24,"is_primary":false,"text":[{"text":"\t\t\torigin: OriginFor<T>,","highlight_start":4,"highlight_end":24}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11119,"byte_end":11149,"line_start":300,"line_end":300,"column_start":4,"column_end":34,"is_primary":false,"text":[{"text":"\t\t\tcollection_id: T::CollectionId,","highlight_start":4,"highlight_end":34}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11154,"byte_end":11172,"line_start":301,"line_end":301,"column_start":4,"column_end":22,"is_primary":false,"text":[{"text":"\t\t\titem_id: T::ItemId,","highlight_start":4,"highlight_end":22}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11177,"byte_end":11212,"line_start":302,"line_end":302,"column_start":4,"column_end":39,"is_primary":false,"text":[{"text":"\t\t\tdest_collection_id: T::CollectionId,","highlight_start":4,"highlight_end":39}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11217,"byte_end":11240,"line_start":303,"line_end":303,"column_start":4,"column_end":27,"is_primary":false,"text":[{"text":"\t\t\tdest_item_id: T::ItemId,","highlight_start":4,"highlight_end":27}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11245,"byte_end":11282,"line_start":304,"line_end":304,"column_start":4,"column_end":41,"is_primary":false,"text":[{"text":"\t\t\tmint_to_sibling: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11287,"byte_end":11318,"line_start":305,"line_end":305,"column_start":4,"column_end":35,"is_primary":false,"text":[{"text":"\t\t\tnew_owner: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11323,"byte_end":11337,"line_start":306,"line_end":306,"column_start":4,"column_end":18,"is_primary":false,"text":[{"text":"\t\t\tdest: Location,","highlight_start":4,"highlight_end":18}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11077,"byte_end":11089,"line_start":298,"line_end":298,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"\t\tpub fn nft_transfer(","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: arguments to this function are incorrect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:256:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ParaChain1::nft_transfer(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                fetch.sibling_account2,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                owner,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:298:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn nft_transfer(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m299\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            origin: OriginFor<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            collection_id: T::CollectionId,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m301\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            item_id: T::ItemId,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            dest_collection_id: T::CollectionId,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            dest_item_id: T::ItemId,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m304\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            mint_to_sibling: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m305\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            new_owner: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            dest: Location,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arguments to this function are incorrect","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":6709,"byte_end":6731,"line_start":289,"line_end":289,"column_start":5,"column_end":27,"is_primary":false,"text":[{"text":"\t\t\t\tfetch.sibling_account2,","highlight_start":5,"highlight_end":27}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":6737,"byte_end":6743,"line_start":290,"line_end":290,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"\t\t\t\towner1,","highlight_start":5,"highlight_end":11}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":6543,"byte_end":6567,"line_start":283,"line_end":283,"column_start":4,"column_end":28,"is_primary":true,"text":[{"text":"\t\t\tParaChain1::nft_transfer(","highlight_start":4,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":11094,"byte_end":11114,"line_start":299,"line_end":299,"column_start":4,"column_end":24,"is_primary":false,"text":[{"text":"\t\t\torigin: OriginFor<T>,","highlight_start":4,"highlight_end":24}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11119,"byte_end":11149,"line_start":300,"line_end":300,"column_start":4,"column_end":34,"is_primary":false,"text":[{"text":"\t\t\tcollection_id: T::CollectionId,","highlight_start":4,"highlight_end":34}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11154,"byte_end":11172,"line_start":301,"line_end":301,"column_start":4,"column_end":22,"is_primary":false,"text":[{"text":"\t\t\titem_id: T::ItemId,","highlight_start":4,"highlight_end":22}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11177,"byte_end":11212,"line_start":302,"line_end":302,"column_start":4,"column_end":39,"is_primary":false,"text":[{"text":"\t\t\tdest_collection_id: T::CollectionId,","highlight_start":4,"highlight_end":39}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11217,"byte_end":11240,"line_start":303,"line_end":303,"column_start":4,"column_end":27,"is_primary":false,"text":[{"text":"\t\t\tdest_item_id: T::ItemId,","highlight_start":4,"highlight_end":27}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11245,"byte_end":11282,"line_start":304,"line_end":304,"column_start":4,"column_end":41,"is_primary":false,"text":[{"text":"\t\t\tmint_to_sibling: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11287,"byte_end":11318,"line_start":305,"line_end":305,"column_start":4,"column_end":35,"is_primary":false,"text":[{"text":"\t\t\tnew_owner: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11323,"byte_end":11337,"line_start":306,"line_end":306,"column_start":4,"column_end":18,"is_primary":false,"text":[{"text":"\t\t\tdest: Location,","highlight_start":4,"highlight_end":18}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11077,"byte_end":11089,"line_start":298,"line_end":298,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"\t\tpub fn nft_transfer(","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: arguments to this function are incorrect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:283:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ParaChain1::nft_transfer(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                fetch.sibling_account2,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                owner1,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:298:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn nft_transfer(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m299\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            origin: OriginFor<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            collection_id: T::CollectionId,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m301\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            item_id: T::ItemId,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            dest_collection_id: T::CollectionId,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            dest_item_id: T::ItemId,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m304\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            mint_to_sibling: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m305\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            new_owner: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            dest: Location,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arguments to this function are incorrect","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":7282,"byte_end":7304,"line_start":316,"line_end":316,"column_start":5,"column_end":27,"is_primary":false,"text":[{"text":"\t\t\t\tfetch.sibling_account2,","highlight_start":5,"highlight_end":27}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":7310,"byte_end":7316,"line_start":317,"line_end":317,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"\t\t\t\towner1,","highlight_start":5,"highlight_end":11}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":7116,"byte_end":7140,"line_start":310,"line_end":310,"column_start":4,"column_end":28,"is_primary":true,"text":[{"text":"\t\t\tParaChain1::nft_transfer(","highlight_start":4,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":11094,"byte_end":11114,"line_start":299,"line_end":299,"column_start":4,"column_end":24,"is_primary":false,"text":[{"text":"\t\t\torigin: OriginFor<T>,","highlight_start":4,"highlight_end":24}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11119,"byte_end":11149,"line_start":300,"line_end":300,"column_start":4,"column_end":34,"is_primary":false,"text":[{"text":"\t\t\tcollection_id: T::CollectionId,","highlight_start":4,"highlight_end":34}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11154,"byte_end":11172,"line_start":301,"line_end":301,"column_start":4,"column_end":22,"is_primary":false,"text":[{"text":"\t\t\titem_id: T::ItemId,","highlight_start":4,"highlight_end":22}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11177,"byte_end":11212,"line_start":302,"line_end":302,"column_start":4,"column_end":39,"is_primary":false,"text":[{"text":"\t\t\tdest_collection_id: T::CollectionId,","highlight_start":4,"highlight_end":39}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11217,"byte_end":11240,"line_start":303,"line_end":303,"column_start":4,"column_end":27,"is_primary":false,"text":[{"text":"\t\t\tdest_item_id: T::ItemId,","highlight_start":4,"highlight_end":27}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11245,"byte_end":11282,"line_start":304,"line_end":304,"column_start":4,"column_end":41,"is_primary":false,"text":[{"text":"\t\t\tmint_to_sibling: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11287,"byte_end":11318,"line_start":305,"line_end":305,"column_start":4,"column_end":35,"is_primary":false,"text":[{"text":"\t\t\tnew_owner: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11323,"byte_end":11337,"line_start":306,"line_end":306,"column_start":4,"column_end":18,"is_primary":false,"text":[{"text":"\t\t\tdest: Location,","highlight_start":4,"highlight_end":18}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":11077,"byte_end":11089,"line_start":298,"line_end":298,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"\t\tpub fn nft_transfer(","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: arguments to this function are incorrect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:310:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ParaChain1::nft_transfer(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                fetch.sibling_account2,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m317\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                owner1,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:298:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn nft_transfer(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m299\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            origin: OriginFor<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            collection_id: T::CollectionId,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m301\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            item_id: T::ItemId,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            dest_collection_id: T::CollectionId,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            dest_item_id: T::ItemId,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m304\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            mint_to_sibling: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m305\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            new_owner: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            dest: Location,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":7707,"byte_end":7737,"line_start":335,"line_end":335,"column_start":4,"column_end":34,"is_primary":true,"text":[{"text":"\t\t\tfetch.sibling_account2.clone(),","highlight_start":4,"highlight_end":34}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":7619,"byte_end":7660,"line_start":333,"line_end":333,"column_start":14,"column_end":55,"is_primary":false,"text":[{"text":"\t\tassert_ok!(ParaChain1::transfer_collection_ownership(","highlight_start":14,"highlight_end":55}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":13525,"byte_end":13556,"line_start":379,"line_end":379,"column_start":4,"column_end":35,"is_primary":false,"text":[{"text":"\t\t\tnew_owner: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":13466,"byte_end":13495,"line_start":377,"line_end":377,"column_start":10,"column_end":39,"is_primary":true,"text":[{"text":"\t\tpub fn transfer_collection_ownership(","highlight_start":10,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:335:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m333\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_ok!(ParaChain1::transfer_collection_ownership(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            RuntimeOrigin::signed(account(ALICE)),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m335\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            fetch.sibling_account2.clone(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:377:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m377\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn transfer_collection_ownership(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m378\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            origin: OriginFor<T>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m379\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            new_owner: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":11487,"byte_end":11523,"line_start":499,"line_end":499,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"\t\t\t\tmulti_fetch.sibling_account1.clone(),","highlight_start":5,"highlight_end":41}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":11293,"byte_end":11324,"line_start":493,"line_end":493,"column_start":4,"column_end":35,"is_primary":false,"text":[{"text":"\t\t\tParaChain1::transfer_multi_nfts(","highlight_start":4,"highlight_end":35}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":15111,"byte_end":15148,"line_start":420,"line_end":420,"column_start":4,"column_end":41,"is_primary":false,"text":[{"text":"\t\t\tmint_to_sibling: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":14926,"byte_end":14945,"line_start":414,"line_end":414,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"\t\tpub fn transfer_multi_nfts(","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:499:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m493\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ParaChain1::transfer_multi_nfts(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m499\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                multi_fetch.sibling_account1.clone(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:414:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn transfer_multi_nfts(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            mint_to_sibling: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":12470,"byte_end":12506,"line_start":542,"line_end":542,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"\t\t\t\tmulti_fetch.sibling_account1.clone(),","highlight_start":5,"highlight_end":41}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":12276,"byte_end":12307,"line_start":536,"line_end":536,"column_start":4,"column_end":35,"is_primary":false,"text":[{"text":"\t\t\tParaChain1::transfer_multi_nfts(","highlight_start":4,"highlight_end":35}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":15111,"byte_end":15148,"line_start":420,"line_end":420,"column_start":4,"column_end":41,"is_primary":false,"text":[{"text":"\t\t\tmint_to_sibling: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":14926,"byte_end":14945,"line_start":414,"line_end":414,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"\t\tpub fn transfer_multi_nfts(","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:542:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m536\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ParaChain1::transfer_multi_nfts(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m542\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                multi_fetch.sibling_account1.clone(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:414:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn transfer_multi_nfts(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            mint_to_sibling: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":13381,"byte_end":13417,"line_start":582,"line_end":582,"column_start":4,"column_end":40,"is_primary":true,"text":[{"text":"\t\t\tmulti_fetch.sibling_account1.clone(),","highlight_start":4,"highlight_end":40}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":13177,"byte_end":13208,"line_start":576,"line_end":576,"column_start":14,"column_end":45,"is_primary":false,"text":[{"text":"\t\tassert_ok!(ParaChain1::transfer_multi_nfts(","highlight_start":14,"highlight_end":45}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":15111,"byte_end":15148,"line_start":420,"line_end":420,"column_start":4,"column_end":41,"is_primary":false,"text":[{"text":"\t\t\tmint_to_sibling: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":14926,"byte_end":14945,"line_start":414,"line_end":414,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"\t\tpub fn transfer_multi_nfts(","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:582:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m576\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_ok!(ParaChain1::transfer_multi_nfts(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m582\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            multi_fetch.sibling_account1.clone(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:414:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn transfer_multi_nfts(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            mint_to_sibling: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":13577,"byte_end":13580,"line_start":587,"line_end":587,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t\t\tBOB,","highlight_start":4,"highlight_end":7}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":13495,"byte_end":13530,"line_start":585,"line_end":585,"column_start":14,"column_end":49,"is_primary":false,"text":[{"text":"\t\tassert_ok!(ParaChain1::transfer_nfts_ownership(","highlight_start":14,"highlight_end":49}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":17618,"byte_end":17649,"line_start":493,"line_end":493,"column_start":4,"column_end":35,"is_primary":false,"text":[{"text":"\t\t\tnew_owner: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":17565,"byte_end":17588,"line_start":491,"line_end":491,"column_start":10,"column_end":33,"is_primary":true,"text":[{"text":"\t\tpub fn transfer_nfts_ownership(","highlight_start":10,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:587:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m585\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_ok!(ParaChain1::transfer_nfts_ownership(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m586\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            RuntimeOrigin::signed(account(ALICE)),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m587\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            BOB,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:491:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m491\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn transfer_nfts_ownership(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m492\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            origin: OriginFor<T>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m493\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            new_owner: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":14729,"byte_end":14765,"line_start":638,"line_end":638,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"\t\t\t\tmulti_fetch.sibling_account1.clone(),","highlight_start":5,"highlight_end":41}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":14535,"byte_end":14566,"line_start":632,"line_end":632,"column_start":4,"column_end":35,"is_primary":false,"text":[{"text":"\t\t\tParaChain1::transfer_multi_nfts(","highlight_start":4,"highlight_end":35}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":15111,"byte_end":15148,"line_start":420,"line_end":420,"column_start":4,"column_end":41,"is_primary":false,"text":[{"text":"\t\t\tmint_to_sibling: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":14926,"byte_end":14945,"line_start":414,"line_end":414,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"\t\tpub fn transfer_multi_nfts(","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:638:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m632\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ParaChain1::transfer_multi_nfts(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m638\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                multi_fetch.sibling_account1.clone(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:414:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn transfer_multi_nfts(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            mint_to_sibling: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":16344,"byte_end":16380,"line_start":706,"line_end":706,"column_start":4,"column_end":40,"is_primary":true,"text":[{"text":"\t\t\tmulti_fetch.sibling_account1.clone(),","highlight_start":4,"highlight_end":40}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":16140,"byte_end":16171,"line_start":700,"line_end":700,"column_start":14,"column_end":45,"is_primary":false,"text":[{"text":"\t\tassert_ok!(ParaChain1::transfer_multi_nfts(","highlight_start":14,"highlight_end":45}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":15111,"byte_end":15148,"line_start":420,"line_end":420,"column_start":4,"column_end":41,"is_primary":false,"text":[{"text":"\t\t\tmint_to_sibling: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":14926,"byte_end":14945,"line_start":414,"line_end":414,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"\t\tpub fn transfer_multi_nfts(","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:706:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m700\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_ok!(ParaChain1::transfer_multi_nfts(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m706\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            multi_fetch.sibling_account1.clone(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:414:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn transfer_multi_nfts(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            mint_to_sibling: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":17958,"byte_end":17994,"line_start":773,"line_end":773,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"\t\t\t\tmulti_fetch.sibling_account1.clone(),","highlight_start":5,"highlight_end":41}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":17764,"byte_end":17795,"line_start":767,"line_end":767,"column_start":4,"column_end":35,"is_primary":false,"text":[{"text":"\t\t\tParaChain1::transfer_multi_nfts(","highlight_start":4,"highlight_end":35}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":15111,"byte_end":15148,"line_start":420,"line_end":420,"column_start":4,"column_end":41,"is_primary":false,"text":[{"text":"\t\t\tmint_to_sibling: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":14926,"byte_end":14945,"line_start":414,"line_end":414,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"\t\tpub fn transfer_multi_nfts(","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:773:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m767\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ParaChain1::transfer_multi_nfts(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m773\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                multi_fetch.sibling_account1.clone(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:414:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn transfer_multi_nfts(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            mint_to_sibling: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/test.rs","byte_start":19571,"byte_end":19607,"line_start":840,"line_end":840,"column_start":4,"column_end":40,"is_primary":true,"text":[{"text":"\t\t\tmulti_fetch.sibling_account1.clone(),","highlight_start":4,"highlight_end":40}],"label":"expected `u64`, found `AccountId32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":19367,"byte_end":19398,"line_start":834,"line_end":834,"column_start":14,"column_end":45,"is_primary":false,"text":[{"text":"\t\tassert_ok!(ParaChain1::transfer_multi_nfts(","highlight_start":14,"highlight_end":45}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":15111,"byte_end":15148,"line_start":420,"line_end":420,"column_start":4,"column_end":41,"is_primary":false,"text":[{"text":"\t\t\tmint_to_sibling: AccountIdLookupOf<T>,","highlight_start":4,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":14926,"byte_end":14945,"line_start":414,"line_end":414,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"\t\tpub fn transfer_multi_nfts(","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:840:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m834\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_ok!(ParaChain1::transfer_multi_nfts(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m840\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            multi_fetch.sibling_account1.clone(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `AccountId32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:414:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn transfer_multi_nfts(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            mint_to_sibling: AccountIdLookupOf<T>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Get`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/mock/relay.rs","byte_start":760,"byte_end":763,"line_start":25,"line_end":25,"column_start":35,"column_end":38,"is_primary":true,"text":[{"text":"\tpallet_prelude::{DispatchResult, Get},","highlight_start":35,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Get`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mock/relay.rs:25:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pallet_prelude::{DispatchResult, Get},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 86 previous errors; 7 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 86 previous errors; 7 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0046, E0063, E0107, E0271, E0277, E0308, E0412, E0425, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0046, E0063, E0107, E0271, E0277, E0308, E0412, E0425, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0046`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0046`.\u001b[0m\n"}
